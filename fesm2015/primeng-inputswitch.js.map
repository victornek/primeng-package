{"version":3,"file":"primeng-inputswitch.js","sources":["../../src/app/components/inputswitch/inputswitch.ts","../../src/app/components/inputswitch/primeng-inputswitch.ts"],"sourcesContent":["import {NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputSwitch),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-inputSwitch',\r\n    template: `\r\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \r\n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\r\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\r\n            </div>\r\n            <span class=\"p-inputswitch-slider\"></span>\r\n        </div>\r\n    `,\r\n    providers: [INPUTSWITCH_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./inputswitch.css']\r\n})\r\nexport class InputSwitch implements ControlValueAccessor {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    checked: boolean = false;\r\n\r\n    focused: boolean = false;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    constructor(private cd: ChangeDetectorRef) {}\r\n\r\n    onClick(event: Event, cb: HTMLInputElement) {\r\n        if (!this.disabled && !this.readonly) {\r\n            event.preventDefault();\r\n            this.toggle(event);\r\n            cb.focus();\r\n        }\r\n    }\r\n\r\n    onInputChange(event: Event) {\r\n        if (!this.readonly) {\r\n            const inputChecked = (<HTMLInputElement> event.target).checked;\r\n            this.updateModel(event, inputChecked);\r\n        }\r\n    }\r\n\r\n    toggle(event: Event) {\r\n        this.updateModel(event, !this.checked);\r\n    }\r\n\r\n    updateModel(event: Event, value: boolean) {\r\n        this.checked = value;\r\n        this.onModelChange(this.checked);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            checked: this.checked\r\n        });\r\n    }\r\n\r\n    onFocus(event: Event) {\r\n        this.focused = true;\r\n    }\r\n\r\n    onBlur(event: Event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(checked: any) : void {\r\n        this.checked = checked;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputSwitch],\r\n    declarations: [InputSwitch]\r\n})\r\nexport class InputSwitchModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;MAIa,0BAA0B,GAAQ;IAC7C,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,WAAW,CAAC;IAC1C,KAAK,EAAE,IAAI;EACX;MAmBW,WAAW;IA4BpB,YAAoB,EAAqB;QAArB,OAAE,GAAF,EAAE,CAAmB;QAV/B,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QAE3D,YAAO,GAAY,KAAK,CAAC;QAEzB,YAAO,GAAY,KAAK,CAAC;QAEzB,kBAAa,GAAa,SAAQ,CAAC;QAEnC,mBAAc,GAAa,SAAQ,CAAC;KAES;IAE7C,OAAO,CAAC,KAAY,EAAE,EAAoB;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACnB,EAAE,CAAC,KAAK,EAAE,CAAC;SACd;KACJ;IAED,aAAa,CAAC,KAAY;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,MAAM,YAAY,GAAuB,KAAK,CAAC,MAAO,CAAC,OAAO,CAAC;YAC/D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;SACzC;KACJ;IAED,MAAM,CAAC,KAAY;QACf,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1C;IAED,WAAW,CAAC,KAAY,EAAE,KAAc;QACpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACf,aAAa,EAAE,KAAK;YACpB,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC,CAAC;KACN;IAED,OAAO,CAAC,KAAY;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;IAED,MAAM,CAAC,KAAY;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,UAAU,CAAC,OAAY;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KAC1B;IAED,gBAAgB,CAAC,EAAY;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,EAAY;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B;IAED,gBAAgB,CAAC,GAAY;QACzB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KAC1B;;;YApGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;KAST;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aAExC;;;YA1B+D,iBAAiB;;;oBA6B5E,KAAK;yBAEL,KAAK;uBAEL,KAAK;sBAEL,KAAK;mBAEL,KAAK;uBAEL,KAAK;uBAEL,KAAK;6BAEL,KAAK;uBAEL,MAAM;;MAyEE,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,WAAW,CAAC;gBACtB,YAAY,EAAE,CAAC,WAAW,CAAC;aAC9B;;;ACrHD;;;;;;"}