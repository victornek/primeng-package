{"version":3,"file":"primeng-treetable.js","sources":["../../src/app/components/treetable/treetable.ts","../../src/app/components/treetable/primeng-treetable.ts"],"sourcesContent":["import { NgModule, AfterContentInit, OnInit, OnDestroy, HostListener, Injectable, Directive, Component, Input, Output, EventEmitter, ContentChildren, TemplateRef, QueryList, ElementRef, NgZone, ViewChild, AfterViewInit, AfterViewChecked, OnChanges, SimpleChanges, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\r\nimport { SortMeta } from 'primeng/api';\r\nimport { BlockableUI } from 'primeng/api';\r\nimport { FilterMetadata } from 'primeng/api';\r\nimport { ObjectUtils } from 'primeng/utils';\r\nimport { FilterUtils } from 'primeng/utils';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ScrollingModule, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\n\r\n@Injectable()\r\nexport class TreeTableService {\r\n\r\n    private sortSource = new Subject<SortMeta|SortMeta[]>();\r\n    private selectionSource = new Subject();\r\n    private contextMenuSource = new Subject<any>();\r\n    private uiUpdateSource = new Subject<any>();\r\n    private totalRecordsSource = new Subject<any>();\r\n\r\n    sortSource$ = this.sortSource.asObservable();\r\n    selectionSource$ = this.selectionSource.asObservable();\r\n    contextMenuSource$ = this.contextMenuSource.asObservable();\r\n    uiUpdateSource$ = this.uiUpdateSource.asObservable();\r\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\r\n\r\n    onSort(sortMeta: SortMeta|SortMeta[]) {\r\n        this.sortSource.next(sortMeta);\r\n    }\r\n\r\n    onSelectionChange() {\r\n        this.selectionSource.next();\r\n    }\r\n\r\n    onContextMenu(node: any) {\r\n        this.contextMenuSource.next(node);\r\n    }\r\n\r\n    onUIUpdate(value: any) {\r\n        this.uiUpdateSource.next(value);\r\n    }\r\n\r\n    onTotalRecordsChange(value: number) {\r\n        this.totalRecordsSource.next(value);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTable',\r\n    template: `\r\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" data-scrollselectors=\".p-treetable-scrollable-body\"\r\n                [ngClass]=\"{'p-treetable p-component': true,\r\n                'p-treetable-hoverable-rows': (rowHover||(selectionMode === 'single' || selectionMode === 'multiple')),\r\n                'p-treetable-auto-layout': autoLayout,\r\n                'p-treetable-resizable': resizableColumns,\r\n                'p-treetable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\r\n                'p-treetable-flex-scrollable': (scrollable && scrollHeight === 'flex')}\">\r\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\r\n                <div class=\"p-treetable-loading-overlay p-component-overlay\">\r\n                    <i [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"captionTemplate\" class=\"p-treetable-header\">\r\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\r\n            </div>\r\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\r\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\r\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\r\n\r\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\r\n                <table #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\r\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\r\n                    <thead class=\"p-treetable-thead\">\r\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\r\n                    </thead>\r\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\r\n                    <tfoot class=\"p-treetable-tfoot\">\r\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\r\n               <div class=\"p-treetable-scrollable-view p-treetable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [ttScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\r\n               <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\r\n            </div>\r\n\r\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\r\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\r\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\r\n            <div *ngIf=\"summaryTemplate\" class=\"p-treetable-footer\">\r\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\r\n            </div>\r\n\r\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\r\n\r\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-treetable-reorder-indicator-up\" *ngIf=\"reorderableColumns\"></span>\r\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-treetable-reorder-indicator-down\" *ngIf=\"reorderableColumns\"></span>\r\n        </div>\r\n    `,\r\n    providers: [TreeTableService],\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./treetable.css']\r\n})\r\nexport class TreeTable implements AfterContentInit, OnInit, OnDestroy, BlockableUI, OnChanges {\r\n\r\n    @Input() columns: any[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tableStyle: any;\r\n\r\n    @Input() tableStyleClass: string;\r\n\r\n    @Input() autoLayout: boolean;\r\n\r\n    @Input() lazy: boolean = false;\r\n\r\n    @Input() lazyLoadOnInit: boolean = true;\r\n\r\n    @Input() paginator: boolean;\r\n\r\n    @Input() rows: number;\r\n\r\n    @Input() first: number = 0;\r\n\r\n    @Input() pageLinks: number = 5;\r\n\r\n    @Input() rowsPerPageOptions: any[];\r\n\r\n    @Input() alwaysShowPaginator: boolean = true;\r\n\r\n    @Input() paginatorPosition: string = 'bottom';\r\n\r\n    @Input() paginatorDropdownAppendTo: any;\r\n\r\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\r\n\r\n    @Input() showCurrentPageReport: boolean;\r\n\r\n    @Input() showJumpToPageDropdown: boolean;\r\n\r\n    @Input() showPageLinks: boolean = true;\r\n\r\n    @Input() defaultSortOrder: number = 1;\r\n\r\n    @Input() sortMode: string = 'single';\r\n\r\n    @Input() resetPageOnSort: boolean = true;\r\n\r\n    @Input() customSort: boolean;\r\n\r\n    @Input() selectionMode: string;\r\n\r\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() contextMenuSelection: any;\r\n\r\n    @Output() contextMenuSelectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() contextMenuSelectionMode: string = \"separate\";\r\n\r\n    @Input() dataKey: string;\r\n\r\n    @Input() metaKeySelection: boolean;\r\n\r\n    @Input() compareSelectionBy: string = 'deepEquals';\r\n\r\n    @Input() rowHover: boolean;\r\n\r\n    @Input() loading: boolean;\r\n\r\n    @Input() loadingIcon: string = 'pi pi-spinner';\r\n\r\n    @Input() showLoader: boolean = true;\r\n\r\n    @Input() scrollable: boolean;\r\n\r\n    @Input() scrollHeight: string;\r\n\r\n    @Input() virtualScroll: boolean;\r\n\r\n    @Input() virtualScrollDelay: number = 150;\r\n\r\n    @Input() virtualRowHeight: number = 28;\r\n\r\n    @Input() minBufferPx: number;\r\n\r\n    @Input() maxBufferPx: number;\r\n\r\n    @Input() frozenWidth: string;\r\n\r\n    @Input() frozenColumns: any[];\r\n\r\n    @Input() resizableColumns: boolean;\r\n\r\n    @Input() columnResizeMode: string = 'fit';\r\n\r\n    @Input() reorderableColumns: boolean;\r\n\r\n    @Input() contextMenu: any;\r\n\r\n    @Input() rowTrackBy: Function = (index: number, item: any) => item;\r\n\r\n    @Input() filters: { [s: string]: FilterMetadata; } = {};\r\n\r\n    @Input() globalFilterFields: string[];\r\n\r\n    @Input() filterDelay: number = 300;\r\n\r\n    @Input() filterMode: string = 'lenient';\r\n\r\n    @Input() filterLocale: string;\r\n\r\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onColResize: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onColReorder: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onContextMenuSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHeaderCheckboxToggle: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEditInit: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEditComplete: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onEditCancel: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n\r\n    @ViewChild('resizeHelper') resizeHelperViewChild: ElementRef;\r\n\r\n    @ViewChild('reorderIndicatorUp') reorderIndicatorUpViewChild: ElementRef;\r\n\r\n    @ViewChild('reorderIndicatorDown') reorderIndicatorDownViewChild: ElementRef;\r\n\r\n    @ViewChild('table') tableViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollableView') scrollableViewChild;\r\n\r\n    @ViewChild('scrollableFrozenView') scrollableFrozenViewChild;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\r\n\r\n    _value: TreeNode[] = [];\r\n\r\n    serializedValue: any[];\r\n\r\n    _totalRecords: number = 0;\r\n\r\n    _multiSortMeta: SortMeta[];\r\n\r\n    _sortField: string;\r\n\r\n    _sortOrder: number = 1;\r\n\r\n    filteredNodes: any[];\r\n\r\n    filterTimeout: any;\r\n\r\n    colGroupTemplate: TemplateRef<any>;\r\n\r\n    captionTemplate: TemplateRef<any>;\r\n\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    bodyTemplate: TemplateRef<any>;\r\n\r\n    loadingBodyTemplate: TemplateRef<any>;\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    summaryTemplate: TemplateRef<any>;\r\n\r\n    emptyMessageTemplate: TemplateRef<any>;\r\n\r\n    paginatorLeftTemplate: TemplateRef<any>;\r\n\r\n    paginatorRightTemplate: TemplateRef<any>;\r\n\r\n    frozenHeaderTemplate: TemplateRef<any>;\r\n\r\n    frozenBodyTemplate: TemplateRef<any>;\r\n\r\n    frozenFooterTemplate: TemplateRef<any>;\r\n\r\n    frozenColGroupTemplate: TemplateRef<any>;\r\n\r\n    lastResizerHelperX: number;\r\n\r\n    reorderIconWidth: number;\r\n\r\n    reorderIconHeight: number;\r\n\r\n    draggedColumn: any;\r\n\r\n    dropPosition: number;\r\n\r\n    preventSelectionSetterPropagation: boolean;\r\n\r\n    _selection: any;\r\n\r\n    selectionKeys: any = {};\r\n\r\n    rowTouched: boolean;\r\n\r\n    editingCell: Element;\r\n\r\n    editingCellClick: boolean;\r\n\r\n    documentEditListener: any;\r\n\r\n    initialized: boolean;\r\n\r\n    toggleRowIndex: number;\r\n\r\n    ngOnInit() {\r\n        if (this.lazy && this.lazyLoadOnInit) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        this.initialized = true;\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'caption':\r\n                    this.captionTemplate = item.template;\r\n                break;\r\n\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                break;\r\n\r\n                case 'body':\r\n                    this.bodyTemplate = item.template;\r\n                break;\r\n\r\n                case 'loadingbody':\r\n                    this.loadingBodyTemplate = item.template;\r\n                break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n\r\n                case 'summary':\r\n                    this.summaryTemplate = item.template;\r\n                break;\r\n\r\n                case 'colgroup':\r\n                    this.colGroupTemplate = item.template;\r\n                break;\r\n\r\n                case 'emptymessage':\r\n                    this.emptyMessageTemplate = item.template;\r\n                break;\r\n\r\n                case 'paginatorleft':\r\n                    this.paginatorLeftTemplate = item.template;\r\n                break;\r\n\r\n                case 'paginatorright':\r\n                    this.paginatorRightTemplate = item.template;\r\n                break;\r\n\r\n                case 'frozenheader':\r\n                    this.frozenHeaderTemplate = item.template;\r\n                break;\r\n\r\n                case 'frozenbody':\r\n                    this.frozenBodyTemplate = item.template;\r\n                break;\r\n\r\n                case 'frozenfooter':\r\n                    this.frozenFooterTemplate = item.template;\r\n                break;\r\n\r\n                case 'frozencolgroup':\r\n                    this.frozenColGroupTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    constructor(public el: ElementRef, public zone: NgZone, public tableService: TreeTableService) {}\r\n\r\n    ngOnChanges(simpleChange: SimpleChanges) {\r\n        if (simpleChange.value) {\r\n            this._value = simpleChange.value.currentValue;\r\n\r\n            if (!this.lazy) {\r\n                this.totalRecords = (this._value ? this._value.length : 0);\r\n\r\n                if (this.sortMode == 'single' && this.sortField)\r\n                    this.sortSingle();\r\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\r\n                    this.sortMultiple();\r\n                else if (this.hasFilter())       //sort already filters\r\n                    this._filter();\r\n            }\r\n\r\n            this.updateSerializedValue();\r\n            this.tableService.onUIUpdate(this.value);\r\n        }\r\n\r\n        if (simpleChange.sortField) {\r\n            this._sortField = simpleChange.sortField.currentValue;\r\n\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if ( !this.lazy || this.initialized ) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (simpleChange.sortOrder) {\r\n            this._sortOrder = simpleChange.sortOrder.currentValue;\r\n\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if ( !this.lazy || this.initialized ) {\r\n                if (this.sortMode === 'single') {\r\n                    this.sortSingle();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (simpleChange.multiSortMeta) {\r\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\r\n            if (this.sortMode === 'multiple') {\r\n                this.sortMultiple();\r\n            }\r\n        }\r\n\r\n        if (simpleChange.selection) {\r\n            this._selection = simpleChange.selection.currentValue;\r\n\r\n            if (!this.preventSelectionSetterPropagation) {\r\n                this.updateSelectionKeys();\r\n                this.tableService.onSelectionChange();\r\n            }\r\n            this.preventSelectionSetterPropagation = false;\r\n        }\r\n    }\r\n\r\n    @Input() get value(): any[] {\r\n        return this._value;\r\n    }\r\n    set value(val: any[]) {\r\n        this._value = val;\r\n    }\r\n\r\n    updateSerializedValue() {\r\n        this.serializedValue = [];\r\n\r\n        if (this.paginator)\r\n            this.serializePageNodes();\r\n        else\r\n            this.serializeNodes(null, this.filteredNodes||this.value, 0, true);\r\n    }\r\n\r\n    serializeNodes(parent, nodes, level, visible) {\r\n        if (nodes && nodes.length) {\r\n            for(let node of nodes) {\r\n                node.parent = parent;\r\n                const rowNode = {\r\n                    node: node,\r\n                    parent: parent,\r\n                    level: level,\r\n                    visible: visible && (parent ? parent.expanded : true)\r\n                };\r\n                this.serializedValue.push(rowNode);\r\n\r\n                if (rowNode.visible && node.expanded) {\r\n                    this.serializeNodes(node, node.children, level + 1, rowNode.visible);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    serializePageNodes() {\r\n        let data = this.filteredNodes || this.value;\r\n        this.serializedValue = [];\r\n        if (data && data.length) {\r\n            const first = this.lazy ? 0 : this.first;\r\n\r\n            for(let i = first; i < (first + this.rows); i++) {\r\n                let node = data[i];\r\n                if (node) {\r\n                    this.serializedValue.push({\r\n                        node: node,\r\n                        parent: null,\r\n                        level: 0,\r\n                        visible: true\r\n                    });\r\n\r\n                    this.serializeNodes(node, node.children, 1, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Input() get totalRecords(): number {\r\n        return this._totalRecords;\r\n    }\r\n    set totalRecords(val: number) {\r\n        this._totalRecords = val;\r\n        this.tableService.onTotalRecordsChange(this._totalRecords);\r\n    }\r\n\r\n    @Input() get sortField(): string {\r\n        return this._sortField;\r\n    }\r\n\r\n    set sortField(val: string) {\r\n        this._sortField = val;\r\n    }\r\n\r\n    @Input() get sortOrder(): number {\r\n        return this._sortOrder;\r\n    }\r\n    set sortOrder(val: number) {\r\n        this._sortOrder = val;\r\n    }\r\n\r\n    @Input() get multiSortMeta(): SortMeta[] {\r\n        return this._multiSortMeta;\r\n    }\r\n\r\n    set multiSortMeta(val: SortMeta[]) {\r\n        this._multiSortMeta = val;\r\n    }\r\n\r\n    @Input() get selection(): any {\r\n        return this._selection;\r\n    }\r\n\r\n    set selection(val: any) {\r\n        this._selection = val;\r\n    }\r\n\r\n    updateSelectionKeys() {\r\n        if (this.dataKey && this._selection) {\r\n            this.selectionKeys = {};\r\n            if (Array.isArray(this._selection)) {\r\n                for(let node of this._selection) {\r\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(node.data, this.dataKey))] = 1;\r\n                }\r\n            }\r\n            else {\r\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection.data, this.dataKey))] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(event) {\r\n        this.first = event.first;\r\n        this.rows = event.rows;\r\n\r\n        if (this.lazy)\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        else\r\n            this.serializePageNodes();\r\n\r\n        this.onPage.emit({\r\n            first: this.first,\r\n            rows: this.rows\r\n        });\r\n\r\n        this.tableService.onUIUpdate(this.value);\r\n\r\n        if (this.scrollable) {\r\n            this.resetScrollTop();\r\n        }\r\n    }\r\n\r\n    sort(event) {\r\n        let originalEvent = event.originalEvent;\r\n\r\n        if (this.sortMode === 'single') {\r\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\r\n            this._sortField = event.field;\r\n            this.sortSingle();\r\n\r\n            if (this.resetPageOnSort && this.scrollable) {\r\n                this.resetScrollTop();\r\n            }\r\n        }\r\n        if (this.sortMode === 'multiple') {\r\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\r\n            let sortMeta = this.getSortMeta(event.field);\r\n\r\n            if (sortMeta) {\r\n                if (!metaKey) {\r\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }]\r\n\r\n                    if (this.resetPageOnSort && this.scrollable) {\r\n                        this.resetScrollTop();\r\n                    }\r\n                }\r\n                else {\r\n                    sortMeta.order = sortMeta.order * -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!metaKey || !this.multiSortMeta) {\r\n                    this._multiSortMeta = [];\r\n\r\n                    if (this.resetPageOnSort && this.scrollable) {\r\n                        this.resetScrollTop();\r\n                    }\r\n                }\r\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\r\n            }\r\n\r\n            this.sortMultiple();\r\n        }\r\n    }\r\n\r\n    sortSingle() {\r\n        if (this.sortField && this.sortOrder) {\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n                this.sortNodes(this.value);\r\n\r\n                if (this.hasFilter()) {\r\n                    this._filter();\r\n                }\r\n            }\r\n\r\n            let sortMeta: SortMeta = {\r\n                field: this.sortField,\r\n                order: this.sortOrder\r\n            };\r\n\r\n            this.onSort.emit(sortMeta);\r\n            this.tableService.onSort(sortMeta);\r\n            this.updateSerializedValue();\r\n        }\r\n    }\r\n\r\n    sortNodes(nodes) {\r\n        if (!nodes || nodes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.customSort) {\r\n            this.sortFunction.emit({\r\n                data: nodes,\r\n                mode: this.sortMode,\r\n                field: this.sortField,\r\n                order: this.sortOrder\r\n            });\r\n        }\r\n        else {\r\n            nodes.sort((node1, node2) => {\r\n                let value1 = ObjectUtils.resolveFieldData(node1.data, this.sortField);\r\n                let value2 = ObjectUtils.resolveFieldData(node2.data, this.sortField);\r\n                let result = null;\r\n\r\n                if (value1 == null && value2 != null)\r\n                    result = -1;\r\n                else if (value1 != null && value2 == null)\r\n                    result = 1;\r\n                else if (value1 == null && value2 == null)\r\n                    result = 0;\r\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                    result = value1.localeCompare(value2, undefined, {numeric: true});\r\n                else\r\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n                return (this.sortOrder * result);\r\n            });\r\n        }\r\n\r\n        for(let node of nodes) {\r\n            this.sortNodes(node.children);\r\n        }\r\n    }\r\n\r\n    sortMultiple() {\r\n        if (this.multiSortMeta) {\r\n            if (this.lazy) {\r\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n            }\r\n            else if (this.value) {\r\n               this.sortMultipleNodes(this.value);\r\n\r\n                if (this.hasFilter()) {\r\n                    this._filter();\r\n                }\r\n            }\r\n\r\n            this.onSort.emit({\r\n                multisortmeta: this.multiSortMeta\r\n            });\r\n            this.updateSerializedValue();\r\n            this.tableService.onSort(this.multiSortMeta);\r\n        }\r\n    }\r\n\r\n    sortMultipleNodes(nodes) {\r\n        if (!nodes || nodes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.customSort) {\r\n            this.sortFunction.emit({\r\n                data: this.value,\r\n                mode: this.sortMode,\r\n                multiSortMeta: this.multiSortMeta\r\n            });\r\n        }\r\n        else {\r\n            nodes.sort((node1, node2) => {\r\n                return this.multisortField(node1, node2, this.multiSortMeta, 0);\r\n            });\r\n        }\r\n\r\n        for(let node of nodes) {\r\n            this.sortMultipleNodes(node.children);\r\n        }\r\n    }\r\n\r\n    multisortField(node1, node2, multiSortMeta, index) {\r\n        let value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\r\n        let value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\r\n        let result = null;\r\n\r\n        if (value1 == null && value2 != null)\r\n            result = -1;\r\n        else if (value1 != null && value2 == null)\r\n            result = 1;\r\n        else if (value1 == null && value2 == null)\r\n            result = 0;\r\n        if (typeof value1 == 'string' || value1 instanceof String) {\r\n            if (value1.localeCompare && (value1 != value2)) {\r\n                return (multiSortMeta[index].order * value1.localeCompare(value2, undefined, {numeric: true}));\r\n            }\r\n        }\r\n        else {\r\n            result = (value1 < value2) ? -1 : 1;\r\n        }\r\n\r\n        if (value1 == value2) {\r\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(node1, node2, multiSortMeta, index + 1)) : 0;\r\n        }\r\n\r\n        return (multiSortMeta[index].order * result);\r\n    }\r\n\r\n    getSortMeta(field: string) {\r\n        if (this.multiSortMeta && this.multiSortMeta.length) {\r\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\r\n                if (this.multiSortMeta[i].field === field) {\r\n                    return this.multiSortMeta[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    isSorted(field: string) {\r\n        if (this.sortMode === 'single') {\r\n            return (this.sortField && this.sortField === field);\r\n        }\r\n        else if (this.sortMode === 'multiple') {\r\n            let sorted = false;\r\n            if (this.multiSortMeta) {\r\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\r\n                    if (this.multiSortMeta[i].field == field) {\r\n                        sorted = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return sorted;\r\n        }\r\n    }\r\n\r\n    createLazyLoadMetadata(): any {\r\n        return {\r\n            first: this.first,\r\n            rows: this.rows,\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder,\r\n            filters: this.filters,\r\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\r\n            multiSortMeta: this.multiSortMeta\r\n        };\r\n    }\r\n\r\n    public resetScrollTop() {\r\n        if (this.virtualScroll)\r\n            this.scrollToVirtualIndex(0);\r\n        else\r\n            this.scrollTo({top: 0});\r\n    }\r\n\r\n    public scrollToVirtualIndex(index: number) {\r\n        if (this.scrollableViewChild) {\r\n            this.scrollableViewChild.scrollToVirtualIndex(index);\r\n        }\r\n\r\n        if (this.scrollableFrozenViewChild) {\r\n            this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\r\n        }\r\n    }\r\n\r\n    public scrollTo(options) {\r\n        if (this.scrollableViewChild) {\r\n            this.scrollableViewChild.scrollTo(options);\r\n        }\r\n\r\n        if (this.scrollableFrozenViewChild) {\r\n            this.scrollableFrozenViewChild.scrollTo(options);\r\n        }\r\n    }\r\n\r\n    isEmpty() {\r\n        let data = this.filteredNodes||this.value;\r\n        return data == null || data.length == 0;\r\n    }\r\n\r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    onColumnResizeBegin(event) {\r\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onColumnResize(event) {\r\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\r\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\r\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\r\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\r\n\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\r\n    }\r\n\r\n    onColumnResizeEnd(event, column) {\r\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\r\n        let columnWidth = column.offsetWidth;\r\n        let newColumnWidth = columnWidth + delta;\r\n        let minWidth = column.style.minWidth || 15;\r\n\r\n        if (columnWidth + delta > parseInt(minWidth)) {\r\n            if (this.columnResizeMode === 'fit') {\r\n                let nextColumn = column.nextElementSibling;\r\n                while (!nextColumn.offsetParent) {\r\n                    nextColumn = nextColumn.nextElementSibling;\r\n                }\r\n\r\n                if (nextColumn) {\r\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\r\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\r\n\r\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\r\n                        if (this.scrollable) {\r\n                            let scrollableView = this.findParentScrollableView(column);\r\n                            let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table');\r\n                            let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\r\n                            let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\r\n                            let resizeColumnIndex = DomHandler.index(column);\r\n\r\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        }\r\n                        else {\r\n                            column.style.width = newColumnWidth + 'px';\r\n                            if (nextColumn) {\r\n                                nextColumn.style.width = nextColumnWidth + 'px';\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (this.columnResizeMode === 'expand') {\r\n                if (this.scrollable) {\r\n                    let scrollableView = this.findParentScrollableView(column);\r\n                    let scrollableBody = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body');\r\n                    let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-header');\r\n                    let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-footer');\r\n                    let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-treetable-scrollable-body table');\r\n                    let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\r\n                    let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\r\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\r\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    if (scrollableFooterTable) {\r\n                        scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\r\n                    }\r\n                    let resizeColumnIndex = DomHandler.index(column);\r\n\r\n                    const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\r\n                    const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\r\n                    const isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\r\n\r\n                    let setWidth = (container, table, width, isContainerInViewport) => {\r\n                        if (container && table) {\r\n                            container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\r\n                            table.style.width = width + 'px';\r\n                        }\r\n                    };\r\n\r\n                    setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\r\n                    setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\r\n                    setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\r\n\r\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\r\n                }\r\n                else {\r\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\r\n                    column.style.width = newColumnWidth + 'px';\r\n                    let containerWidth = this.tableViewChild.nativeElement.style.width;\r\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\r\n                }\r\n            }\r\n\r\n            this.onColResize.emit({\r\n                element: column,\r\n                delta: delta\r\n            });\r\n        }\r\n\r\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\r\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\r\n    }\r\n\r\n    findParentScrollableView(column) {\r\n        if (column) {\r\n            let parent = column.parentElement;\r\n            while (parent && !DomHandler.hasClass(parent, 'p-treetable-scrollable-view')) {\r\n                parent = parent.parentElement;\r\n            }\r\n\r\n            return parent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\r\n        if (table) {\r\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n\r\n            if (colGroup) {\r\n                let col = colGroup.children[resizeColumnIndex];\r\n                let nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n\r\n                if (nextCol && nextColumnWidth) {\r\n                    nextCol.style.width = nextColumnWidth + 'px';\r\n                }\r\n            }\r\n            else {\r\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\r\n            }\r\n        }\r\n    }\r\n\r\n    onColumnDragStart(event, columnElement) {\r\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\r\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\r\n        this.draggedColumn = columnElement;\r\n        event.dataTransfer.setData('text', 'b');    // For firefox\r\n    }\r\n\r\n    onColumnDragEnter(event, dropHeader) {\r\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\r\n            event.preventDefault();\r\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\r\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\r\n\r\n            if (this.draggedColumn != dropHeader) {\r\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\r\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\r\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\r\n\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\r\n\r\n                if (event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n\r\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\r\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\r\n            }\r\n            else {\r\n                event.dataTransfer.dropEffect = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    onColumnDragLeave(event) {\r\n        if (this.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    onColumnDrop(event, dropColumn) {\r\n        event.preventDefault();\r\n        if (this.draggedColumn) {\r\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\r\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\r\n            let allowDrop = (dragIndex != dropIndex);\r\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\r\n                allowDrop = false;\r\n            }\r\n\r\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\r\n                dropIndex = dropIndex + 1;\r\n            }\r\n\r\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\r\n                dropIndex = dropIndex - 1;\r\n            }\r\n\r\n            if (allowDrop) {\r\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\r\n\r\n                this.onColReorder.emit({\r\n                    dragIndex: dragIndex,\r\n                    dropIndex: dropIndex,\r\n                    columns: this.columns\r\n                });\r\n            }\r\n\r\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\r\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\r\n            this.draggedColumn.draggable = false;\r\n            this.draggedColumn = null;\r\n            this.dropPosition = null;\r\n        }\r\n    }\r\n\r\n    handleRowClick(event) {\r\n        let targetNode = (<HTMLElement> event.originalEvent.target).nodeName;\r\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\r\n            return;\r\n        }\r\n\r\n        if (this.selectionMode) {\r\n            this.preventSelectionSetterPropagation = true;\r\n            let rowNode = event.rowNode;\r\n            let selected = this.isSelected(rowNode.node);\r\n            let metaSelection = this.rowTouched ? false : this.metaKeySelection;\r\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowNode.node.data, this.dataKey)) : null;\r\n\r\n            if (metaSelection) {\r\n                let metaKey = event.originalEvent.metaKey||event.originalEvent.ctrlKey;\r\n\r\n                if (selected && metaKey) {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this._selection = null;\r\n                        this.selectionKeys = {};\r\n                        this.selectionChange.emit(null);\r\n                    }\r\n                    else {\r\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\r\n                        this._selection = this.selection.filter((val,i) => i != selectionIndex);\r\n                        this.selectionChange.emit(this.selection);\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n\r\n                    this.onNodeUnselect.emit({originalEvent: event.originalEvent, node: rowNode.node, type: 'row'});\r\n                }\r\n                else {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this._selection = rowNode.node;\r\n                        this.selectionChange.emit(rowNode.node);\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys = {};\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                    else if (this.isMultipleSelectionMode()) {\r\n                        if (metaKey) {\r\n                            this._selection = this.selection||[];\r\n                        }\r\n                        else {\r\n                            this._selection = [];\r\n                            this.selectionKeys = {};\r\n                        }\r\n\r\n                        this._selection = [...this.selection, rowNode.node];\r\n                        this.selectionChange.emit(this.selection);\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n\r\n                    this.onNodeSelect.emit({originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex});\r\n                }\r\n            }\r\n            else {\r\n                if (this.selectionMode === 'single') {\r\n                    if (selected) {\r\n                        this._selection = null;\r\n                        this.selectionKeys = {};\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\r\n                    }\r\n                    else {\r\n                        this._selection = rowNode.node;\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys = {};\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this.selectionMode === 'multiple') {\r\n                    if (selected) {\r\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\r\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeUnselect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row' });\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\r\n                        this.selectionChange.emit(this.selection);\r\n                        this.onNodeSelect.emit({ originalEvent: event.originalEvent, node: rowNode.node, type: 'row', index: event.rowIndex });\r\n                        if (dataKeyValue) {\r\n                            this.selectionKeys[dataKeyValue] = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.tableService.onSelectionChange();\r\n        }\r\n\r\n        this.rowTouched = false;\r\n    }\r\n\r\n    handleRowTouchEnd(event) {\r\n        this.rowTouched = true;\r\n    }\r\n\r\n    handleRowRightClick(event) {\r\n        if (this.contextMenu) {\r\n            const node = event.rowNode.node;\r\n\r\n            if (this.contextMenuSelectionMode === 'separate') {\r\n                this.contextMenuSelection = node;\r\n                this.contextMenuSelectionChange.emit(node);\r\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, node: node});\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.tableService.onContextMenu(node);\r\n            }\r\n            else if (this.contextMenuSelectionMode === 'joint') {\r\n                this.preventSelectionSetterPropagation = true;\r\n                let selected = this.isSelected(node);\r\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n\r\n                if (!selected) {\r\n                    if (this.isSingleSelectionMode()) {\r\n                        this.selection = node;\r\n                        this.selectionChange.emit(node);\r\n                    }\r\n                    else if (this.isMultipleSelectionMode()) {\r\n                        this.selection = [node];\r\n                        this.selectionChange.emit(this.selection);\r\n                    }\r\n\r\n                    if (dataKeyValue) {\r\n                        this.selectionKeys[dataKeyValue] = 1;\r\n                    }\r\n                }\r\n\r\n                this.contextMenu.show(event.originalEvent);\r\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, node: node});\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleNodeWithCheckbox(event) {\r\n        this.selection = this.selection||[];\r\n        this.preventSelectionSetterPropagation = true;\r\n        let node = event.rowNode.node;\r\n        let selected = this.isSelected(node);\r\n\r\n        if (selected) {\r\n            this.propagateSelectionDown(node, false);\r\n            if (event.rowNode.parent) {\r\n                this.propagateSelectionUp(node.parent, false);\r\n            }\r\n            this.selectionChange.emit(this.selection);\r\n            this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n        }\r\n        else {\r\n            this.propagateSelectionDown(node, true);\r\n            if (event.rowNode.parent) {\r\n                this.propagateSelectionUp(node.parent, true);\r\n            }\r\n            this.selectionChange.emit(this.selection);\r\n            this.onNodeSelect.emit({originalEvent: event, node: node});\r\n        }\r\n\r\n        this.tableService.onSelectionChange();\r\n    }\r\n\r\n    toggleNodesWithCheckbox(event: Event, check: boolean) {\r\n        let data = this.filteredNodes || this.value;\r\n        this._selection = check && data ? data.slice() : [];\r\n        if (check) {\r\n            if (data && data.length) {\r\n                for (let node of data) {\r\n                    this.propagateSelectionDown(node, true);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._selection = [];\r\n            this.selectionKeys = {};\r\n        }\r\n\r\n        this.preventSelectionSetterPropagation = true;\r\n        this.selectionChange.emit(this._selection);\r\n        this.tableService.onSelectionChange();\r\n        this.onHeaderCheckboxToggle.emit({originalEvent: event, checked: check});\r\n    }\r\n\r\n    propagateSelectionUp(node: TreeNode, select: boolean) {\r\n        if (node.children && node.children.length) {\r\n            let selectedChildCount: number = 0;\r\n            let childPartialSelected: boolean = false;\r\n            let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n\r\n            for (let child of node.children) {\r\n                if (this.isSelected(child))\r\n                selectedChildCount++;\r\n                else if (child.partialSelected)\r\n                    childPartialSelected = true;\r\n            }\r\n\r\n            if (select && selectedChildCount == node.children.length) {\r\n                this._selection =  [...this.selection||[], node];\r\n                node.partialSelected = false;\r\n                if (dataKeyValue) {\r\n                    this.selectionKeys[dataKeyValue] = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (!select) {\r\n                    let index = this.findIndexInSelection(node);\r\n                    if (index >= 0) {\r\n                        this._selection =  this.selection.filter((val,i) => i!=index);\r\n\r\n                        if (dataKeyValue) {\r\n                            delete this.selectionKeys[dataKeyValue];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length)\r\n                    node.partialSelected = true;\r\n                else\r\n                    node.partialSelected = false;\r\n            }\r\n        }\r\n\r\n        let parent = node.parent;\r\n        if (parent) {\r\n            this.propagateSelectionUp(parent, select);\r\n        }\r\n    }\r\n\r\n    propagateSelectionDown(node: TreeNode, select: boolean) {\r\n        let index = this.findIndexInSelection(node);\r\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(node.data, this.dataKey)) : null;\r\n\r\n        if (select && index == -1) {\r\n            this._selection =  [...this.selection||[],node]\r\n            if (dataKeyValue) {\r\n                this.selectionKeys[dataKeyValue] = 1;\r\n            }\r\n        }\r\n        else if (!select && index > -1) {\r\n            this._selection =  this.selection.filter((val,i) => i!=index);\r\n            if (dataKeyValue) {\r\n                delete this.selectionKeys[dataKeyValue];\r\n            }\r\n        }\r\n\r\n        node.partialSelected = false;\r\n\r\n        if (node.children && node.children.length) {\r\n            for (let child of node.children) {\r\n                this.propagateSelectionDown(child, select);\r\n            }\r\n        }\r\n    }\r\n\r\n    isSelected(node) {\r\n        if (node && this.selection) {\r\n            if (this.dataKey) {\r\n                return this.selectionKeys[ObjectUtils.resolveFieldData(node.data, this.dataKey)] !== undefined;\r\n            }\r\n            else {\r\n                if (this.selection instanceof Array)\r\n                    return this.findIndexInSelection(node) > -1;\r\n                else\r\n                    return this.equals(node, this.selection);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    findIndexInSelection(node: any) {\r\n        let index: number = -1;\r\n        if (this.selection && this.selection.length) {\r\n            for (let i = 0; i < this.selection.length; i++) {\r\n                if (this.equals(node, this.selection[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    isSingleSelectionMode() {\r\n        return this.selectionMode === 'single';\r\n    }\r\n\r\n    isMultipleSelectionMode() {\r\n        return this.selectionMode === 'multiple';\r\n    }\r\n\r\n    equals(node1, node2) {\r\n        return this.compareSelectionBy === 'equals' ? (node1 === node2) : ObjectUtils.equals(node1.data, node2.data, this.dataKey);\r\n    }\r\n\r\n    filter(value, field, matchMode) {\r\n        if (this.filterTimeout) {\r\n            clearTimeout(this.filterTimeout);\r\n        }\r\n\r\n        if (!this.isFilterBlank(value)) {\r\n            this.filters[field] = { value: value, matchMode: matchMode };\r\n        } else if (this.filters[field]) {\r\n            delete this.filters[field];\r\n        }\r\n\r\n        this.filterTimeout = setTimeout(() => {\r\n            this._filter();\r\n            this.filterTimeout = null;\r\n        }, this.filterDelay);\r\n    }\r\n\r\n    filterGlobal(value, matchMode) {\r\n        this.filter(value, 'global', matchMode);\r\n    }\r\n\r\n    isFilterBlank(filter: any): boolean {\r\n        if (filter !== null && filter !== undefined) {\r\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    _filter() {\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            if (!this.value) {\r\n                return;\r\n            }\r\n\r\n            if (!this.hasFilter()) {\r\n                this.filteredNodes = null;\r\n                if (this.paginator) {\r\n                    this.totalRecords = this.value ? this.value.length : 0;\r\n                }\r\n            }\r\n            else {\r\n                let globalFilterFieldsArray;\r\n                if (this.filters['global']) {\r\n                    if (!this.columns && !this.globalFilterFields)\r\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\r\n                    else\r\n                        globalFilterFieldsArray = this.globalFilterFields||this.columns;\r\n                }\r\n\r\n                this.filteredNodes = [];\r\n                const isStrictMode = this.filterMode === 'strict';\r\n                let isValueChanged = false;\r\n\r\n                for (let node of this.value) {\r\n                    let copyNode = {...node};\r\n                    let localMatch = true;\r\n                    let globalMatch = false;\r\n                    let paramsWithoutNode;\r\n\r\n                    for (let prop in this.filters) {\r\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\r\n                            let filterMeta = this.filters[prop];\r\n                            let filterField = prop;\r\n                            let filterValue = filterMeta.value;\r\n                            let filterMatchMode = filterMeta.matchMode || 'startsWith';\r\n                            let filterConstraint = FilterUtils[filterMatchMode];\r\n                            paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\r\n                            if ((isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\r\n                                (!isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\r\n                                    localMatch = false;\r\n                            }\r\n\r\n                            if (!localMatch) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\r\n                        for(let j = 0; j < globalFilterFieldsArray.length; j++) {\r\n                            let copyNodeForGlobal = {...copyNode};\r\n                            let filterField = globalFilterFieldsArray[j].field||globalFilterFieldsArray[j];\r\n                            let filterValue = this.filters['global'].value;\r\n                            let filterConstraint = FilterUtils[this.filters['global'].matchMode];\r\n                            paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\r\n\r\n                            if ((isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode))) ||\r\n                                (!isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode)))) {\r\n                                    globalMatch = true;\r\n                                    copyNode = copyNodeForGlobal;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    let matches = localMatch;\r\n                    if (this.filters['global']) {\r\n                        matches = localMatch && globalMatch;\r\n                    }\r\n\r\n                    if (matches) {\r\n                        this.filteredNodes.push(copyNode);\r\n                    }\r\n\r\n                    isValueChanged = isValueChanged || !localMatch || globalMatch || (localMatch && this.filteredNodes.length > 0) || (!globalMatch && this.filteredNodes.length === 0)\r\n                }\r\n\r\n                if (!isValueChanged) {\r\n                    this.filteredNodes = null;\r\n                }\r\n\r\n                if (this.paginator) {\r\n                    this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.first = 0;\r\n\r\n        const filteredValue = this.filteredNodes || this.value;\r\n\r\n        this.onFilter.emit({\r\n            filters: this.filters,\r\n            filteredValue: filteredValue\r\n        });\r\n\r\n        this.tableService.onUIUpdate(filteredValue);\r\n        this.updateSerializedValue();\r\n\r\n        if (this.scrollable) {\r\n            this.resetScrollTop();\r\n        }\r\n    }\r\n\r\n    findFilteredNodes(node, paramsWithoutNode) {\r\n        if (node) {\r\n            let matched = false;\r\n            if (node.children) {\r\n                let childNodes = [...node.children];\r\n                node.children = [];\r\n                for (let childNode of childNodes) {\r\n                    let copyChildNode = {...childNode};\r\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\r\n                        matched = true;\r\n                        node.children.push(copyChildNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (matched) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFilterMatched(node, {filterField, filterValue, filterConstraint, isStrictMode}) {\r\n        let matched = false;\r\n        let dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\r\n        if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\r\n            matched = true;\r\n        }\r\n\r\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\r\n            matched = this.findFilteredNodes(node, {filterField, filterValue, filterConstraint, isStrictMode}) || matched;\r\n        }\r\n\r\n        return matched;\r\n    }\r\n\r\n    isNodeLeaf(node) {\r\n        return node.leaf === false ? false : !(node.children && node.children.length);\r\n    }\r\n\r\n    hasFilter() {\r\n        let empty = true;\r\n        for (let prop in this.filters) {\r\n            if (this.filters.hasOwnProperty(prop)) {\r\n                empty = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return !empty;\r\n    }\r\n\r\n    public reset() {\r\n        this._sortField = null;\r\n        this._sortOrder = 1;\r\n        this._multiSortMeta = null;\r\n        this.tableService.onSort(null);\r\n\r\n        this.filteredNodes = null;\r\n        this.filters = {};\r\n\r\n        this.first = 0;\r\n\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n        else {\r\n            this.totalRecords = (this._value ? this._value.length : 0);\r\n        }\r\n    }\r\n\r\n    updateEditingCell(cell) {\r\n        this.editingCell = cell;\r\n        this.bindDocumentEditListener();\r\n    }\r\n\r\n    isEditingCellValid() {\r\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\r\n    }\r\n\r\n    bindDocumentEditListener() {\r\n        if (!this.documentEditListener) {\r\n            this.documentEditListener = (event) => {\r\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\r\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\r\n                    this.editingCell = null;\r\n                    this.unbindDocumentEditListener();\r\n                }\r\n\r\n                this.editingCellClick = false;\r\n            };\r\n\r\n            document.addEventListener('click', this.documentEditListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentEditListener() {\r\n        if (this.documentEditListener) {\r\n            document.removeEventListener('click', this.documentEditListener);\r\n            this.documentEditListener = null;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindDocumentEditListener();\r\n        this.editingCell = null;\r\n        this.initialized = null;\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: '[pTreeTableBody]',\r\n    template: `\r\n        <ng-container *ngIf=\"!tt.virtualScroll\">\r\n            <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\r\n                <ng-container *ngIf=\"serializedNode.visible\">\r\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\r\n                </ng-container>\r\n            </ng-template>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"tt.virtualScroll\">\r\n            <ng-template cdkVirtualFor let-serializedNode let-rowIndex=\"index\" [cdkVirtualForOf]=\"tt.serializedValue\" [cdkVirtualForTrackBy]=\"tt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\r\n                <ng-container *ngIf=\"serializedNode.visible\">\r\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\r\n                </ng-container>\r\n            </ng-template>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"tt.isEmpty()\">\r\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: {$implicit: columns}\"></ng-container>\r\n        </ng-container>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TTBody {\r\n\r\n    @Input(\"pTreeTableBody\") columns: any[];\r\n\r\n    @Input(\"pTreeTableBodyTemplate\") template: TemplateRef<any>;\r\n\r\n    @Input() frozen: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public treeTableService: TreeTableService, public cd: ChangeDetectorRef) {\r\n        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\r\n            if (this.tt.virtualScroll) {\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: '[ttScrollableView]',\r\n    template: `\r\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\r\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\r\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\r\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\r\n                    <thead class=\"p-treetable-thead\">\r\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate||tt.headerTemplate : tt.headerTemplate; context {$implicit: columns}\"></ng-container>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngIf=\"!tt.virtualScroll; else virtualScrollTemplate\">\r\n            <div #scrollBody class=\"p-treetable-scrollable-body\" [ngStyle]=\"{'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined}\">\r\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\r\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\r\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\r\n                </table>\r\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-template #virtualScrollTemplate>\r\n            <cdk-virtual-scroll-viewport [itemSize]=\"tt.virtualRowHeight\" [style.height]=\"tt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\r\n                    [minBufferPx]=\"tt.minBufferPx\" [maxBufferPx]=\"tt.maxBufferPx\" class=\"p-treetable-virtual-scrollable-body\">\r\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\r\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\r\n                    <tbody class=\"p-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\r\n                </table>\r\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\r\n            </cdk-virtual-scroll-viewport>\r\n        </ng-template>\r\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"p-treetable-scrollable-footer\">\r\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\r\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\r\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\r\n                    <tfoot class=\"p-treetable-tfoot\">\r\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate||tt.footerTemplate : tt.footerTemplate; context {$implicit: columns}\"></ng-container>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TTScrollableView implements AfterViewInit, OnDestroy {\r\n\r\n    @Input(\"ttScrollableView\") columns: any[];\r\n\r\n    @Input() frozen: boolean;\r\n\r\n    @ViewChild('scrollHeader') scrollHeaderViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollHeaderBox') scrollHeaderBoxViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollBody') scrollBodyViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollTable') scrollTableViewChild: ElementRef;\r\n\r\n    @ViewChild('loadingTable') scrollLoadingTableViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollFooter') scrollFooterViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollFooterBox') scrollFooterBoxViewChild: ElementRef;\r\n\r\n    @ViewChild('scrollableAligner') scrollableAlignerViewChild: ElementRef;\r\n\r\n    @ViewChild(CdkVirtualScrollViewport) virtualScrollBody: CdkVirtualScrollViewport;\r\n\r\n    headerScrollListener;\r\n\r\n    bodyScrollListener;\r\n\r\n    footerScrollListener;\r\n\r\n    frozenSiblingBody: Element;\r\n\r\n    totalRecordsSubscription: Subscription;\r\n\r\n    _scrollHeight: string;\r\n\r\n    preventBodyScrollPropagation: boolean;\r\n\r\n    @Input() get scrollHeight(): string {\r\n        return this._scrollHeight;\r\n    }\r\n    set scrollHeight(val: string) {\r\n        this._scrollHeight = val;\r\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\r\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.')\r\n        }\r\n    }\r\n\r\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {}\r\n\r\n    ngAfterViewInit() {\r\n        if (!this.frozen) {\r\n            if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {\r\n                DomHandler.addClass(this.el.nativeElement, 'p-treetable-unfrozen-view');\r\n            }\r\n\r\n            let frozenView = this.el.nativeElement.previousElementSibling;\r\n            if (frozenView) {\r\n                if (this.tt.virtualScroll)\r\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-treetable-virtual-scrollable-body');\r\n                else\r\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-treetable-scrollable-body');\r\n            }\r\n\r\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\r\n\r\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\r\n                this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\r\n            }\r\n        }\r\n        else {\r\n            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\r\n                this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\r\n            }\r\n        }\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    bindEvents() {\r\n        this.zone.runOutsideAngular(() => {\r\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n                this.headerScrollListener = this.onHeaderScroll.bind(this);\r\n                this.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\r\n            }\r\n\r\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n                this.footerScrollListener = this.onFooterScroll.bind(this);\r\n                this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\r\n            }\r\n\r\n            if (!this.frozen) {\r\n                this.bodyScrollListener = this.onBodyScroll.bind(this);\r\n\r\n                if (this.tt.virtualScroll)\r\n                    this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);\r\n                else\r\n                    this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindEvents() {\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\r\n        }\r\n\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\r\n        }\r\n\r\n        if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\r\n            this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\r\n        }\r\n\r\n        if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\r\n            this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\r\n        }\r\n    }\r\n\r\n    onHeaderScroll() {\r\n        const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\r\n\r\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\r\n\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\r\n        }\r\n\r\n        this.preventBodyScrollPropagation = true;\r\n    }\r\n\r\n    onFooterScroll() {\r\n        const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\r\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\r\n\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\r\n        }\r\n\r\n        this.preventBodyScrollPropagation = true;\r\n    }\r\n\r\n    onBodyScroll(event) {\r\n        if (this.preventBodyScrollPropagation) {\r\n            this.preventBodyScrollPropagation = false;\r\n            return;\r\n        }\r\n\r\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\r\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\r\n        }\r\n\r\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\r\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\r\n        }\r\n\r\n        if (this.frozenSiblingBody) {\r\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\r\n        }\r\n    }\r\n\r\n    scrollToVirtualIndex(index: number): void {\r\n        if (this.virtualScrollBody) {\r\n            this.virtualScrollBody.scrollToIndex(index);\r\n        }\r\n    }\r\n\r\n    scrollTo(options): void {\r\n        if (this.virtualScrollBody) {\r\n            this.virtualScrollBody.scrollTo(options);\r\n        }\r\n        else {\r\n            if (this.scrollBodyViewChild.nativeElement.scrollTo) {\r\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\r\n            }\r\n            else {\r\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\r\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindEvents();\r\n\r\n        this.frozenSiblingBody = null;\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttSortableColumn]',\r\n    host: {\r\n        '[class.p-sortable-column]': 'isEnabled()',\r\n        '[class.p-highlight]': 'sorted',\r\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\r\n        '[attr.role]': '\"columnheader\"'\r\n    }\r\n})\r\nexport class TTSortableColumn implements OnInit, OnDestroy {\r\n\r\n    @Input(\"ttSortableColumn\") field: string;\r\n\r\n    @Input() ttSortableColumnDisabled: boolean;\r\n\r\n    sorted: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable) {\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\r\n                this.updateSortState();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n        }\r\n    }\r\n\r\n    updateSortState() {\r\n        this.sorted = this.tt.isSorted(this.field);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent) {\r\n        if (this.isEnabled()) {\r\n            this.updateSortState();\r\n            this.tt.sort({\r\n                originalEvent: event,\r\n                field: this.field\r\n            });\r\n\r\n            DomHandler.clearSelection();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown.enter', ['$event'])\r\n    onEnterKey(event: MouseEvent) {\r\n        this.onClick(event);\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttSortableColumnDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTableSortIcon',\r\n    template: `\r\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TTSortIcon implements OnInit, OnDestroy {\r\n\r\n    @Input() field: string;\r\n\r\n    @Input() ariaLabelDesc: string;\r\n\r\n    @Input() ariaLabelAsc: string;\r\n\r\n    subscription: Subscription;\r\n\r\n    sortOrder: number;\r\n\r\n    constructor(public tt: TreeTable, public cd: ChangeDetectorRef) {\r\n        this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\r\n            this.updateSortState();\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updateSortState();\r\n    }\r\n\r\n    onClick(event){\r\n        event.preventDefault();\r\n    }\r\n\r\n    updateSortState() {\r\n        if (this.tt.sortMode === 'single') {\r\n            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\r\n        }\r\n        else if (this.tt.sortMode === 'multiple') {\r\n            let sortMeta = this.tt.getSortMeta(this.field);\r\n            this.sortOrder = sortMeta ? sortMeta.order: 0;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttResizableColumn]'\r\n})\r\nexport class TTResizableColumn implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() ttResizableColumnDisabled: boolean;\r\n\r\n    resizer: HTMLSpanElement;\r\n\r\n    resizerMouseDownListener: any;\r\n\r\n    documentMouseMoveListener: any;\r\n\r\n    documentMouseUpListener: any;\r\n\r\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) { }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnabled()) {\r\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'p-column-resizer';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n            });\r\n        }\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: Event) {\r\n        this.tt.onColumnResizeBegin(event);\r\n        this.bindDocumentEvents();\r\n    }\r\n\r\n    onDocumentMouseMove(event: Event) {\r\n        this.tt.onColumnResize(event);\r\n    }\r\n\r\n    onDocumentMouseUp(event: Event) {\r\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttResizableColumnDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttReorderableColumn]'\r\n})\r\nexport class TTReorderableColumn implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() ttReorderableColumnDisabled: boolean;\r\n\r\n    dragStartListener: any;\r\n\r\n    dragOverListener: any;\r\n\r\n    dragEnterListener: any;\r\n\r\n    dragLeaveListener: any;\r\n\r\n    mouseDownListener: any;\r\n\r\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) { }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnabled()) {\r\n            this.bindEvents();\r\n        }\r\n    }\r\n\r\n    bindEvents() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.mouseDownListener = this.onMouseDown.bind(this);\r\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\r\n\r\n            this.dragStartListener = this.onDragStart.bind(this);\r\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\r\n\r\n            this.dragOverListener = this.onDragEnter.bind(this);\r\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\r\n\r\n            this.dragEnterListener = this.onDragEnter.bind(this);\r\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\r\n\r\n            this.dragLeaveListener = this.onDragLeave.bind(this);\r\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\r\n        });\r\n    }\r\n\r\n    unbindEvents() {\r\n        if (this.mouseDownListener) {\r\n            document.removeEventListener('mousedown', this.mouseDownListener);\r\n            this.mouseDownListener = null;\r\n        }\r\n\r\n        if (this.dragOverListener) {\r\n            document.removeEventListener('dragover', this.dragOverListener);\r\n            this.dragOverListener = null;\r\n        }\r\n\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n\r\n        if (this.dragEnterListener) {\r\n            document.removeEventListener('dragenter', this.dragEnterListener);\r\n            this.dragEnterListener = null;\r\n        }\r\n\r\n        if (this.dragLeaveListener) {\r\n            document.removeEventListener('dragleave', this.dragLeaveListener);\r\n            this.dragLeaveListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\r\n            this.el.nativeElement.draggable = false;\r\n        else\r\n            this.el.nativeElement.draggable = true;\r\n    }\r\n\r\n    onDragStart(event) {\r\n        this.tt.onColumnDragStart(event, this.el.nativeElement);\r\n    }\r\n\r\n    onDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragEnter(event) {\r\n        this.tt.onColumnDragEnter(event, this.el.nativeElement);\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        this.tt.onColumnDragLeave(event);\r\n    }\r\n\r\n    @HostListener('drop', ['$event'])\r\n    onDrop(event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.onColumnDrop(event, this.el.nativeElement);\r\n        }\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttReorderableColumnDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindEvents();\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttSelectableRow]',\r\n    host: {\r\n        '[class.p-highlight]': 'selected'\r\n    }\r\n})\r\nexport class TTSelectableRow implements OnInit, OnDestroy {\r\n\r\n    @Input(\"ttSelectableRow\") rowNode: any;\r\n\r\n    @Input() ttSelectableRowDisabled: boolean;\r\n\r\n    selected: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\r\n                this.selected = this.tt.isSelected(this.rowNode.node);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.tt.isSelected(this.rowNode.node);\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: Event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onEnterKey(event: KeyboardEvent) {\r\n        if (event.which === 13) {\r\n            this.onClick(event);\r\n        }\r\n    }\r\n\r\n    @HostListener('touchend', ['$event'])\r\n    onTouchEnd(event: Event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowTouchEnd(event);\r\n        }\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttSelectableRowDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttSelectableRowDblClick]',\r\n    host: {\r\n        '[class.p-highlight]': 'selected'\r\n    }\r\n})\r\nexport class TTSelectableRowDblClick implements OnInit, OnDestroy {\r\n\r\n    @Input(\"ttSelectableRowDblClick\") rowNode: any;\r\n\r\n    @Input() ttSelectableRowDisabled: boolean;\r\n\r\n    selected: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public tableService: TreeTableService) {\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\r\n                this.selected = this.tt.isSelected(this.rowNode.node);\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.isEnabled()) {\r\n            this.selected = this.tt.isSelected(this.rowNode.node);\r\n        }\r\n    }\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    onClick(event: Event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttSelectableRowDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttContextMenuRow]',\r\n    host: {\r\n        '[class.p-highlight-contextmenu]': 'selected',\r\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\r\n    }\r\n})\r\nexport class TTContextMenuRow {\r\n\r\n    @Input(\"ttContextMenuRow\") rowNode: any;\r\n\r\n    @Input() ttContextMenuRowDisabled: boolean;\r\n\r\n    selected: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public tableService: TreeTableService, private el: ElementRef) {\r\n        if (this.isEnabled()) {\r\n            this.subscription = this.tt.tableService.contextMenuSource$.subscribe((node) => {\r\n                this.selected = this.tt.equals(this.rowNode.node, node);\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostListener('contextmenu', ['$event'])\r\n    onContextMenu(event: Event) {\r\n        if (this.isEnabled()) {\r\n            this.tt.handleRowRightClick({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n\r\n            this.el.nativeElement.focus();\r\n\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttContextMenuRowDisabled !== true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTableCheckbox',\r\n    template: `\r\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n            </div>\r\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\r\n                'p-highlight':checked, 'p-disabled':disabled}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\r\n                <span class=\"p-checkbox-icon pi\" [ngClass]=\"{'pi-check':checked, 'pi-minus': rowNode.node.partialSelected}\"></span>\r\n            </div>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TTCheckbox  {\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input(\"value\") rowNode: any;\r\n\r\n    @ViewChild('box') boxViewChild: ElementRef;\r\n\r\n    checked: boolean;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public tableService: TreeTableService, public cd: ChangeDetectorRef) {\r\n        this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\r\n            this.checked = this.tt.isSelected(this.rowNode.node);\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checked = this.tt.isSelected(this.rowNode.node);\r\n    }\r\n\r\n    onClick(event: Event) {\r\n        if (!this.disabled) {\r\n            this.tt.toggleNodeWithCheckbox({\r\n                originalEvent: event,\r\n                rowNode: this.rowNode\r\n            });\r\n        }\r\n        DomHandler.clearSelection();\r\n    }\r\n\r\n    onFocus() {\r\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\r\n    }\r\n\r\n    onBlur() {\r\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTableHeaderCheckbox',\r\n    template: `\r\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event, cb.checked)\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value||tt.value.length === 0\">\r\n            </div>\r\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\r\n                'p-highlight':checked, 'p-disabled': (!tt.value || tt.value.length === 0)}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\r\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\r\n            </div>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TTHeaderCheckbox  {\r\n\r\n    @ViewChild('box') boxViewChild: ElementRef;\r\n\r\n    checked: boolean;\r\n\r\n    disabled: boolean;\r\n\r\n    selectionChangeSubscription: Subscription;\r\n\r\n    valueChangeSubscription: Subscription;\r\n\r\n    constructor(public tt: TreeTable, public tableService: TreeTableService, private cd: ChangeDetectorRef) {\r\n        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\r\n            this.checked = this.updateCheckedState();\r\n        });\r\n\r\n        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\r\n            this.checked = this.updateCheckedState();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checked = this.updateCheckedState();\r\n    }\r\n\r\n    onClick(event: Event, checked) {\r\n        if (this.tt.value && this.tt.value.length > 0) {\r\n            this.tt.toggleNodesWithCheckbox(event, !checked);\r\n        }\r\n\r\n        DomHandler.clearSelection();\r\n    }\r\n\r\n    onFocus() {\r\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\r\n    }\r\n\r\n    onBlur() {\r\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.selectionChangeSubscription) {\r\n            this.selectionChangeSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.valueChangeSubscription) {\r\n            this.valueChangeSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    updateCheckedState() {\r\n        this.cd.markForCheck();\r\n        let checked: boolean;\r\n        const data = this.tt.filteredNodes||this.tt.value;\r\n\r\n        if (data) {\r\n            for (let node of data) {\r\n                if (this.tt.isSelected(node)) {\r\n                    checked = true;\r\n                }\r\n                else  {\r\n                    checked = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            checked = false;\r\n        }\r\n\r\n        return checked;\r\n    }\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttEditableColumn]'\r\n})\r\nexport class TTEditableColumn implements AfterViewInit {\r\n\r\n    @Input(\"ttEditableColumn\") data: any;\r\n\r\n    @Input(\"ttEditableColumnField\") field: any;\r\n\r\n    @Input() ttEditableColumnDisabled: boolean;\r\n\r\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {}\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnabled()) {\r\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent) {\r\n        if (this.isEnabled()) {\r\n            this.tt.editingCellClick = true;\r\n\r\n            if (this.tt.editingCell) {\r\n                if (this.tt.editingCell !== this.el.nativeElement) {\r\n                    if (!this.tt.isEditingCellValid()) {\r\n                        return;\r\n                    }\r\n\r\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\r\n                    this.openCell();\r\n                }\r\n            }\r\n            else {\r\n                this.openCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    openCell() {\r\n        this.tt.updateEditingCell(this.el.nativeElement);\r\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\r\n        this.tt.onEditInit.emit({ field: this.field, data: this.data});\r\n        this.tt.editingCellClick = true;\r\n        this.zone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                let focusable = DomHandler.findSingle(this.el.nativeElement, 'input, textarea');\r\n                if (focusable) {\r\n                    focusable.focus();\r\n                }\r\n            }, 50);\r\n        });\r\n    }\r\n\r\n    closeEditingCell() {\r\n        DomHandler.removeClass(this.tt.editingCell, 'p-checkbox-icon');\r\n        this.tt.editingCell = null;\r\n        this.tt.unbindDocumentEditListener();\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (this.isEnabled()) {\r\n            //enter\r\n            if (event.keyCode == 13) {\r\n                if (this.tt.isEditingCellValid()) {\r\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\r\n                    this.closeEditingCell();\r\n                    this.tt.onEditComplete.emit({ field: this.field, data: this.data });\r\n                }\r\n\r\n                event.preventDefault();\r\n            }\r\n\r\n            //escape\r\n            else if (event.keyCode == 27) {\r\n                if (this.tt.isEditingCellValid()) {\r\n                    DomHandler.removeClass(this.tt.editingCell, 'p-cell-editing');\r\n                    this.closeEditingCell();\r\n                    this.tt.onEditCancel.emit({ field: this.field, data: this.data });\r\n                }\r\n\r\n                event.preventDefault();\r\n            }\r\n\r\n            //tab\r\n            else if (event.keyCode == 9) {\r\n                this.tt.onEditComplete.emit({ field: this.field, data: this.data });\r\n\r\n                if (event.shiftKey)\r\n                    this.moveToPreviousCell(event);\r\n                else\r\n                    this.moveToNextCell(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    findCell(element) {\r\n        if (element) {\r\n            let cell = element;\r\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\r\n                cell = cell.parentElement;\r\n            }\r\n\r\n            return cell;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    moveToPreviousCell(event: KeyboardEvent) {\r\n        let currentCell = this.findCell(event.target);\r\n        let row = currentCell.parentElement;\r\n        let targetCell = this.findPreviousEditableColumn(currentCell);\r\n\r\n        if (targetCell) {\r\n            DomHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    moveToNextCell(event: KeyboardEvent) {\r\n        let currentCell = this.findCell(event.target);\r\n        let row = currentCell.parentElement;\r\n        let targetCell = this.findNextEditableColumn(currentCell);\r\n\r\n        if (targetCell) {\r\n            DomHandler.invokeElementMethod(targetCell, 'click');\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    findPreviousEditableColumn(cell: Element) {\r\n        let prevCell = cell.previousElementSibling;\r\n\r\n        if (!prevCell) {\r\n            let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\r\n            if (previousRow) {\r\n                prevCell = previousRow.lastElementChild;\r\n            }\r\n        }\r\n\r\n        if (prevCell) {\r\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\r\n                return prevCell;\r\n            else\r\n                return this.findPreviousEditableColumn(prevCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    findNextEditableColumn(cell: Element) {\r\n        let nextCell = cell.nextElementSibling;\r\n\r\n        if (!nextCell) {\r\n            let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\r\n            if (nextRow) {\r\n                nextCell = nextRow.firstElementChild;\r\n            }\r\n        }\r\n\r\n        if (nextCell) {\r\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\r\n                return nextCell;\r\n            else\r\n                return this.findNextEditableColumn(nextCell);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    isEnabled() {\r\n        return this.ttEditableColumnDisabled !== true;\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTableCellEditor',\r\n    template: `\r\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\r\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\r\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\r\n        </ng-container>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TreeTableCellEditor implements AfterContentInit {\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\r\n\r\n    inputTemplate: TemplateRef<any>;\r\n\r\n    outputTemplate: TemplateRef<any>;\r\n\r\n    constructor(public tt: TreeTable, public editableColumn: TTEditableColumn) { }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'input':\r\n                    this.inputTemplate = item.template;\r\n                    break;\r\n\r\n                case 'output':\r\n                    this.outputTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[ttRow]',\r\n    host: {\r\n        '[attr.tabindex]': '\"0\"'\r\n    }\r\n})\r\nexport class TTRow {\r\n\r\n    @Input('ttRow') rowNode: any;\r\n\r\n    constructor(public tt: TreeTable, public el: ElementRef, public zone: NgZone) {}\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        switch (event.which) {\r\n            //down arrow\r\n            case 40:\r\n                let nextRow = this.el.nativeElement.nextElementSibling;\r\n                if (nextRow) {\r\n                    nextRow.focus();\r\n                }\r\n\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //down arrow\r\n            case 38:\r\n                let prevRow = this.el.nativeElement.previousElementSibling;\r\n                if (prevRow) {\r\n                    prevRow.focus();\r\n                }\r\n\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //left arrow\r\n            case 37:\r\n                if (this.rowNode.node.expanded) {\r\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\r\n                    this.rowNode.node.expanded = false;\r\n\r\n                    this.tt.onNodeCollapse.emit({\r\n                        originalEvent: event,\r\n                        node: this.rowNode.node\r\n                    });\r\n\r\n                    this.tt.updateSerializedValue();\r\n                    this.tt.tableService.onUIUpdate(this.tt.value);\r\n                    this.restoreFocus();\r\n                }\r\n            break;\r\n\r\n            //right arrow\r\n            case 39:\r\n                if (!this.rowNode.node.expanded) {\r\n                    this.tt.toggleRowIndex = DomHandler.index(this.el.nativeElement);\r\n                    this.rowNode.node.expanded = true;\r\n\r\n                    this.tt.onNodeExpand.emit({\r\n                        originalEvent: event,\r\n                        node: this.rowNode.node\r\n                    });\r\n\r\n                    this.tt.updateSerializedValue();\r\n                    this.tt.tableService.onUIUpdate(this.tt.value);\r\n                    this.restoreFocus();\r\n                }\r\n            break;\r\n        }\r\n    }\r\n\r\n    restoreFocus() {\r\n        this.zone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                let row = DomHandler.findSingle(this.tt.containerViewChild.nativeElement, '.p-treetable-tbody').children[this.tt.toggleRowIndex];\r\n                if (row) {\r\n                    row.focus();\r\n                }\r\n            }, 25);\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-treeTableToggler',\r\n    template: `\r\n        <button type=\"button\" class=\"p-treetable-toggler p-link\" (click)=\"onClick($event)\" tabindex=\"-1\" pRipple\r\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\" [style.marginLeft]=\"rowNode.level * 16 + 'px'\">\r\n            <i [ngClass]=\"rowNode.node.expanded ? 'pi pi-fw pi-chevron-down' : 'pi pi-fw pi-chevron-right'\"></i>\r\n        </button>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TreeTableToggler {\r\n\r\n    @Input() rowNode: any;\r\n\r\n    constructor(public tt: TreeTable) {}\r\n\r\n    onClick(event: Event) {\r\n        this.rowNode.node.expanded = !this.rowNode.node.expanded;\r\n\r\n        if (this.rowNode.node.expanded) {\r\n            this.tt.onNodeExpand.emit({\r\n                originalEvent: event,\r\n                node: this.rowNode.node\r\n            });\r\n        }\r\n        else {\r\n            this.tt.onNodeCollapse.emit({\r\n                originalEvent: event,\r\n                node: this.rowNode.node\r\n            });\r\n        }\r\n\r\n        this.tt.updateSerializedValue();\r\n        this.tt.tableService.onUIUpdate(this.tt.value);\r\n\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,PaginatorModule,ScrollingModule,RippleModule],\r\n    exports: [TreeTable,SharedModule,TreeTableToggler,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor,ScrollingModule],\r\n    declarations: [TreeTable,TreeTableToggler,TTScrollableView,TTBody,TTSortableColumn,TTSortIcon,TTResizableColumn,TTRow,TTReorderableColumn,TTSelectableRow,TTSelectableRowDblClick,TTContextMenuRow,TTCheckbox,TTHeaderCheckbox,TTEditableColumn,TreeTableCellEditor]\r\n})\r\nexport class TreeTableModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}