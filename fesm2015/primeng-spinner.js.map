{"version":3,"file":"primeng-spinner.js","sources":["../../src/app/components/spinner/spinner.ts","../../src/app/components/spinner/primeng-spinner.ts"],"sourcesContent":["import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const SPINNER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => Spinner),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-spinner',\r\n    template: `\r\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\r\n            <input #inputfield type=\"text\" [attr.id]=\"inputId\" [value]=\"formattedValue||null\" [attr.name]=\"name\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"value\" [attr.aria-labelledby]=\"ariaLabelledBy\"\r\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\r\n            (keydown)=\"onInputKeydown($event)\" (blur)=\"onInputBlur($event)\" (input)=\"onInput($event)\" (change)=\"onInputChange($event)\" (focus)=\"onInputFocus($event)\"\r\n            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [ngClass]=\"'ui-spinner-input ui-inputtext ui-widget ui-state-default ui-corner-all'\">\r\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\r\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event)\" (mouseup)=\"onUpButtonMouseup($event)\">\r\n                <span class=\"ui-spinner-button-icon pi pi-caret-up ui-clickable\"></span>\r\n            </button>\r\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\r\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event)\" (mouseup)=\"onDownButtonMouseup($event)\">\r\n                <span class=\"ui-spinner-button-icon pi pi-caret-down ui-clickable\"></span>\r\n            </button>\r\n        </span>\r\n    `,\r\n    host: {\r\n        '[class.ui-inputwrapper-filled]': 'filled',\r\n        '[class.ui-inputwrapper-focus]': 'focus'\r\n    },\r\n    providers: [SPINNER_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./spinner.css']\r\n})\r\nexport class Spinner implements OnInit,ControlValueAccessor {\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n    \r\n    @Input() maxlength: number;\r\n    \r\n    @Input() size: number;\r\n\r\n    @Input() placeholder: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() readonly: boolean;\r\n\r\n    @Input() tabindex: number;\r\n            \r\n    @Input() required: boolean;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() inputStyle: any;\r\n\r\n    @Input() inputStyleClass: string;\r\n\r\n    @Input() formatInput: boolean;\r\n\r\n    @Input() decimalSeparator: string;\r\n\r\n    @Input() thousandSeparator: string;\r\n\r\n    @Input() precision: number;\r\n    \r\n    value: any;\r\n\r\n    _step: number = 1;\r\n\r\n    formattedValue: string;\r\n        \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    keyPattern: RegExp = /[0-9\\+\\-]/;\r\n        \r\n    public timer: any;\r\n    \r\n    public focus: boolean;\r\n    \r\n    public filled: boolean;\r\n    \r\n    public negativeSeparator = '-';\r\n\r\n    localeDecimalSeparator: string;\r\n\r\n    localeThousandSeparator: string;\r\n\r\n    thousandRegExp: RegExp;\r\n\r\n    calculatedPrecision: number;\r\n    \r\n    @ViewChild('inputfield') inputfieldViewChild: ElementRef;\r\n\r\n    @Input() get step(): number {\r\n        return this._step;\r\n    }\r\n    set step(val:number) {\r\n        this._step = val;\r\n\r\n        if (this._step != null) {\r\n            let tokens = this.step.toString().split(/[,]|[.]/);\r\n            this.calculatedPrecision = tokens[1] ? tokens[1].length : undefined;\r\n        }\r\n    }\r\n    \r\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.formatInput) {\r\n            this.localeDecimalSeparator = (1.1).toLocaleString().substring(1, 2);\r\n            this.localeThousandSeparator = (1000).toLocaleString().substring(1, 2);\r\n            this.thousandRegExp = new RegExp(`[${this.thousandSeparator || this.localeThousandSeparator}]`, 'gim');\r\n\r\n            if (this.decimalSeparator && this.thousandSeparator && this.decimalSeparator === this.thousandSeparator) {\r\n                console.warn(\"thousandSeparator and decimalSeparator cannot have the same value.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    repeat(event: Event, interval: number, dir: number) {\r\n        let i = interval||500;\r\n\r\n        this.clearTimer();\r\n        this.timer = setTimeout(() => {\r\n            this.repeat(event, 40, dir);\r\n        }, i);\r\n\r\n        this.spin(event, dir);\r\n    }\r\n    \r\n    spin(event: Event, dir: number) {\r\n        let step = this.step * dir;\r\n        let currentValue: number;\r\n        let precision = this.getPrecision();\r\n\r\n        if (this.value)\r\n            currentValue = (typeof this.value === 'string') ? this.parseValue(this.value) : this.value;\r\n        else\r\n            currentValue = 0;\r\n        \r\n        if (precision)\r\n            this.value = parseFloat(this.toFixed(currentValue + step, precision));\r\n        else\r\n            this.value = currentValue + step;\r\n    \r\n        if (this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\r\n            this.value = currentValue;\r\n        }\r\n    \r\n        if (this.min !== undefined && this.value < this.min) {\r\n            this.value = this.min;\r\n        }\r\n\r\n        if (this.max !== undefined && this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n        \r\n        this.formatValue();\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit(event);\r\n    }\r\n\r\n    getPrecision() {\r\n        return this.precision === undefined ? this.calculatedPrecision : this.precision;\r\n    }\r\n    \r\n    toFixed(value: number, precision: number) {\r\n        let power = Math.pow(10, precision||0);\r\n        return String(Math.round(value * power) / power);\r\n    }\r\n    \r\n    onUpButtonMousedown(event: Event) {\r\n        if (!this.disabled) {\r\n            this.inputfieldViewChild.nativeElement.focus();\r\n            this.repeat(event, null, 1);\r\n            this.updateFilledState();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onUpButtonMouseup(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onUpButtonMouseleave(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMousedown(event: Event) {\r\n        if (!this.disabled) {\r\n            this.inputfieldViewChild.nativeElement.focus();\r\n            this.repeat(event, null, -1);\r\n            this.updateFilledState();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMouseup(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMouseleave(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onInputKeydown(event: KeyboardEvent) {\r\n        if (event.which == 38) {\r\n            this.spin(event, 1);\r\n            event.preventDefault();\r\n        }\r\n        else if (event.which == 40) {\r\n            this.spin(event, -1);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onInputChange(event: Event) {\r\n        this.onChange.emit(event);\r\n    }\r\n\r\n    onInput(event: KeyboardEvent) {\r\n        this.value = this.parseValue((<HTMLInputElement> event.target).value);\r\n        this.onModelChange(this.value);\r\n        this.updateFilledState();\r\n    }\r\n        \r\n    onInputBlur(event) {\r\n        this.focus = false;\r\n        this.formatValue();\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    }\r\n    \r\n    onInputFocus(event) {\r\n        this.focus = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n    \r\n    parseValue(val: string): number {\r\n        let value: number;\r\n        let precision = this.getPrecision();\r\n                \r\n        if (val.trim() === '') {\r\n            value = null;\r\n        }\r\n        else {\r\n            if (this.formatInput) {\r\n                val = val.replace(this.thousandRegExp, '');\r\n            }\r\n\r\n            if (precision) {\r\n                val = this.formatInput ? val.replace(this.decimalSeparator || this.localeDecimalSeparator, '.') : val.replace(',', '.');\r\n                value = parseFloat(val);\r\n            }\r\n            else {\r\n                value = parseInt(val, 10);\r\n            }\r\n            \r\n            if (!isNaN(value)) {\r\n                if (this.max !== null && value > this.max) {\r\n                    value = this.max;\r\n                }\r\n\r\n                if (this.min !== null && value < this.min) {\r\n                    value = this.min;\r\n                }\r\n            }\r\n            else {\r\n                value = null;\r\n            }\r\n        }\r\n        \r\n        return value;\r\n    }\r\n\r\n    formatValue() {\r\n        let value = this.value;\r\n        let precision = this.getPrecision();\r\n\r\n        if (value != null) {\r\n            if (this.formatInput) {\r\n                value = value.toLocaleString(undefined, {maximumFractionDigits: 20});\r\n    \r\n                if (this.decimalSeparator && this.thousandSeparator) {\r\n                    value = value.split(this.localeDecimalSeparator);\r\n    \r\n                    if (precision && value[1]) {\r\n                        value[1] = (this.decimalSeparator || this.localeDecimalSeparator) + value[1];\r\n                    }\r\n    \r\n                    if (this.thousandSeparator && value[0].length > 3) {\r\n                        value[0] = value[0].replace(new RegExp(`[${this.localeThousandSeparator}]`, 'gim'), this.thousandSeparator);\r\n                    }\r\n    \r\n                    value = value.join('');\r\n                }\r\n            }\r\n    \r\n            this.formattedValue = value.toString();\r\n        }\r\n        else {\r\n            this.formattedValue = null;\r\n        }\r\n\r\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\r\n            this.inputfieldViewChild.nativeElement.value = this.formattedValue;\r\n        }\r\n    }\r\n            \r\n    clearTimer() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.formatValue();\r\n        this.updateFilledState();\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    updateFilledState() {\r\n        this.filled = (this.value !== undefined && this.value != null);\r\n    }\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,InputTextModule],\r\n    exports: [Spinner],\r\n    declarations: [Spinner]\r\n})\r\nexport class SpinnerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}