{"version":3,"file":"primeng-button.js","sources":["../../src/app/components/button/button.ts","../../src/app/components/button/primeng-button.ts"],"sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RippleModule} from 'primeng/ripple'; \r\nimport {PrimeTemplate} from 'primeng/api'; \r\n\r\n@Directive({\r\n    selector: '[pButton]'\r\n})\r\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\r\n            \r\n    public _label: string;\r\n    \r\n    public _icon: string;\r\n            \r\n    public initialized: boolean;\r\n    \r\n    public _initialStyleClass: string;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngAfterViewInit() {\r\n        this._initialStyleClass = this.el.nativeElement.className;\r\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\r\n\r\n        if (this.icon) {\r\n            let iconElement = document.createElement(\"span\");\r\n            iconElement.className = 'p-button-icon';\r\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\r\n            let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\r\n            if (iconPosClass) {\r\n                DomHandler.addClass(iconElement, iconPosClass);\r\n            }\r\n            DomHandler.addMultipleClasses(iconElement, this.icon);\r\n            this.el.nativeElement.appendChild(iconElement);\r\n        }\r\n        \r\n        let labelElement = document.createElement(\"span\");\r\n        if (this.icon && !this.label) {\r\n            labelElement.setAttribute('aria-hidden', 'true');\r\n        }\r\n        labelElement.className = 'p-button-label';\r\n        labelElement.appendChild(document.createTextNode(this.label||'&nbsp;'));\r\n        this.el.nativeElement.appendChild(labelElement);\r\n        this.initialized = true;\r\n    }\r\n        \r\n    getStyleClass(): string {\r\n        let styleClass = 'p-button p-component';\r\n        if (this.icon && !this.label) {\r\n            styleClass = styleClass + ' p-button-icon-only';\r\n        }\r\n        \r\n        return styleClass;\r\n    }\r\n\r\n    setStyleClass() {\r\n        let styleClass = this.getStyleClass();\r\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\r\n    }\r\n    \r\n    @Input() get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    set label(val: string) {\r\n        this._label = val;\r\n        \r\n        if (this.initialized) {\r\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\r\n            this.setStyleClass();\r\n        }\r\n    }\r\n    \r\n    @Input() get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(val: string) {\r\n        this._icon = val;\r\n        \r\n        if (this.initialized) {\r\n            if (this.iconPos)\r\n                DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this._icon;\r\n            else\r\n                DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon ' + this._icon;\r\n\r\n            this.setStyleClass();\r\n        }\r\n    }\r\n        \r\n    ngOnDestroy() {\r\n        while(this.el.nativeElement.hasChildNodes()) {\r\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\r\n        }\r\n        \r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-button',\r\n    template: `\r\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled\"\r\n            [ngClass]=\"{'p-button p-component':true,\r\n                        'p-button-icon-only': (icon && !label),\r\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label}\"\r\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\r\n            <ng-content></ng-content>\r\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n            <span [ngClass]=\"{'p-button-icon': true,\r\n                        'p-button-icon-left': iconPos === 'left' && label,\r\n                        'p-button-icon-right': iconPos === 'right' && label,\r\n                        'p-button-icon-top': iconPos === 'top' && label,\r\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\r\n                        [class]=\"icon\" *ngIf=\"icon\" [attr.aria-hidden]=\"true\"></span>\r\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\">{{label||'&nbsp;'}}</span>\r\n            <span [ngClass]=\"'p-badge'\" *ngIf=\"badge\" [class]=\"badgeClass\">{{badge}}</span>\r\n        </button>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class Button implements AfterContentInit {\r\n\r\n    @Input() type: string = \"button\";\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() badge: string;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() badgeClass: string;\r\n\r\n    contentTemplate: TemplateRef<any>;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RippleModule],\r\n    exports: [ButtonDirective,Button],\r\n    declarations: [ButtonDirective,Button]\r\n})\r\nexport class ButtonModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}