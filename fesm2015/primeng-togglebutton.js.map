{"version":3,"file":"primeng-togglebutton.js","sources":["../../src/app/components/togglebutton/togglebutton.ts","../../src/app/components/togglebutton/primeng-togglebutton.ts"],"sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectionStrategy,ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RippleModule} from 'primeng/ripple';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ToggleButton),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-toggleButton',\r\n    template: `\r\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \r\n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\r\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\r\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \r\n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\r\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\r\n        </div>\r\n    `,\r\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrls: ['../button/button.css']\r\n})\r\nexport class ToggleButton implements ControlValueAccessor {\r\n\r\n    @Input() onLabel: string;\r\n\r\n    @Input() offLabel: string;\r\n\r\n    @Input() onIcon: string;\r\n\r\n    @Input() offIcon: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n           \r\n    checked: boolean = false;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    constructor(public cd: ChangeDetectorRef) { }\r\n    \r\n    toggle(event: Event) {\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n            this.onModelChange(this.checked);\r\n            this.onModelTouched();\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                checked: this.checked\r\n            });\r\n\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n    \r\n    onBlur() {\r\n        this.onModelTouched();\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.checked = value;\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    get hasOnLabel():boolean {\r\n        return this.onLabel && this.onLabel.length > 0;\r\n    }\r\n    \r\n    get hasOffLabel():boolean {\r\n        return this.onLabel && this.onLabel.length > 0;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RippleModule],\r\n    exports: [ToggleButton],\r\n    declarations: [ToggleButton]\r\n})\r\nexport class ToggleButtonModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;MAKa,2BAA2B,GAAQ;IAC9C,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,YAAY,CAAC;IAC3C,KAAK,EAAE,IAAI;EACX;MAiBW,YAAY;IAgCrB,YAAmB,EAAqB;QAArB,OAAE,GAAF,EAAE,CAAmB;QAV/B,YAAO,GAAW,MAAM,CAAC;QAExB,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QAE3D,YAAO,GAAY,KAAK,CAAC;QAEzB,kBAAa,GAAa,SAAQ,CAAC;QAEnC,mBAAc,GAAa,SAAQ,CAAC;KAES;IAE7C,MAAM,CAAC,KAAY;QACf,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACf,aAAa,EAAE,KAAK;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;aACxB,CAAC,CAAC;YAEH,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SAC1B;KACJ;IAED,MAAM;QACF,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,UAAU,CAAC,KAAU;QACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KAC1B;IAED,gBAAgB,CAAC,EAAY;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,EAAY;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B;IAED,gBAAgB,CAAC,GAAY;QACzB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KAC1B;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KAClD;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KAClD;;;YA3FJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;KAQT;gBACD,SAAS,EAAE,CAAC,2BAA2B,CAAC;gBACxC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAElD;;;YAzBuF,iBAAiB;;;sBA4BpG,KAAK;uBAEL,KAAK;qBAEL,KAAK;sBAEL,KAAK;6BAEL,KAAK;uBAEL,KAAK;oBAEL,KAAK;yBAEL,KAAK;sBAEL,KAAK;uBAEL,KAAK;sBAEL,KAAK;uBAEL,MAAM;;MA4DE,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,EAAC,YAAY,CAAC;gBACpC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,YAAY,CAAC;aAC/B;;;AC7GD;;;;;;"}