{"version":3,"file":"primeng-inputnumber.js","sources":["../../src/app/components/inputnumber/inputnumber.ts","../../src/app/components/inputnumber/primeng-inputnumber.ts"],"sourcesContent":["\r\nimport {NgModule,Component,ChangeDetectionStrategy, Input, ElementRef, ViewChild, OnInit, EventEmitter, Output, forwardRef, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nexport const INPUTNUMBER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputNumber),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'p-inputNumber',\r\n    template: `\r\n        <span [ngClass]=\"{'p-inputnumber p-component': true,'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\r\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal', 'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'}\"\r\n                [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <input #input [ngClass]=\"'p-inputnumber-input'\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" pInputText [value]=\"formattedValue()\" [attr.placeholder]=\"placeholder\" [attr.title]=\"title\" [attr.id]=\"inputId\"\r\n                [attr.size]=\"size\" [attr.name]=\"name\" [attr.autocomplete]=\"autocomplete\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.aria-label]=\"ariaLabel\"\r\n                [attr.aria-required]=\"ariaRequired\" [disabled]=\"disabled\" [attr.required]=\"required\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\"\r\n                (input)=\"onUserInput($event)\" (keydown)=\"onInputKeyDown($event)\" (keypress)=\"onInputKeyPress($event)\" (paste)=\"onPaste($event)\" (click)=\"onInputClick()\"\r\n                (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\">\r\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\r\n                <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-up': true}\" [class]=\"incrementButtonClass\" [icon]=\"incrementButtonIcon\" [disabled]=\"disabled\"\r\n                    (mousedown)=\"this.onUpButtonMouseDown($event)\" (mouseup)=\"onUpButtonMouseUp()\" (mouseleave)=\"onUpButtonMouseLeave()\" (keydown)=\"onUpButtonKeyDown($event)\" (keyup)=\"onUpButtonKeyUp()\"></button>\r\n                <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-down': true}\" [class]=\"decrementButtonClass\" [icon]=\"decrementButtonIcon\" [disabled]=\"disabled\"\r\n                    (mousedown)=\"this.onDownButtonMouseDown($event)\" (mouseup)=\"onDownButtonMouseUp()\" (mouseleave)=\"onDownButtonMouseLeave()\" (keydown)=\"onDownButtonKeyDown($event)\" (keyup)=\"onDownButtonKeyUp()\"></button>\r\n            </span>\r\n            <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-up': true}\" [class]=\"incrementButtonClass\" [icon]=\"incrementButtonIcon\" *ngIf=\"showButtons && buttonLayout !== 'stacked'\" [disabled]=\"disabled\"\r\n                (mousedown)=\"this.onUpButtonMouseDown($event)\" (mouseup)=\"onUpButtonMouseUp()\" (mouseleave)=\"onUpButtonMouseLeave()\" (keydown)=\"onUpButtonKeyDown($event)\" (keyup)=\"onUpButtonKeyUp()\"></button>\r\n            <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-down': true}\" [class]=\"decrementButtonClass\" [icon]=\"decrementButtonIcon\" *ngIf=\"showButtons && buttonLayout !== 'stacked'\" [disabled]=\"disabled\"\r\n                (mousedown)=\"this.onDownButtonMouseDown($event)\" (mouseup)=\"onDownButtonMouseUp()\" (mouseleave)=\"onDownButtonMouseLeave()\" (keydown)=\"onDownButtonKeyDown($event)\" (keyup)=\"onDownButtonKeyUp()\"></button>\r\n        </span>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [INPUTNUMBER_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./inputnumber.css'],\r\n    host: {\r\n        '[class.p-inputwrapper-filled]': 'filled',\r\n        '[class.p-inputwrapper-focus]': 'focused'\r\n    }\r\n})\r\nexport class InputNumber implements OnInit,ControlValueAccessor {\r\n\r\n    @Input() showButtons: boolean = false;\r\n\r\n    @Input() format: boolean = true;\r\n\r\n    @Input() buttonLayout: string = \"stacked\";\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() placeholder: string;\r\n\r\n    @Input() size: number;\r\n\r\n    @Input() maxlength: number;\r\n\r\n    @Input() tabindex: string;\r\n\r\n    @Input() title: string;\r\n\r\n    @Input() ariaLabel: string;\r\n\r\n    @Input() ariaRequired: boolean;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() required: boolean;\r\n\r\n    @Input() autocomplete: string;\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n\r\n    @Input() incrementButtonClass: string;\r\n\r\n    @Input() decrementButtonClass: string;\r\n\r\n    @Input() incrementButtonIcon: string = 'pi pi-angle-up';\r\n\r\n    @Input() decrementButtonIcon: string = 'pi pi-angle-down';\r\n\r\n    @Input() step: number = 1;\r\n\r\n    @Input() inputStyle: any;\r\n\r\n    @Input() inputStyleClass: string;\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    value: number;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    focused: boolean;\r\n\r\n    initialized: boolean;\r\n\r\n    groupChar: string = '';\r\n\r\n    prefixChar: string = '';\r\n\r\n    suffixChar: string = '';\r\n\r\n    isSpecialChar: boolean;\r\n\r\n    timer: any;\r\n\r\n    lastValue: string;\r\n\r\n    _numeral: any;\r\n\r\n    numberFormat: any;\r\n\r\n    _decimal: any;\r\n\r\n    _group: any;\r\n\r\n    _minusSign: any;\r\n\r\n    _currency: any;\r\n\r\n    _prefix: any;\r\n\r\n    _suffix: any;\r\n\r\n    _index: any;\r\n\r\n    _localeOption: string;\r\n\r\n    _localeMatcherOption: string;\r\n\r\n    _modeOption: string = \"decimal\";\r\n\r\n    _currencyOption: string;\r\n\r\n    _currencyDisplayOption: string;\r\n\r\n    _useGroupingOption: boolean = true;\r\n\r\n    _minFractionDigitsOption: number;\r\n\r\n    _maxFractionDigitsOption: number;\r\n\r\n    _prefixOption: string;\r\n\r\n    _suffixOption: string;\r\n\r\n    @Input() get locale(): string {\r\n        return this._localeOption;\r\n    }\r\n\r\n    set locale(localeOption: string) {\r\n        this._localeOption = localeOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get localeMatcher(): string {\r\n        return this._localeMatcherOption;\r\n    }\r\n\r\n    set localeMatcher(localeMatcherOption: string) {\r\n        this._localeMatcherOption = localeMatcherOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get mode(): string {\r\n        return this._modeOption;\r\n    }\r\n\r\n    set mode(modeOption: string) {\r\n        this._modeOption = modeOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get currency(): string {\r\n        return this._currencyOption;\r\n    }\r\n\r\n    set currency(currencyOption: string) {\r\n        this._currencyOption = currencyOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get currencyDisplay(): string {\r\n        return this._currencyDisplayOption;\r\n    }\r\n\r\n    set currencyDisplay(currencyDisplayOption: string) {\r\n        this._currencyDisplayOption = currencyDisplayOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get useGrouping(): boolean {\r\n        return this._useGroupingOption;\r\n    }\r\n\r\n    set useGrouping(useGroupingOption: boolean) {\r\n        this._useGroupingOption = useGroupingOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get minFractionDigits(): number {\r\n        return this._minFractionDigitsOption;\r\n    }\r\n\r\n    set minFractionDigits(minFractionDigitsOption: number) {\r\n        this._minFractionDigitsOption = minFractionDigitsOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get maxFractionDigits(): number {\r\n        return this._maxFractionDigitsOption;\r\n    }\r\n\r\n    set maxFractionDigits(maxFractionDigitsOption: number) {\r\n        this._maxFractionDigitsOption = maxFractionDigitsOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get prefix(): string {\r\n        return this._prefixOption;\r\n    }\r\n\r\n    set prefix(prefixOption: string) {\r\n        this._prefixOption = prefixOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    @Input() get suffix(): string {\r\n        return this._suffixOption;\r\n    }\r\n\r\n    set suffix(suffixOption: string) {\r\n        this._suffixOption = suffixOption;\r\n        this.updateConstructParser();\r\n    }\r\n\r\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit() {\r\n        this.constructParser();\r\n\r\n        this.initialized = true;\r\n    }\r\n\r\n    getOptions() {\r\n        return {\r\n            localeMatcher: this.localeMatcher,\r\n            style: this.mode,\r\n            currency: this.currency,\r\n            currencyDisplay: this.currencyDisplay,\r\n            useGrouping: this.useGrouping,\r\n            minimumFractionDigits: this.minFractionDigits,\r\n            maximumFractionDigits: this.maxFractionDigits\r\n        };\r\n    }\r\n\r\n    constructParser() {\r\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\r\n        const numerals = [...new Intl.NumberFormat(this.locale, {useGrouping: false}).format(9876543210)].reverse();\r\n        const index = new Map(numerals.map((d, i) => [d, i]));\r\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\r\n        this._decimal = this.getDecimalExpression();\r\n        this._group = this.getGroupingExpression();\r\n        this._minusSign = this.getMinusSignExpression();\r\n        this._currency = this.getCurrencyExpression();\r\n        this._suffix = this.getSuffixExpression();\r\n        this._prefix = this.getPrefixExpression();\r\n        this._index = d => index.get(d);\r\n    }\r\n\r\n    updateConstructParser() {\r\n        if (this.initialized) {\r\n            this.constructParser();\r\n        }\r\n    }\r\n\r\n    escapeRegExp(text) {\r\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n    }\r\n\r\n    getDecimalExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: false});\r\n        return new RegExp(`[${formatter.format(1.1).trim().replace(this._numeral, '')}]`, 'g');\r\n    }\r\n\r\n    getGroupingExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: true});\r\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\r\n        return new RegExp(`[${this.groupChar}]`, 'g');\r\n    }\r\n\r\n    getMinusSignExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: false});\r\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\r\n    }\r\n\r\n    getCurrencyExpression() {\r\n        if (this.currency) {\r\n            const formatter = new Intl.NumberFormat(this.locale, {style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay});\r\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._decimal, '').replace(this._group, '')}]`, 'g');\r\n        }\r\n\r\n        return new RegExp(`[]`,'g');\r\n    }\r\n\r\n    getPrefixExpression() {\r\n        if (this.prefix) {\r\n            this.prefixChar = this.prefix;\r\n        }\r\n        else {\r\n            const formatter = new Intl.NumberFormat(this.locale, {style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay});\r\n            this.prefixChar = formatter.format(1).split('1')[0];\r\n        }\r\n\r\n        return new RegExp(`${this.escapeRegExp(this.prefixChar||'')}`, 'g');\r\n    }\r\n\r\n    getSuffixExpression() {\r\n        if (this.suffix) {\r\n            this.suffixChar = this.suffix;\r\n        }\r\n        else {\r\n            const formatter = new Intl.NumberFormat(this.locale, {style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay,\r\n                minimumFractionDigits: 0, maximumFractionDigits: 0});\r\n            this.suffixChar = formatter.format(1).split('1')[1];\r\n        }\r\n\r\n        return new RegExp(`${this.escapeRegExp(this.suffixChar||'')}`, 'g');\r\n    }\r\n\r\n    formatValue(value) {\r\n        if (value != null) {\r\n            if (value === '-') { // Minus sign\r\n                return value;\r\n            }\r\n\r\n            if (this.format) {\r\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\r\n                let formattedValue = formatter.format(value);\r\n                if (this.prefix) {\r\n                    formattedValue = this.prefix + formattedValue;\r\n                }\r\n\r\n                if (this.suffix) {\r\n                    formattedValue = formattedValue + this.suffix;\r\n                }\r\n\r\n                return formattedValue;\r\n            }\r\n\r\n            return value.toString();\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    parseValue(text) {\r\n        let filteredText = text\r\n                            .replace(this._suffix, '')\r\n                            .replace(this._prefix, '')\r\n                            .trim()\r\n                            .replace(/\\s/g, '')\r\n                            .replace(this._currency, '')\r\n                            .replace(this._group, '')\r\n                            .replace(this._minusSign, '-')\r\n                            .replace(this._decimal, '.')\r\n                            .replace(this._numeral, this._index);\r\n\r\n        if (filteredText) {\r\n            if (filteredText === '-') // Minus sign\r\n                return filteredText;\r\n\r\n            let parsedValue = +filteredText;\r\n            return isNaN(parsedValue) ? null : parsedValue;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    repeat(event, interval, dir) {\r\n        let i = interval || 500;\r\n\r\n        this.clearTimer();\r\n        this.timer = setTimeout(() => {\r\n            this.repeat(event, 40, dir);\r\n        }, i);\r\n\r\n        this.spin(event, dir);\r\n    }\r\n\r\n    spin(event, dir) {\r\n        let step = this.step * dir;\r\n        let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\r\n        let newValue = this.validateValue(currentValue + step);\r\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\r\n            return;\r\n        }\r\n\r\n        this.updateInput(newValue, null, 'spin');\r\n        this.updateModel(event, newValue);\r\n\r\n        this.handleOnInput(event, currentValue, newValue);\r\n    }\r\n\r\n    onUpButtonMouseDown(event) {\r\n        this.input.nativeElement.focus();\r\n        this.repeat(event, null, 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onUpButtonMouseUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onUpButtonMouseLeave() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onUpButtonKeyDown(event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            this.repeat(event, null, 1);\r\n        }\r\n    }\r\n\r\n    onUpButtonKeyUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonMouseDown(event) {\r\n        this.input.nativeElement.focus();\r\n        this.repeat(event, null, -1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDownButtonMouseUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonMouseLeave() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonKeyUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonKeyDown(event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            this.repeat(event, null, -1);\r\n        }\r\n    }\r\n\r\n    onUserInput(event) {\r\n        if (this.isSpecialChar) {\r\n            event.target.value = this.lastValue;\r\n        }\r\n        this.isSpecialChar = false;\r\n    }\r\n\r\n    onInputKeyDown(event) {\r\n        this.lastValue = event.target.value;\r\n        if (event.shiftKey || event.altKey) {\r\n            this.isSpecialChar = true;\r\n            return;\r\n        }\r\n\r\n        let selectionStart = event.target.selectionStart;\r\n        let selectionEnd = event.target.selectionEnd;\r\n        let inputValue = event.target.value;\r\n        let newValueStr = null;\r\n\r\n        if (event.altKey) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        switch (event.which) {\r\n            //up\r\n            case 38:\r\n                this.spin(event, 1);\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //down\r\n            case 40:\r\n                this.spin(event, -1);\r\n                event.preventDefault();\r\n            break;\r\n\r\n            //left\r\n            case 37:\r\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\r\n                    event.preventDefault();\r\n                }\r\n            break;\r\n\r\n            //right\r\n            case 39:\r\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\r\n                    event.preventDefault();\r\n                }\r\n            break;\r\n\r\n            //backspace\r\n            case 8: {\r\n                event.preventDefault();\r\n\r\n                if (selectionStart === selectionEnd) {\r\n                    let deleteChar = inputValue.charAt(selectionStart - 1);\r\n                    let decimalCharIndex = inputValue.search(this._decimal);\r\n                    this._decimal.lastIndex = 0;\r\n\r\n                    if (this.isNumeralChar(deleteChar)) {\r\n                        if (this._group.test(deleteChar)) {\r\n                            this._group.lastIndex = 0;\r\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\r\n                        }\r\n                        else if (this._decimal.test(deleteChar)) {\r\n                            this._decimal.lastIndex = 0;\r\n                            this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\r\n                        }\r\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\r\n                        }\r\n                        else if (decimalCharIndex > 0 && decimalCharIndex === 1) {\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\r\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\r\n                        }\r\n                        else {\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\r\n                        }\r\n                    }\r\n\r\n                    this.updateValue(event, newValueStr, null, 'delete-single');\r\n                }\r\n                else {\r\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\r\n                    this.updateValue(event, newValueStr, null, 'delete-range');\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // del\r\n            case 46:\r\n                event.preventDefault();\r\n\r\n                if (selectionStart === selectionEnd) {\r\n                    let deleteChar = inputValue.charAt(selectionStart);\r\n                    let decimalCharIndex = inputValue.search(this._decimal);\r\n                    this._decimal.lastIndex = 0;\r\n\r\n                    if (this.isNumeralChar(deleteChar)) {\r\n                        if (this._group.test(deleteChar)) {\r\n                            this._group.lastIndex = 0;\r\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\r\n                        }\r\n                        else if (this._decimal.test(deleteChar)) {\r\n                            this._decimal.lastIndex = 0;\r\n                            this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\r\n                        }\r\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\r\n                        }\r\n                        else if (decimalCharIndex > 0 && decimalCharIndex === 1) {\r\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\r\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\r\n                        }\r\n                        else {\r\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\r\n                        }\r\n                    }\r\n\r\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\r\n                }\r\n                else {\r\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\r\n                    this.updateValue(event, newValueStr, null, 'delete-range');\r\n                }\r\n            break;\r\n\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    onInputKeyPress(event) {\r\n        event.preventDefault();\r\n        let code = event.which || event.keyCode;\r\n        let char = String.fromCharCode(code);\r\n        const isDecimalSign = this.isDecimalSign(char);\r\n        const isMinusSign = this.isMinusSign(char);\r\n\r\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\r\n            this.insert(event, char, { isDecimalSign, isMinusSign });\r\n        }\r\n    }\r\n\r\n    onPaste(event) {\r\n        event.preventDefault();\r\n        let data = (event.clipboardData || window['clipboardData']).getData('Text');\r\n        if (data) {\r\n            let filteredData = this.parseValue(data);\r\n            if (filteredData != null) {\r\n                this.insert(event, filteredData.toString());\r\n            }\r\n        }\r\n    }\r\n\r\n    isMinusSign(char) {\r\n        if (this._minusSign.test(char)) {\r\n            this._minusSign.lastIndex = 0;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isDecimalSign(char) {\r\n        if (this._decimal.test(char)) {\r\n            this._decimal.lastIndex = 0;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\r\n        let selectionStart = this.input.nativeElement.selectionStart;\r\n        let selectionEnd = this.input.nativeElement.selectionEnd;\r\n        let inputValue = this.input.nativeElement.value.trim();\r\n        const decimalCharIndex = inputValue.search(this._decimal);\r\n        this._decimal.lastIndex = 0;\r\n        const minusCharIndex = inputValue.search(this._minusSign);\r\n        this._minusSign.lastIndex = 0;\r\n        let newValueStr;\r\n\r\n        if (sign.isMinusSign) {\r\n            if (selectionStart === 0) {\r\n                newValueStr = inputValue;\r\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\r\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\r\n                }\r\n\r\n                this.updateValue(event, newValueStr, text, 'insert');\r\n            }\r\n        }\r\n        else if (sign.isDecimalSign) {\r\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\r\n                this.updateValue(event, inputValue, text, 'insert');\r\n            }\r\n            else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\r\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\r\n                this.updateValue(event, newValueStr, text, 'insert');\r\n            }\r\n        }\r\n        else {\r\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\r\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\r\n\r\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                if ((selectionStart + text.length - (decimalCharIndex + 1)) <= maxFractionDigits) {\r\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length);\r\n                    this.updateValue(event, newValueStr, text, operation);\r\n                }\r\n            }\r\n            else {\r\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\r\n                this.updateValue(event, newValueStr, text, operation);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertText(value, text, start, end) {\r\n        let textSplit = text.split('.');\r\n\r\n        if (textSplit.length == 2) {\r\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\r\n            this._decimal.lastIndex = 0;\r\n            return (decimalCharIndex > 0) ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : (value || this.formatValue(text));\r\n        }\r\n        else if ((end - start) === value.length) {\r\n            return this.formatValue(text);\r\n        }\r\n        else if (start === 0) {\r\n            return text + value.slice(end);\r\n        }\r\n        else if (end === value.length) {\r\n            return value.slice(0, start) + text;\r\n        }\r\n        else {\r\n            return value.slice(0, start) + text + value.slice(end);\r\n        }\r\n    }\r\n\r\n    deleteRange(value, start, end) {\r\n        let newValueStr;\r\n\r\n        if ((end - start) === value.length)\r\n            newValueStr = '';\r\n        else if (start === 0)\r\n            newValueStr = value.slice(end);\r\n        else if (end === value.length)\r\n            newValueStr = value.slice(0, start);\r\n        else\r\n            newValueStr = value.slice(0, start) + value.slice(end);\r\n\r\n        return newValueStr;\r\n    }\r\n\r\n    initCursor() {\r\n        let selectionStart = this.input.nativeElement.selectionStart;\r\n        let inputValue = this.input.nativeElement.value;\r\n        let valueLength = inputValue.length;\r\n        let index = null;\r\n\r\n        let char = inputValue.charAt(selectionStart);\r\n        if (this.isNumeralChar(char)) {\r\n            return;\r\n        }\r\n\r\n        //left\r\n        let i = selectionStart - 1;\r\n        while (i >= 0) {\r\n            char = inputValue.charAt(i);\r\n            if (this.isNumeralChar(char)) {\r\n                index = i;\r\n                break;\r\n            }\r\n            else {\r\n                i--;\r\n            }\r\n        }\r\n\r\n        if (index !== null) {\r\n            this.input.nativeElement.setSelectionRange(index + 1, index + 1);\r\n        }\r\n        else {\r\n            i = selectionStart + 1;\r\n            while (i < valueLength) {\r\n                char = inputValue.charAt(i);\r\n                if (this.isNumeralChar(char)) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            if (index !== null) {\r\n                this.input.nativeElement.setSelectionRange(index, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputClick() {\r\n        this.initCursor();\r\n    }\r\n\r\n    isNumeralChar(char) {\r\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\r\n            this.resetRegex();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    resetRegex() {\r\n        this._numeral.lastIndex =  0;\r\n        this._decimal.lastIndex =  0;\r\n        this._group.lastIndex =  0;\r\n        this._minusSign.lastIndex =  0;\r\n    }\r\n\r\n    updateValue(event, valueStr, insertedValueStr, operation) {\r\n        let currentValue = this.input.nativeElement.value;\r\n        let newValue = null;\r\n\r\n        if (valueStr != null) {\r\n            newValue = this.parseValue(valueStr);\r\n            this.updateInput(newValue, insertedValueStr, operation);\r\n        }\r\n\r\n        this.handleOnInput(event, currentValue, newValue);\r\n    }\r\n\r\n    handleOnInput(event, currentValue, newValue) {\r\n        if (this.isValueChanged(currentValue, newValue)) {\r\n            this.onInput.emit({ originalEvent: event, value: newValue });\r\n        }\r\n    }\r\n\r\n    isValueChanged(currentValue, newValue) {\r\n        if (newValue === null && currentValue !== null) {\r\n            return true;\r\n        }\r\n\r\n        if (newValue != null) {\r\n            let parsedCurrentValue = (typeof currentValue === 'string') ? this.parseValue(currentValue) : currentValue;\r\n            return newValue !== parsedCurrentValue;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validateValue(value) {\r\n        if (this.min !== null && value < this.min) {\r\n            return this.min;\r\n        }\r\n\r\n        if (this.max !== null && value > this.max) {\r\n            return this.max;\r\n        }\r\n\r\n        if (value === '-') { // Minus sign\r\n            return null;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    updateInput(value, insertedValueStr, operation) {\r\n        insertedValueStr = insertedValueStr || '';\r\n\r\n        let inputValue = this.input.nativeElement.value;\r\n        let newValue = this.formatValue(value);\r\n        let currentLength = inputValue.length;\r\n\r\n        if (currentLength === 0) {\r\n            this.input.nativeElement.value = newValue;\r\n            this.input.nativeElement.setSelectionRange(0, 0);\r\n            this.initCursor();\r\n            const prefixLength = (this.prefixChar || '').length;\r\n            const selectionEnd = prefixLength + insertedValueStr.length;\r\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n        }\r\n        else {\r\n            let selectionStart = this.input.nativeElement.selectionStart;\r\n            let selectionEnd = this.input.nativeElement.selectionEnd;\r\n            if (this.maxlength && this.maxlength < newValue.length) {\r\n                return;\r\n            }\r\n\r\n            this.input.nativeElement.value = newValue;\r\n            let newLength = newValue.length;\r\n\r\n            if (operation === 'range-insert') {\r\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\r\n                const startValueStr = startValue !== null ? startValue.toString() : '';\r\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\r\n                const sRegex = new RegExp(startExpr, 'g');\r\n                sRegex.test(newValue);\r\n\r\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\r\n                const tRegex = new RegExp(tExpr, 'g');\r\n                tRegex.test(newValue.slice(sRegex.lastIndex));\r\n\r\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            }\r\n            else if (newLength === currentLength) {\r\n                if (operation === 'insert' || operation === 'delete-back-single')\r\n                    this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\r\n                else if (operation === 'delete-single')\r\n                    this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\r\n                else if (operation === 'delete-range' || operation === 'spin')\r\n                    this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            }\r\n            else if (operation === 'delete-back-single') {\r\n                let prevChar = inputValue.charAt(selectionEnd - 1);\r\n                let nextChar = inputValue.charAt(selectionEnd);\r\n                let diff = currentLength - newLength;\r\n                let isGroupChar = this._group.test(nextChar);\r\n\r\n                if (isGroupChar && diff === 1) {\r\n                    selectionEnd += 1;\r\n                }\r\n                else if (!isGroupChar && this.isNumeralChar(prevChar)) {\r\n                    selectionEnd += (-1 * diff) + 1;\r\n                }\r\n\r\n                this._group.lastIndex = 0;\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            }\r\n            else {\r\n                selectionEnd = selectionEnd + (newLength - currentLength);\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            }\r\n        }\r\n\r\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        this.focused = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        this.focused = false;\r\n\r\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\r\n        this.input.nativeElement.value = this.formatValue(newValue);\r\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\r\n        this.updateModel(event, newValue);\r\n\r\n        this.onBlur.emit(event);\r\n    }\r\n\r\n    formattedValue() {\r\n        return this.formatValue(this.value);\r\n    }\r\n\r\n    updateModel(event, value) {\r\n        if (this.value !== value) {\r\n            this.value = value;\r\n            this.onModelChange(value);\r\n        }\r\n\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    get filled() {\r\n        return (this.value != null && this.value.toString().length > 0)\r\n    }\r\n\r\n    clearTimer() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,InputTextModule, ButtonModule],\r\n    exports: [InputNumber],\r\n    declarations: [InputNumber]\r\n})\r\nexport class InputNumberModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}