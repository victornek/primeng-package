{"version":3,"sources":["../../src/app/components/splitbutton/splitbutton.ts"],"names":["SplitButton","this","iconPos","onClick","EventEmitter","onDropdownClick","showTransitionOptions","hideTransitionOptions","prototype","onDefaultButtonClick","event","emit","onDropdownButtonClick","menu","toggle","currentTarget","containerViewChild","nativeElement","relativeAlign","appendTo","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","NgModule","imports","CommonModule","ButtonModule","MenuModule","exports","declarations"],"mappings":"kiBAMA,SAAAA,IAoBaC,KAAAC,QAAkB,OAIjBD,KAAAE,QAA6B,IAAIC,EAAAA,aAEjCH,KAAAI,gBAAqC,IAAID,EAAAA,aAkB1CH,KAAAK,sBAAgC,kCAEhCL,KAAAM,sBAAgC,oBAQzCP,EAAAQ,UAAAC,qBAAA,SAAqBC,GACjBT,KAAKE,QAAQQ,KAAKD,IAGtBV,EAAAQ,UAAAI,sBAAA,SAAsBF,GAClBT,KAAKI,gBAAgBM,KAAKD,GAC1BT,KAAKY,KAAKC,OAAO,CAACC,cAAed,KAAKe,mBAAmBC,cAAeC,cAAgC,MAAjBjB,KAAKkB,qCA5DnGC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,kyBAQVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,0jBAKhCC,EAAAA,oBAEAA,EAAAA,uBAEAA,EAAAA,qBAEAA,EAAAA,uBAEAC,EAAAA,gCAEAA,EAAAA,sBAEAD,EAAAA,0BAEAA,EAAAA,yBAEAA,EAAAA,8BAEAA,EAAAA,wBAEAA,EAAAA,wBAEAA,EAAAA,wBAEAA,EAAAA,mBAEAA,EAAAA,qCAEAA,EAAAA,qCAEAA,EAAAA,kCAEAE,EAAAA,UAASX,KAAA,CAAC,sCAEVW,EAAAA,UAASX,KAAA,CAAC,4BAEVW,EAAAA,UAASX,KAAA,CAAC,iBAkBf,iCALCY,EAAAA,SAAQZ,KAAA,CAAC,CACNa,QAAS,CAACC,EAAAA,aAAaC,EAAAA,aAAaC,EAAAA,YACpCC,QAAS,CAACtC,EAAYoC,EAAAA,cACtBG,aAAc,CAACvC","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,EventEmitter,ViewChild,ChangeDetectionStrategy,ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {MenuModule, Menu} from 'primeng/menu';\r\n\r\n@Component({\r\n    selector: 'p-splitButton',\r\n    template: `\r\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\r\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\"></button>\r\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\r\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./splitbutton.css']\r\n})\r\nexport class SplitButton {\r\n\r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() iconPos: string = 'left';\r\n        \r\n    @Input() label: string;\r\n    \r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDropdownClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Input() style: any;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() menuStyle: any;\r\n    \r\n    @Input() menuStyleClass: string;\r\n    \r\n    @Input() disabled: boolean;\r\n\r\n    @Input() tabindex: number;\r\n    \r\n    @Input() appendTo: any;\r\n    \r\n    @Input() dir: string;\r\n\r\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n    @Input() hideTransitionOptions: string = '.1s linear';\r\n\r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n    \r\n    @ViewChild('defaultbtn') buttonViewChild: ElementRef;\r\n\r\n    @ViewChild('menu') menu: Menu;\r\n\r\n    onDefaultButtonClick(event: Event) {\r\n        this.onClick.emit(event);\r\n    }\r\n          \r\n    onDropdownButtonClick(event: Event) {\r\n        this.onDropdownClick.emit(event);\r\n        this.menu.toggle({currentTarget: this.containerViewChild.nativeElement, relativeAlign: this.appendTo == null});\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ButtonModule,MenuModule],\r\n    exports: [SplitButton,ButtonModule],\r\n    declarations: [SplitButton]\r\n})\r\nexport class SplitButtonModule { }\r\n"]}