{"version":3,"sources":["../../src/app/components/confirmdialog/confirmdialog.ts"],"names":["showAnimation","animation","style","transform","opacity","animate","hideAnimation","ConfirmDialog","el","renderer","confirmationService","zone","cd","_this","this","acceptIcon","acceptLabel","acceptVisible","rejectIcon","rejectLabel","rejectVisible","closeOnEscape","blockScroll","closable","autoZIndex","baseZIndex","transitionOptions","focusTrap","defaultFocus","_position","transformOptions","subscription","requireConfirmation$","subscribe","confirmation","key","confirmationOptions","message","icon","header","acceptButtonStyleClass","rejectButtonStyleClass","accept","acceptEvent","EventEmitter","reject","rejectEvent","visible","hide","Object","defineProperty","prototype","_visible","value","maskVisible","markForCheck","ngAfterContentInit","templates","forEach","item","getType","footerTemplate","template","option","name","source","hasOwnProperty","onAnimationStart","event","toState","container","element","wrapper","parentElement","contentContainer","DomHandler","findSingle","getElementToFocus","focus","appendContainer","moveOnTop","bindGlobalListeners","enableModality","onAnimationEnd","onOverlayHide","appendTo","document","body","appendChild","restoreAppend","nativeElement","addClass","disableModality","removeClass","detectChanges","close","emit","preventDefault","zIndex","String","zindex","getMaskClass","maskClass","p-dialog-mask p-component-overlay","p-dialog-mask-scrollblocker","getPositionClass","toString","pos","find","position","documentEscapeListener","documentTarget","ownerDocument","listen","which","parseInt","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","unbindGlobalListeners","ngOnDestroy","unsubscribe","Component","args","selector","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ConfirmationService","NgZone","ChangeDetectorRef","Input","ContentChild","Footer","ViewChild","ContentChildren","PrimeTemplate","NgModule","imports","CommonModule","ButtonModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,EventEmitter,Renderer2,ContentChild,NgZone,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, TemplateRef, AfterContentInit} from '@angular/core';\r\nimport {trigger,style,transition,animate,AnimationEvent, useAnimation, animation} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\nimport {Footer,SharedModule, PrimeTemplate} from 'primeng/api';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {Confirmation} from 'primeng/api';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {Subscription} from 'rxjs';\r\n\r\nconst showAnimation = animation([\r\n    style({ transform: '{{transform}}', opacity: 0 }),\r\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\r\n]);\r\n\r\nconst hideAnimation = animation([\r\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\r\n]);\r\n\r\n@Component({\r\n    selector: 'p-confirmDialog',\r\n    template: `\r\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\r\n            <div [ngClass]=\"{'p-dialog p-confirm-dialog p-component':true,'p-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\r\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\r\n                <div class=\"p-dialog-header\">\r\n                    <span class=\"p-dialog-title\" *ngIf=\"option('header')\">{{option('header')}}</span>\r\n                    <div class=\"p-dialog-header-icons\">\r\n                        <button *ngIf=\"closable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-close p-link':true}\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\r\n                            <span class=\"pi pi-times\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div #content class=\"p-dialog-content\">\r\n                    <i [ngClass]=\"'p-confirm-dialog-icon'\" [class]=\"option('icon')\" *ngIf=\"option('icon')\"></i>\r\n                    <span class=\"p-confirm-dialog-message\" [innerHTML]=\"option('message')\"></span>\r\n                </div>\r\n                <div class=\"p-dialog-footer\" *ngIf=\"footer || footerTemplate\">\r\n                    <ng-content select=\"p-footer\"></ng-content>\r\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n                </div>\r\n                <div class=\"p-dialog-footer\" *ngIf=\"!footer\">\r\n                    <button type=\"button\" pButton [icon]=\"option('acceptIcon')\" [label]=\"option('acceptLabel')\" (click)=\"accept()\" [ngClass]=\"'p-confirm-dialog-accept'\" [class]=\"option('acceptButtonStyleClass')\" *ngIf=\"option('acceptVisible')\"></button>\r\n                    <button type=\"button\" pButton [icon]=\"option('rejectIcon')\" [label]=\"option('rejectLabel')\" (click)=\"reject()\" [ngClass]=\"'p-confirm-dialog-reject'\" [class]=\"option('rejectButtonStyleClass')\" *ngIf=\"option('rejectVisible')\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    animations: [\r\n        trigger('animation', [\r\n            transition('void => visible', [\r\n                useAnimation(showAnimation)\r\n            ]),\r\n            transition('visible => void', [\r\n                useAnimation(hideAnimation)\r\n            ])\r\n        ])\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['../dialog/dialog.css']\r\n})\r\nexport class ConfirmDialog implements AfterContentInit,OnDestroy {\r\n\r\n    @Input() header: string;\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() message: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() maskStyleClass: string;\r\n\r\n    @Input() acceptIcon: string = 'pi pi-check';\r\n\r\n    @Input() acceptLabel: string = 'Yes';\r\n\r\n    @Input() acceptVisible: boolean = true;\r\n\r\n    @Input() rejectIcon: string = 'pi pi-times';\r\n\r\n    @Input() rejectLabel: string = 'No';\r\n\r\n    @Input() rejectVisible: boolean = true;\r\n\r\n    @Input() acceptButtonStyleClass: string;\r\n\r\n    @Input() rejectButtonStyleClass: string;\r\n\r\n    @Input() closeOnEscape: boolean = true;\r\n\r\n    @Input() blockScroll: boolean = true;\r\n\r\n    @Input() rtl: boolean;\r\n\r\n    @Input() closable: boolean = true;\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() key: string;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n    @Input() focusTrap: boolean = true;\r\n\r\n    @Input() defaultFocus: string = 'accept';\r\n\r\n    @Input() get visible(): any {\r\n        return this._visible;\r\n    }\r\n    set visible(value:any) {\r\n        this._visible = value;\r\n\r\n        if (this._visible && !this.maskVisible) {\r\n            this.maskVisible = true;\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    @Input() get position(): string {\r\n        return this._position;\r\n    };\r\n\r\n    set position(value: string) {\r\n        this._position = value;\r\n\r\n        switch (value) {\r\n            case 'topleft':\r\n            case 'bottomleft':\r\n            case 'left':\r\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\r\n            break;\r\n            case 'topright':\r\n            case 'bottomright':\r\n            case 'right':\r\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\r\n            break;\r\n            case 'bottom':\r\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\r\n            break;\r\n            case 'top':\r\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\r\n            break;\r\n            default:\r\n                this.transformOptions = \"scale(0.7)\";\r\n            break;\r\n        }\r\n    }\r\n\r\n    @ContentChild(Footer) footer;\r\n\r\n    @ViewChild('content') contentViewChild: ElementRef;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'footerTemplate':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    confirmation: Confirmation;\r\n\r\n    _visible: boolean;\r\n\r\n    maskVisible: boolean;\r\n\r\n    documentEscapeListener: any;\r\n\r\n    container: HTMLDivElement;\r\n\r\n    wrapper: HTMLElement;\r\n\r\n    contentContainer: HTMLDivElement;\r\n\r\n    subscription: Subscription;\r\n\r\n    preWidth: number;\r\n\r\n    _position: string = \"center\";\r\n\r\n    transformOptions: any = \"scale(0.7)\";\r\n\r\n    confirmationOptions: Confirmation;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, private confirmationService: ConfirmationService, public zone: NgZone, private cd: ChangeDetectorRef) {\r\n        this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\r\n            if (!confirmation) {\r\n                this.hide();\r\n                return;\r\n            }\r\n\r\n            if (confirmation.key === this.key) {\r\n                this.confirmation = confirmation;\r\n                this.confirmationOptions = {\r\n                    message: this.confirmation.message||this.message,\r\n                    icon: this.confirmation.icon||this.icon,\r\n                    header: this.confirmation.header||this.header,\r\n                    rejectVisible: this.confirmation.rejectVisible == null ? this.rejectVisible : this.confirmation.rejectVisible,\r\n                    acceptVisible: this.confirmation.acceptVisible == null ? this.acceptVisible : this.confirmation.acceptVisible,\r\n                    acceptLabel: this.confirmation.acceptLabel||this.acceptLabel,\r\n                    rejectLabel: this.confirmation.rejectLabel||this.rejectLabel,\r\n                    acceptIcon: this.confirmation.acceptIcon || this.acceptIcon,\r\n                    rejectIcon: this.confirmation.rejectIcon || this.rejectIcon,\r\n                    acceptButtonStyleClass: this.confirmation.acceptButtonStyleClass || this.acceptButtonStyleClass,\r\n                    rejectButtonStyleClass: this.confirmation.rejectButtonStyleClass || this.rejectButtonStyleClass,\r\n                    defaultFocus: this.confirmation.defaultFocus || this.defaultFocus,\r\n                    blockScroll: (this.confirmation.blockScroll === false || this.confirmation.blockScroll === true) ? this.confirmation.blockScroll : this.blockScroll\r\n                };\r\n\r\n                if (this.confirmation.accept) {\r\n                    this.confirmation.acceptEvent = new EventEmitter();\r\n                    this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\r\n                }\r\n\r\n                if (this.confirmation.reject) {\r\n                    this.confirmation.rejectEvent = new EventEmitter();\r\n                    this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\r\n                }\r\n\r\n                this.visible = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    option(name: string) {\r\n        const source = this.confirmationOptions || this;\r\n        if (source.hasOwnProperty(name)) {\r\n            return source[name];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    onAnimationStart(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'visible':\r\n                this.container = event.element;\r\n                this.wrapper = this.container.parentElement;\r\n                this.contentContainer = DomHandler.findSingle(this.container, '.p-dialog-content');\r\n\r\n                const element = this.getElementToFocus();\r\n                if (element) {\r\n                    element.focus();\r\n                }\r\n\r\n                this.appendContainer();\r\n                this.moveOnTop();\r\n                this.bindGlobalListeners();\r\n                this.enableModality();\r\n            break;\r\n        }\r\n    }\r\n\r\n    onAnimationEnd(event: AnimationEvent) {\r\n        switch(event.toState) {\r\n            case 'void':\r\n                this.onOverlayHide();\r\n            break;\r\n        }\r\n    }\r\n\r\n    getElementToFocus() {\r\n        switch(this.option('defaultFocus')) {\r\n            case 'accept':\r\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\r\n\r\n            case 'reject':\r\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-reject');\r\n\r\n            case 'close':\r\n                return DomHandler.findSingle(this.container, '.p-dialog-header-close');\r\n\r\n            case 'none':\r\n                return null;\r\n\r\n            //backward compatibility\r\n            default:\r\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\r\n        }\r\n    }\r\n\r\n    appendContainer() {\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.wrapper);\r\n            else\r\n                DomHandler.appendChild(this.wrapper, this.appendTo);\r\n        }\r\n    }\r\n\r\n    restoreAppend() {\r\n        if (this.wrapper && this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.wrapper);\r\n        }\r\n    }\r\n\r\n    enableModality() {\r\n        if (this.option('blockScroll')) {\r\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    disableModality() {\r\n        this.maskVisible = false;\r\n\r\n        if (this.option('blockScroll')) {\r\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n        }\r\n\r\n        if (this.container) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    close(event: Event) {\r\n        if (this.confirmation.rejectEvent) {\r\n            this.confirmation.rejectEvent.emit();\r\n        }\r\n\r\n        this.hide();\r\n        event.preventDefault();\r\n    }\r\n\r\n    hide() {\r\n        this.visible = false;\r\n        this.confirmation = null;\r\n        this.confirmationOptions = null;\r\n    }\r\n\r\n    moveOnTop() {\r\n        if (this.autoZIndex) {\r\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\r\n        }\r\n    }\r\n\r\n    getMaskClass() {\r\n        let maskClass = {'p-dialog-mask p-component-overlay': true, 'p-dialog-mask-scrollblocker': this.blockScroll};\r\n        maskClass[this.getPositionClass().toString()] = true;\r\n        return maskClass;\r\n    }\r\n\r\n    getPositionClass() {\r\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\r\n        const pos = positions.find(item => item === this.position);\r\n\r\n        return pos ? `p-dialog-${pos}` : '';\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if ((this.closeOnEscape && this.closable) || this.focusTrap && !this.documentEscapeListener) {\r\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n            this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', (event) => {\r\n                if (event.which == 27 && (this.closeOnEscape && this.closable)) {\r\n                    if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex) && this.visible) {\r\n                        this.close(event);\r\n                    }\r\n                }\r\n\r\n                if (event.which === 9 && this.focusTrap) {\r\n                    event.preventDefault();\r\n\r\n                    let focusableElements = DomHandler.getFocusableElements(this.container);\r\n\r\n                    if (focusableElements && focusableElements.length > 0) {\r\n                        if (!focusableElements[0].ownerDocument.activeElement) {\r\n                            focusableElements[0].focus();\r\n                        }\r\n                        else {\r\n                            let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\r\n\r\n                            if (event.shiftKey) {\r\n                                if (focusedIndex == -1 || focusedIndex === 0)\r\n                                    focusableElements[focusableElements.length - 1].focus();\r\n                                else\r\n                                    focusableElements[focusedIndex - 1].focus();\r\n                            }\r\n                            else {\r\n                                if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\r\n                                    focusableElements[0].focus();\r\n                                else\r\n                                    focusableElements[focusedIndex + 1].focus();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        if (this.documentEscapeListener) {\r\n            this.documentEscapeListener();\r\n            this.documentEscapeListener = null;\r\n        }\r\n    }\r\n\r\n    onOverlayHide() {\r\n        this.disableModality();\r\n        this.unbindGlobalListeners();\r\n        this.container = null;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.restoreAppend();\r\n        this.onOverlayHide();\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    accept() {\r\n        if (this.confirmation.acceptEvent) {\r\n            this.confirmation.acceptEvent.emit();\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    reject() {\r\n        if (this.confirmation.rejectEvent) {\r\n            this.confirmation.rejectEvent.emit();\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ButtonModule],\r\n    exports: [ConfirmDialog,ButtonModule,SharedModule],\r\n    declarations: [ConfirmDialog]\r\n})\r\nexport class ConfirmDialogModule { }\r\n"]}