{"version":3,"sources":["../../src/app/components/fullcalendar/fullcalendar.ts"],"names":["FullCalendar","el","this","prototype","ngOnInit","config","theme","options","prop","ngAfterViewChecked","initialized","nativeElement","offsetParent","initialize","Object","defineProperty","_events","value","calendar","removeAllEventSources","addEventSource","_options","optionValue","setOption","Calendar","children","render","events","getCalendar","ngOnDestroy","destroy","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Input","NgModule","imports","CommonModule","exports","declarations"],"mappings":"0eA0BI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,SAEnBD,EAAAG,UAAAC,SAAA,WAKI,GAJAF,KAAKG,OAAS,CACVC,OAAO,GAGPJ,KAAKK,QACL,IAAK,IAAIC,KAAQN,KAAKK,QAClBL,KAAKG,OAAOG,GAAQN,KAAKK,QAAQC,IAK7CR,EAAAG,UAAAM,mBAAA,YACSP,KAAKQ,aAAeR,KAAKD,GAAGU,cAAcC,cAC3CV,KAAKW,cAIbC,OAAAC,eAAaf,EAAAG,UAAA,SAAM,KAAnB,WACI,OAAOD,KAAKc,aAGhB,SAAWC,GACPf,KAAKc,QAAUC,EAEXf,KAAKc,SAAWd,KAAKgB,WACrBhB,KAAKgB,SAASC,wBACdjB,KAAKgB,SAASE,eAAelB,KAAKc,2CAI1CF,OAAAC,eAAaf,EAAAG,UAAA,UAAO,KAApB,WACI,OAAOD,KAAKmB,cAGhB,SAAYJ,GAGR,GAFAf,KAAKmB,SAAWJ,EAEZf,KAAKmB,UAAYnB,KAAKgB,SACtB,IAAK,IAAIV,KAAQN,KAAKmB,SAAU,CAC5B,IAAIC,EAAcpB,KAAKmB,SAASb,GAChCN,KAAKG,OAAOG,GAAQc,EACpBpB,KAAKgB,SAASK,UAAUf,EAAMc,qCAK1CtB,EAAAG,UAAAU,WAAA,WACIX,KAAKgB,SAAW,IAAIM,EAAAA,SAAStB,KAAKD,GAAGU,cAAcc,SAAS,GAAIvB,KAAKG,QACrEH,KAAKgB,SAASQ,SACdxB,KAAKQ,aAAc,EAEfR,KAAKyB,SACLzB,KAAKgB,SAASC,wBACdjB,KAAKgB,SAASE,eAAelB,KAAKyB,UAI1C3B,EAAAG,UAAAyB,YAAA,WACI,OAAO1B,KAAKgB,UAGhBlB,EAAAG,UAAA0B,YAAA,WACQ3B,KAAKgB,WACLhB,KAAKgB,SAASY,UACd5B,KAAKQ,aAAc,EACnBR,KAAKgB,SAAW,gCA1F3Ba,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,iBACVC,SAAU,qDACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,kDARVC,EAAAA,6CAYtBC,EAAAA,0BAEAA,EAAAA,sBAgCAA,EAAAA,uBAaAA,EAAAA,eA6CL,iCALCC,EAAAA,SAAQX,KAAA,CAAC,CACNY,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC9C,GACV+C,aAAc,CAAC/C","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,OnInit,AfterViewChecked,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Calendar} from '@fullcalendar/core';\r\n\r\n@Component({\r\n    selector: 'p-fullCalendar',\r\n    template: '<div [ngStyle]=\"style\" [class]=\"styleClass\"></div>',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FullCalendar implements OnDestroy,OnInit,AfterViewChecked {\r\n        \r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n             \r\n    initialized: boolean;\r\n            \r\n    calendar: any;\r\n    \r\n    config: any;\r\n\r\n    _options: any;\r\n\r\n    _events: any[];\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngOnInit() {\r\n        this.config = {\r\n            theme: true\r\n        };\r\n\r\n        if (this.options) {\r\n            for (let prop in this.options) {\r\n                this.config[prop] = this.options[prop];\r\n            }\r\n        }\r\n    }\r\n    \r\n    ngAfterViewChecked() {\r\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\r\n            this.initialize();\r\n        }\r\n    }\r\n    \r\n    @Input() get events(): any {\r\n        return this._events;\r\n    }\r\n\r\n    set events(value: any) {\r\n        this._events = value;\r\n\r\n        if (this._events && this.calendar) {\r\n            this.calendar.removeAllEventSources();\r\n            this.calendar.addEventSource(this._events);\r\n        }\r\n    }\r\n\r\n    @Input() get options(): any {\r\n        return this._options;\r\n    }\r\n\r\n    set options(value: any) {\r\n        this._options = value;\r\n\r\n        if (this._options && this.calendar) {\r\n            for (let prop in this._options) {\r\n                let optionValue = this._options[prop];\r\n                this.config[prop] = optionValue;\r\n                this.calendar.setOption(prop, optionValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.calendar = new Calendar(this.el.nativeElement.children[0], this.config);\r\n        this.calendar.render();\r\n        this.initialized = true;\r\n        \r\n        if (this.events) {\r\n            this.calendar.removeAllEventSources();\r\n            this.calendar.addEventSource(this.events);\r\n        }\r\n    }\r\n\r\n    getCalendar() {\r\n        return this.calendar;\r\n    }\r\n     \r\n    ngOnDestroy() {\r\n        if (this.calendar) {\r\n            this.calendar.destroy();\r\n            this.initialized = false;\r\n            this.calendar = null;\r\n        }        \r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [FullCalendar],\r\n    declarations: [FullCalendar]\r\n})\r\nexport class FullCalendarModule { }\r\n"]}