{"version":3,"sources":["../../src/app/components/ripple/ripple.ts"],"names":["Ripple","el","zone","config","this","prototype","ngAfterViewInit","_this","ripple","runOutsideAngular","create","mouseDownListener","onMouseDown","bind","nativeElement","addEventListener","event","ink","getInk","getComputedStyle","display","DomHandler","removeClass","getHeight","getWidth","d","Math","max","getOuterWidth","getOuterHeight","style","height","width","offset","getOffset","x","pageX","left","document","body","scrollTop","y","pageY","top","scrollLeft","addClass","i","children","length","className","indexOf","resetInk","onAnimationEnd","currentTarget","createElement","appendChild","animationListener","remove","removeEventListener","removeElement","ngOnDestroy","Directive","args","selector","host","[class.p-ripple]","ElementRef","NgZone","PrimeNGConfig","decorators","type","Optional","NgModule","imports","CommonModule","exports","declarations"],"mappings":"4gBAaI,SAAAA,EAAmBC,EAAuBC,EAAiCC,GAAxDC,KAAAH,GAAAA,EAAuBG,KAAAF,KAAAA,EAAiCE,KAAAD,OAAAA,SAM3EH,EAAAK,UAAAC,gBAAA,WAAA,IAAAC,EAAAH,KACQA,KAAKD,QAAUC,KAAKD,OAAOK,QAC3BJ,KAAKF,KAAKO,mBAAkB,WACxBF,EAAKG,SAELH,EAAKI,kBAAoBJ,EAAKK,YAAYC,KAAKN,GAC/CA,EAAKN,GAAGa,cAAcC,iBAAiB,YAAaR,EAAKI,uBAKrEX,EAAAK,UAAAO,YAAA,SAAYI,GACR,IAAIC,EAAMb,KAAKc,SACf,GAAKD,GAA+C,SAAxCE,iBAAiBF,EAAK,MAAMG,QAAxC,CAKA,GADAC,EAAAA,WAAWC,YAAYL,EAAK,iBACvBI,EAAAA,WAAWE,UAAUN,KAASI,EAAAA,WAAWG,SAASP,GAAM,CACzD,IAAIQ,EAAIC,KAAKC,IAAIN,EAAAA,WAAWO,cAAcxB,KAAKH,GAAGa,eAAgBO,EAAAA,WAAWQ,eAAezB,KAAKH,GAAGa,gBACpGG,EAAIa,MAAMC,OAASN,EAAI,KACvBR,EAAIa,MAAME,MAAQP,EAAI,KAG1B,IAAIQ,EAASZ,EAAAA,WAAWa,UAAU9B,KAAKH,GAAGa,eACtCqB,EAAInB,EAAMoB,MAAQH,EAAOI,KAAOC,SAASC,KAAKC,UAAYnB,EAAAA,WAAWG,SAASP,GAAO,EACrFwB,EAAIzB,EAAM0B,MAAQT,EAAOU,IAAML,SAASC,KAAKK,WAAavB,EAAAA,WAAWE,UAAUN,GAAO,EAE1FA,EAAIa,MAAMa,IAAMF,EAAI,KACpBxB,EAAIa,MAAMO,KAAOF,EAAI,KACrBd,EAAAA,WAAWwB,SAAS5B,EAAK,kBAG7BjB,EAAAK,UAAAa,OAAA,WACI,IAAK,IAAI4B,EAAI,EAAGA,EAAI1C,KAAKH,GAAGa,cAAciC,SAASC,OAAQF,IACvD,IAAsE,IAAlE1C,KAAKH,GAAGa,cAAciC,SAASD,GAAGG,UAAUC,QAAQ,SACpD,OAAO9C,KAAKH,GAAGa,cAAciC,SAASD,GAG9C,OAAO,MAGX9C,EAAAK,UAAA8C,SAAA,WACI,IAAIlC,EAAMb,KAAKc,SACXD,GACAI,EAAAA,WAAWC,YAAYL,EAAK,iBAIpCjB,EAAAK,UAAA+C,eAAA,SAAepC,GACXK,EAAAA,WAAWC,YAAYN,EAAMqC,cAAe,iBAGhDrD,EAAAK,UAAAK,OAAA,WACI,IAAIO,EAAMqB,SAASgB,cAAc,QACjCrC,EAAIgC,UAAY,QAChB7C,KAAKH,GAAGa,cAAcyC,YAAYtC,GAElCb,KAAKoD,kBAAoBpD,KAAKgD,eAAevC,KAAKT,MAClDa,EAAIF,iBAAiB,eAAgBX,KAAKoD,oBAG9CxD,EAAAK,UAAAoD,OAAA,WACI,IAAIxC,EAAMb,KAAKc,SACXD,IACAb,KAAKH,GAAGa,cAAc4C,oBAAoB,YAAatD,KAAKO,mBAC5DM,EAAIyC,oBAAoB,eAAgBtD,KAAKoD,mBAC7CnC,EAAAA,WAAWsC,cAAc1C,KAIjCjB,EAAAK,UAAAuD,YAAA,WACQxD,KAAKD,QAAUC,KAAKD,OAAOK,QAC3BJ,KAAKqD,mCAvFhBI,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,YACVC,KAAM,CACFC,mBAAoB,qDARiBC,EAAAA,kBAAYC,EAAAA,cAGhDC,EAAAA,cAAaC,WAAA,CAAA,CAAAC,KAUuCC,EAAAA,oBAyF7D,iCALCC,EAAAA,SAAQV,KAAA,CAAC,CACNW,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC3E,GACV4E,aAAc,CAAC5E","sourcesContent":["import { NgModule, Directive, AfterViewInit, ElementRef, NgZone, OnDestroy, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Directive({\r\n    selector: '[pRipple]',\r\n    host: {\r\n        '[class.p-ripple]': 'true'\r\n    }\r\n})\r\nexport class Ripple implements AfterViewInit, OnDestroy {\r\n\r\n    constructor(public el: ElementRef, public zone: NgZone, @Optional() public config: PrimeNGConfig) { }\r\n\r\n    animationListener: any;\r\n\r\n    mouseDownListener: any;\r\n\r\n    ngAfterViewInit() {\r\n        if (this.config && this.config.ripple) {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.create();\r\n    \r\n                this.mouseDownListener = this.onMouseDown.bind(this);\r\n                this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        let ink = this.getInk();\r\n        if (!ink || getComputedStyle(ink, null).display === 'none') {\r\n            return;\r\n        }\r\n    \r\n        DomHandler.removeClass(ink, 'p-ink-active');\r\n        if (!DomHandler.getHeight(ink) && !DomHandler.getWidth(ink)) {\r\n            let d = Math.max(DomHandler.getOuterWidth(this.el.nativeElement), DomHandler.getOuterHeight(this.el.nativeElement));\r\n            ink.style.height = d + 'px';\r\n            ink.style.width = d + 'px';\r\n        }\r\n    \r\n        let offset = DomHandler.getOffset(this.el.nativeElement);\r\n        let x = event.pageX - offset.left + document.body.scrollTop - DomHandler.getWidth(ink) / 2;\r\n        let y = event.pageY - offset.top + document.body.scrollLeft - DomHandler.getHeight(ink) / 2;\r\n    \r\n        ink.style.top = y + 'px';\r\n        ink.style.left = x + 'px';\r\n        DomHandler.addClass(ink, 'p-ink-active');\r\n    }\r\n    \r\n    getInk() {\r\n        for (let i = 0; i < this.el.nativeElement.children.length; i++) {\r\n            if (this.el.nativeElement.children[i].className.indexOf('p-ink') !== -1) {\r\n                return this.el.nativeElement.children[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    resetInk() {\r\n        let ink = this.getInk();\r\n        if (ink) {\r\n            DomHandler.removeClass(ink, 'p-ink-active');\r\n        }\r\n    }\r\n\r\n    onAnimationEnd(event) {\r\n        DomHandler.removeClass(event.currentTarget, 'p-ink-active');\r\n    }\r\n\r\n    create() {\r\n        let ink = document.createElement('span');\r\n        ink.className = 'p-ink';\r\n        this.el.nativeElement.appendChild(ink);\r\n    \r\n        this.animationListener = this.onAnimationEnd.bind(this);\r\n        ink.addEventListener('animationend', this.animationListener);\r\n    }\r\n\r\n    remove() {\r\n        let ink = this.getInk();\r\n        if (ink) {\r\n            this.el.nativeElement.removeEventListener('mousedown', this.mouseDownListener);\r\n            ink.removeEventListener('animationend', this.animationListener);\r\n            DomHandler.removeElement(ink);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.config && this.config.ripple) {\r\n            this.remove();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Ripple],\r\n    declarations: [Ripple]\r\n})\r\nexport class RippleModule { }\r\n"]}