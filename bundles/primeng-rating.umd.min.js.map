{"version":3,"sources":["../../src/app/components/rating/rating.ts"],"names":["RATING_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Rating","multi","cd","this","stars","cancel","iconOnClass","iconOffClass","iconCancelClass","onRate","EventEmitter","onCancel","onModelChange","onModelTouched","prototype","ngOnInit","starsArray","i","rate","event","readonly","disabled","value","emit","originalEvent","preventDefault","clear","writeValue","detectChanges","registerOnChange","fn","registerOnTouched","setDisabledState","val","markForCheck","Component","args","selector","template","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","Output","NgModule","imports","CommonModule","exports","declarations"],"mappings":"6cAIaA,EAA6B,CACxCC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAC,KAC9BC,OAAO,gBA4CL,SAAAD,EAAoBE,GAAAC,KAAAD,GAAAA,EApBXC,KAAAC,MAAgB,EAEhBD,KAAAE,QAAkB,EAElBF,KAAAG,YAAsB,aAItBH,KAAAI,aAAuB,eAIvBJ,KAAAK,gBAA0B,YAIzBL,KAAAM,OAA4B,IAAIC,EAAAA,aAEhCP,KAAAQ,SAA8B,IAAID,EAAAA,aAM5CP,KAAAS,cAA0B,aAE1BT,KAAAU,eAA2B,oBAI3Bb,EAAAc,UAAAC,SAAA,WACIZ,KAAKa,WAAa,GAClB,IAAI,IAAIC,EAAI,EAAGA,EAAId,KAAKC,MAAOa,IAC3Bd,KAAKa,WAAWC,GAAKA,GAI7BjB,EAAAc,UAAAI,KAAA,SAAKC,EAAOF,GACHd,KAAKiB,UAAWjB,KAAKkB,WACtBlB,KAAKmB,MAASL,EAAI,EAClBd,KAAKS,cAAcT,KAAKmB,OACxBnB,KAAKU,iBACLV,KAAKM,OAAOc,KAAK,CACbC,cAAeL,EACfG,MAAQL,EAAE,KAGlBE,EAAMM,kBAGVzB,EAAAc,UAAAY,MAAA,SAAMP,GACGhB,KAAKiB,UAAWjB,KAAKkB,WACtBlB,KAAKmB,MAAQ,KACbnB,KAAKS,cAAcT,KAAKmB,OACxBnB,KAAKU,iBACLV,KAAKQ,SAASY,KAAKJ,IAEvBA,EAAMM,kBAGVzB,EAAAc,UAAAa,WAAA,SAAWL,GACPnB,KAAKmB,MAAQA,EACbnB,KAAKD,GAAG0B,iBAGZ5B,EAAAc,UAAAe,iBAAA,SAAiBC,GACb3B,KAAKS,cAAgBkB,GAGzB9B,EAAAc,UAAAiB,kBAAA,SAAkBD,GACd3B,KAAKU,eAAiBiB,GAG1B9B,EAAAc,UAAAkB,iBAAA,SAAiBC,GACb9B,KAAKkB,SAAWY,EAChB9B,KAAKD,GAAGgC,yCAhGfC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,WACVC,SAAU,ouBAQVC,UAAW,CAAC5C,GACZ6C,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,sJAtBkCC,EAAAA,uDA2BlEC,EAAAA,wBAEAA,EAAAA,qBAEAA,EAAAA,sBAEAA,EAAAA,2BAEAA,EAAAA,2BAEAA,EAAAA,4BAEAA,EAAAA,4BAEAA,EAAAA,+BAEAA,EAAAA,+BAEAA,EAAAA,sBAEAC,EAAAA,yBAEAA,EAAAA,gBAkEL,iCALCC,EAAAA,SAAQb,KAAA,CAAC,CACNc,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACpD,GACVqD,aAAc,CAACrD","sourcesContent":["import {NgModule,Component,OnInit,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const RATING_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => Rating),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-rating',\r\n    template: `\r\n        <div class=\"p-rating\" [ngClass]=\"{'p-readonly': readonly, 'p-disabled': disabled}\">\r\n            <span [attr.tabindex]=\"(disabled || readonly) ? null : '0'\" *ngIf=\"cancel\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" class=\"p-rating-icon p-rating-cancel\" [ngClass]=\"iconCancelClass\" [ngStyle]=\"iconCancelStyle\"></span>\r\n            <span *ngFor=\"let star of starsArray;let i=index\" class=\"p-rating-icon\" [attr.tabindex]=\"(disabled || readonly) ? null : '0'\"  (click)=\"rate($event,i)\" (keydown.enter)=\"rate($event,i)\"\r\n                [ngClass]=\"(!value || i >= value) ? iconOffClass : iconOnClass\"\r\n                [ngStyle]=\"(!value || i >= value) ? iconOffStyle : iconOnStyle\"></span>\r\n        </div>\r\n    `,\r\n    providers: [RATING_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./rating.css']\r\n})\r\nexport class Rating implements OnInit,ControlValueAccessor {\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Input() stars: number = 5;\r\n\r\n    @Input() cancel: boolean = true;\r\n\r\n    @Input() iconOnClass: string = 'pi pi-star';\r\n\r\n    @Input() iconOnStyle: any;\r\n\r\n    @Input() iconOffClass: string = 'pi pi-star-o';\r\n\r\n    @Input() iconOffStyle: any;\r\n\r\n    @Input() iconCancelClass: string = 'pi pi-ban';\r\n\r\n    @Input() iconCancelStyle: any;\r\n\r\n    @Output() onRate: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onCancel: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(private cd: ChangeDetectorRef) {} \r\n    \r\n    value: number;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    public starsArray: number[];\r\n    \r\n    ngOnInit() {\r\n        this.starsArray = [];\r\n        for(let i = 0; i < this.stars; i++) {\r\n            this.starsArray[i] = i;\r\n        }\r\n    }\r\n    \r\n    rate(event, i: number): void {\r\n        if (!this.readonly&&!this.disabled) {\r\n            this.value = (i + 1);\r\n            this.onModelChange(this.value);\r\n            this.onModelTouched();\r\n            this.onRate.emit({\r\n                originalEvent: event,\r\n                value: (i+1)\r\n            });\r\n        }\r\n        event.preventDefault();        \r\n    }\r\n    \r\n    clear(event): void {\r\n        if (!this.readonly&&!this.disabled) {\r\n            this.value = null;\r\n            this.onModelChange(this.value);\r\n            this.onModelTouched();\r\n            this.onCancel.emit(event);\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.cd.detectChanges();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Rating],\r\n    declarations: [Rating]\r\n})\r\nexport class RatingModule { }"]}