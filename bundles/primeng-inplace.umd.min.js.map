{"version":3,"sources":["../../src/app/components/inplace/inplace.ts"],"names":["Component","args","selector","template","Inplace","cd","this","closeIcon","onActivate","EventEmitter","onDeactivate","prototype","ngAfterContentInit","_this","templates","forEach","item","getType","displayTemplate","contentTemplate","onActivateClick","event","preventClick","activate","onDeactivateClick","deactivate","disabled","active","emit","markForCheck","hover","onKeydown","which","preventDefault","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","ContentChildren","PrimeTemplate","Output","NgModule","imports","CommonModule","ButtonModule","exports","InplaceDisplay","InplaceContent","declarations"],"mappings":"4gBASA,iCAJCA,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,SAAU,sCAQd,iCAJCH,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,SAAU,iDAoDV,SAAAC,EAAmBC,GAAAC,KAAAD,GAAAA,EAdVC,KAAAC,UAAoB,cAInBD,KAAAE,WAAgC,IAAIC,EAAAA,aAEpCH,KAAAI,aAAkC,IAAID,EAAAA,oBAUhDL,EAAAO,UAAAC,mBAAA,WAAA,IAAAC,EAAAP,KACIA,KAAKQ,UAAUC,SAAQ,SAACC,GACpB,OAAOA,EAAKC,WACR,IAAK,UACDJ,EAAKK,gBAAkBF,EAAKb,SAChC,MAEA,IAAK,UACDU,EAAKM,gBAAkBH,EAAKb,cAM5CC,EAAAO,UAAAS,gBAAA,SAAgBC,GACPf,KAAKgB,cACNhB,KAAKiB,SAASF,IAGtBjB,EAAAO,UAAAa,kBAAA,SAAkBH,GACTf,KAAKgB,cACNhB,KAAKmB,WAAWJ,IAGxBjB,EAAAO,UAAAY,SAAA,SAASF,GACAf,KAAKoB,WACNpB,KAAKqB,QAAS,EACdrB,KAAKE,WAAWoB,KAAKP,GACrBf,KAAKD,GAAGwB,iBAIhBzB,EAAAO,UAAAc,WAAA,SAAWJ,GACFf,KAAKoB,WACNpB,KAAKqB,QAAS,EACdrB,KAAKwB,OAAQ,EACbxB,KAAKI,aAAakB,KAAKP,GACvBf,KAAKD,GAAGwB,iBAIhBzB,EAAAO,UAAAoB,UAAA,SAAUV,GACc,KAAhBA,EAAMW,QACN1B,KAAKiB,SAASF,GACdA,EAAMY,4CA9FjBjC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,YACVC,SAAU,03BAcV+B,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,kXAlC4DC,EAAAA,qDAuC5FC,EAAAA,wBAEAA,EAAAA,wBAEAA,EAAAA,4BAEAA,EAAAA,qBAEAA,EAAAA,0BAEAA,EAAAA,yBAEAA,EAAAA,yBAEAC,EAAAA,gBAAezC,KAAA,CAAC0C,EAAAA,mCAEhBC,EAAAA,6BAEAA,EAAAA,gBAgEL,iCALCC,EAAAA,SAAQ5C,KAAA,CAAC,CACN6C,QAAS,CAACC,EAAAA,aAAaC,EAAAA,cACvBC,QAAS,CAAC7C,EAAQ8C,EAAeC,EAAeH,EAAAA,cAChDI,aAAc,CAAChD,EAAQ8C,EAAeC","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, AfterContentInit, TemplateRef, QueryList, ContentChildren} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {PrimeTemplate} from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'p-inplaceDisplay',\r\n    template: '<ng-content></ng-content>'\r\n})\r\nexport class InplaceDisplay {}\r\n\r\n@Component({\r\n    selector: 'p-inplaceContent',\r\n    template: '<ng-content></ng-content>'\r\n})\r\nexport class InplaceContent {}\r\n\r\n@Component({\r\n    selector: 'p-inplace',\r\n    template: `\r\n        <div [ngClass]=\"{'p-inplace p-component': true, 'p-inplace-closable': closable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"p-inplace-display\" (click)=\"onActivateClick($event)\" tabindex=\"0\" (keydown)=\"onKeydown($event)\"   \r\n                [ngClass]=\"{'p-disabled':disabled}\" *ngIf=\"!active\">\r\n                <ng-content select=\"[pInplaceDisplay]\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"displayTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"p-inplace-content\" *ngIf=\"active\">\r\n                <ng-content select=\"[pInplaceContent]\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n                <button type=\"button\" [icon]=\"closeIcon\" pButton (click)=\"onDeactivateClick($event)\" *ngIf=\"closable\"></button>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./inplace.css']\r\n})\r\nexport class Inplace implements AfterContentInit {\r\n\r\n    @Input() active: boolean;\r\n\r\n    @Input() closable: boolean;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() preventClick: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() closeIcon: string = 'pi pi-times';\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @Output() onActivate: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onDeactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n    hover: boolean;\r\n\r\n    displayTemplate: TemplateRef<any>;\r\n\r\n    contentTemplate: TemplateRef<any>;\r\n\r\n    constructor(public cd: ChangeDetectorRef) {}\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'display':\r\n                    this.displayTemplate = item.template;\r\n                break;\r\n\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onActivateClick(event) {\r\n        if (!this.preventClick)\r\n            this.activate(event);\r\n    }\r\n\r\n    onDeactivateClick(event) {\r\n        if (!this.preventClick)\r\n            this.deactivate(event);\r\n    }\r\n\r\n    activate(event?: Event) {\r\n        if (!this.disabled) {\r\n            this.active = true;\r\n            this.onActivate.emit(event);\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    deactivate(event?: Event) {\r\n        if (!this.disabled) {\r\n            this.active = false;\r\n            this.hover = false;\r\n            this.onDeactivate.emit(event);\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent) {\r\n        if (event.which === 13) {\r\n            this.activate(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ButtonModule],\r\n    exports: [Inplace,InplaceDisplay,InplaceContent,ButtonModule],\r\n    declarations: [Inplace,InplaceDisplay,InplaceContent]\r\n})\r\nexport class InplaceModule { }\r\n"]}