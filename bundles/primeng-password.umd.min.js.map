{"version":3,"sources":["../../src/app/components/password/password.ts"],"names":["Password","el","zone","this","promptLabel","weakLabel","mediumLabel","strongLabel","feedback","Object","defineProperty","prototype","show","nativeElement","type","ngDoCheck","updateFilledState","onInput","e","filled","value","length","createPanel","panel","document","createElement","className","meter","info","textContent","appendChild","style","minWidth","DomHandler","getOuterWidth","body","showOverlay","_this","zIndex","String","zindex","display","runOutsideAngular","setTimeout","addClass","bindScrollListener","bindDocumentResizeListener","absolutePosition","hideOverlay","removeClass","unbindScrollListener","unbindDocumentResizeListener","ngOnDestroy","onFocus","onBlur","onKeyup","target","label","meterPos","score","testStrength","hasClass","backgroundPosition","str","val","grade","match","normalize","x","y","disabled","scrollHandler","ConnectedOverlayScrollHandler","documentResizeListener","onWindowResize","bind","window","addEventListener","removeEventListener","destroy","removeChild","Directive","args","selector","host","[class.p-inputtext]","[class.p-component]","[class.p-filled]","ElementRef","NgZone","Input","HostListener","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnDestroy,DoCheck,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler, ConnectedOverlayScrollHandler} from 'primeng/dom';\r\n\r\n@Directive({\r\n    selector: '[pPassword]',\r\n    host: {\r\n        '[class.p-inputtext]': 'true',\r\n        '[class.p-component]': 'true',\r\n        '[class.p-filled]': 'filled'\r\n    }\r\n})\r\nexport class Password implements OnDestroy,DoCheck {\r\n\r\n    @Input() promptLabel: string = 'Enter a password';\r\n\r\n    @Input() weakLabel: string = 'Weak';\r\n\r\n    @Input() mediumLabel: string = 'Medium';\r\n\r\n    @Input() strongLabel: string = 'Strong';\r\n\r\n    @Input() feedback: boolean = true;\r\n\r\n    @Input() set showPassword(show: boolean) {\r\n        this.el.nativeElement.type = show ? 'text' : 'password';\r\n    }\r\n\r\n    panel: HTMLDivElement;\r\n\r\n    meter: any;\r\n\r\n    info: any;\r\n\r\n    filled: boolean;\r\n\r\n    scrollHandler: any;\r\n\r\n    documentResizeListener: any;\r\n\r\n    constructor(public el: ElementRef, public zone: NgZone) {}\r\n\r\n    ngDoCheck() {\r\n        this.updateFilledState();\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    onInput(e) {\r\n        this.updateFilledState();\r\n    }\r\n\r\n    updateFilledState() {\r\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\r\n    }\r\n\r\n    createPanel() {\r\n        this.panel = document.createElement('div');\r\n        this.panel.className = 'p-password-panel p-component p-password-panel-overlay p-connected-overlay';\r\n        this.meter = document.createElement('div');\r\n        this.meter.className = 'p-password-meter';\r\n        this.info = document.createElement('div');\r\n        this.info.className = 'p-password-info';\r\n        this.info.textContent = this.promptLabel;\r\n        this.panel.appendChild(this.meter);\r\n        this.panel.appendChild(this.info);\r\n        this.panel.style.minWidth = DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\r\n        document.body.appendChild(this.panel);\r\n    }\r\n\r\n    showOverlay() {\r\n        if (this.feedback) {\r\n            if (!this.panel) {\r\n                this.createPanel();\r\n            }\r\n\r\n            this.panel.style.zIndex = String(++DomHandler.zindex);\r\n            this.panel.style.display = 'block';\r\n            this.zone.runOutsideAngular(() => {\r\n\r\n                setTimeout(() => {\r\n                    DomHandler.addClass(this.panel, 'p-connected-overlay-visible');\r\n                    this.bindScrollListener();\r\n                    this.bindDocumentResizeListener();\r\n                }, 1);\r\n            });\r\n            DomHandler.absolutePosition(this.panel, this.el.nativeElement);\r\n        }\r\n    }\r\n\r\n    hideOverlay() {\r\n        if (this.feedback && this.panel) {\r\n            DomHandler.addClass(this.panel, 'p-connected-overlay-hidden');\r\n            DomHandler.removeClass(this.panel, 'p-connected-overlay-visible');\r\n            this.unbindScrollListener();\r\n            this.unbindDocumentResizeListener();\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.ngOnDestroy();\r\n                }, 150);\r\n            });\r\n        }\r\n    }\r\n\r\n    @HostListener('focus')\r\n    onFocus() {\r\n        this.showOverlay();\r\n    }\r\n\r\n    @HostListener('blur')\r\n    onBlur() {\r\n        this.hideOverlay();\r\n    }\r\n\r\n    @HostListener('keyup', ['$event'])\r\n    onKeyup(e) {\r\n        if (this.feedback) {\r\n            let value = e.target.value,\r\n            label = null,\r\n            meterPos = null;\r\n\r\n            if (value.length === 0) {\r\n                label = this.promptLabel;\r\n                meterPos = '0px 0px';\r\n            }\r\n            else {\r\n                var score = this.testStrength(value);\r\n\r\n                if (score < 30) {\r\n                    label = this.weakLabel;\r\n                    meterPos = '0px -10px';\r\n                }\r\n                else if (score >= 30 && score < 80) {\r\n                    label = this.mediumLabel;\r\n                    meterPos = '0px -20px';\r\n                }\r\n                else if (score >= 80) {\r\n                    label = this.strongLabel;\r\n                    meterPos = '0px -30px';\r\n                }\r\n            }\r\n\r\n            if (!this.panel || !DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\r\n                this.showOverlay();\r\n            }\r\n\r\n            this.meter.style.backgroundPosition = meterPos;\r\n            this.info.textContent = label;\r\n        }\r\n    }\r\n\r\n    testStrength(str: string) {\r\n        let grade: number = 0;\r\n        let val: RegExpMatchArray;\r\n\r\n        val = str.match('[0-9]');\r\n        grade += this.normalize(val ? val.length : 1/4, 1) * 25;\r\n\r\n        val = str.match('[a-zA-Z]');\r\n        grade += this.normalize(val ? val.length : 1/2, 3) * 10;\r\n\r\n        val = str.match('[!@#$%^&*?_~.,;=]');\r\n        grade += this.normalize(val ? val.length : 1/6, 1) * 35;\r\n\r\n        val = str.match('[A-Z]');\r\n        grade += this.normalize(val ? val.length : 1/6, 1) * 30;\r\n\r\n        grade *= str.length / 8;\r\n\r\n        return grade > 100 ? 100 : grade;\r\n    }\r\n\r\n    normalize(x, y) {\r\n        let diff = x - y;\r\n\r\n        if (diff <= 0)\r\n            return x / y;\r\n        else\r\n            return 1 + 0.5 * (x / (x + y/4));\r\n    }\r\n\r\n    get disabled(): boolean {\r\n        return this.el.nativeElement.disabled;\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\r\n                if (DomHandler.hasClass(this.panel, 'p-connected-overlay-visible')) {\r\n                    this.hideOverlay();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        this.documentResizeListener = this.onWindowResize.bind(this);\r\n        window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n\r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.hideOverlay();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.panel) {\r\n            if (this.scrollHandler) {\r\n                this.scrollHandler.destroy();\r\n                this.scrollHandler = null;\r\n            }\r\n\r\n            this.unbindDocumentResizeListener();\r\n\r\n            document.body.removeChild(this.panel);\r\n            this.panel = null;\r\n            this.meter = null;\r\n            this.info = null;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Password],\r\n    declarations: [Password]\r\n})\r\nexport class PasswordModule { }\r\n"]}