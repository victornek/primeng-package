{"version":3,"sources":["../../src/app/components/inputswitch/inputswitch.ts"],"names":["INPUTSWITCH_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputSwitch","multi","cd","this","onChange","EventEmitter","checked","focused","onModelChange","onModelTouched","prototype","onClick","event","cb","disabled","readonly","preventDefault","toggle","focus","onInputChange","inputChecked","target","updateModel","value","emit","originalEvent","onFocus","onBlur","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","val","Component","args","selector","template","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","Output","NgModule","imports","CommonModule","exports","declarations"],"mappings":"udAIaA,EAAkC,CAC7CC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAAC,KAC9BC,OAAO,gBAgDL,SAAAD,EAAoBE,GAAAC,KAAAD,GAAAA,EAVVC,KAAAC,SAA8B,IAAIC,EAAAA,aAE5CF,KAAAG,SAAmB,EAEnBH,KAAAI,SAAmB,EAEnBJ,KAAAK,cAA0B,aAE1BL,KAAAM,eAA2B,oBAI3BT,EAAAU,UAAAC,QAAA,SAAQC,EAAcC,GACbV,KAAKW,UAAaX,KAAKY,WACxBH,EAAMI,iBACNb,KAAKc,OAAOL,GACZC,EAAGK,UAIXlB,EAAAU,UAAAS,cAAA,SAAcP,GACV,IAAKT,KAAKY,SAAU,CAChB,IAAMK,EAAmCR,EAAMS,OAAQf,QACvDH,KAAKmB,YAAYV,EAAOQ,KAIhCpB,EAAAU,UAAAO,OAAA,SAAOL,GACHT,KAAKmB,YAAYV,GAAQT,KAAKG,UAGlCN,EAAAU,UAAAY,YAAA,SAAYV,EAAcW,GACtBpB,KAAKG,QAAUiB,EACfpB,KAAKK,cAAcL,KAAKG,SACxBH,KAAKC,SAASoB,KAAK,CACfC,cAAeb,EACfN,QAASH,KAAKG,WAItBN,EAAAU,UAAAgB,QAAA,SAAQd,GACJT,KAAKI,SAAU,GAGnBP,EAAAU,UAAAiB,OAAA,SAAOf,GACHT,KAAKI,SAAU,EACfJ,KAAKM,kBAGTT,EAAAU,UAAAkB,WAAA,SAAWtB,GACPH,KAAKG,QAAUA,EACfH,KAAKD,GAAG2B,gBAGZ7B,EAAAU,UAAAoB,iBAAA,SAAiBC,GACb5B,KAAKK,cAAgBuB,GAGzB/B,EAAAU,UAAAsB,kBAAA,SAAkBD,GACd5B,KAAKM,eAAiBsB,GAG1B/B,EAAAU,UAAAuB,iBAAA,SAAiBC,GACb/B,KAAKW,SAAWoB,EAChB/B,KAAKD,GAAG2B,yCAnGfM,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,ktBAUVC,UAAW,CAAC5C,GACZ6C,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,2QAxB2BC,EAAAA,oDA6B3DC,EAAAA,0BAEAA,EAAAA,wBAEAA,EAAAA,uBAEAA,EAAAA,oBAEAA,EAAAA,wBAEAA,EAAAA,wBAEAA,EAAAA,8BAEAA,EAAAA,wBAEAC,EAAAA,gBAyEL,iCALCC,EAAAA,SAAQb,KAAA,CAAC,CACNc,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACpD,GACVqD,aAAc,CAACrD","sourcesContent":["import {NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputSwitch),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-inputSwitch',\r\n    template: `\r\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \r\n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\r\n            <div class=\"p-hidden-accessible\">\r\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\r\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\r\n            </div>\r\n            <span class=\"p-inputswitch-slider\"></span>\r\n        </div>\r\n    `,\r\n    providers: [INPUTSWITCH_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./inputswitch.css']\r\n})\r\nexport class InputSwitch implements ControlValueAccessor {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    checked: boolean = false;\r\n\r\n    focused: boolean = false;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    constructor(private cd: ChangeDetectorRef) {}\r\n\r\n    onClick(event: Event, cb: HTMLInputElement) {\r\n        if (!this.disabled && !this.readonly) {\r\n            event.preventDefault();\r\n            this.toggle(event);\r\n            cb.focus();\r\n        }\r\n    }\r\n\r\n    onInputChange(event: Event) {\r\n        if (!this.readonly) {\r\n            const inputChecked = (<HTMLInputElement> event.target).checked;\r\n            this.updateModel(event, inputChecked);\r\n        }\r\n    }\r\n\r\n    toggle(event: Event) {\r\n        this.updateModel(event, !this.checked);\r\n    }\r\n\r\n    updateModel(event: Event, value: boolean) {\r\n        this.checked = value;\r\n        this.onModelChange(this.checked);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            checked: this.checked\r\n        });\r\n    }\r\n\r\n    onFocus(event: Event) {\r\n        this.focused = true;\r\n    }\r\n\r\n    onBlur(event: Event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(checked: any) : void {\r\n        this.checked = checked;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputSwitch],\r\n    declarations: [InputSwitch]\r\n})\r\nexport class InputSwitchModule { }\r\n"]}