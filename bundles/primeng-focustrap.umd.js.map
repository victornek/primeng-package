{"version":3,"file":"primeng-focustrap.umd.js","sources":["../../src/app/components/focustrap/focustrap.ts","../../src/app/components/focustrap/primeng-focustrap.ts"],"sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from 'primeng/dom';\r\n\r\n@Directive({\r\n    selector: '[pFocusTrap]',\r\n})\r\nexport class FocusTrap {\r\n\r\n    @Input() pFocusTrapDisabled: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    @HostListener('keydown.tab', ['$event'])\r\n    @HostListener('keydown.shift.tab', ['$event'])\r\n    onkeydown(e) {\r\n        if (this.pFocusTrapDisabled !== true) {\r\n            e.preventDefault();\r\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\r\n            if (focusableElements && focusableElements.length > 0) {\r\n                if (!focusableElements[0].ownerDocument.activeElement) {\r\n                    focusableElements[0].focus();\r\n                }\r\n                else {\r\n                    let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\r\n\r\n                    if (e.shiftKey) {\r\n                        if (focusedIndex == -1 || focusedIndex === 0)\r\n                            focusableElements[focusableElements.length - 1].focus();\r\n                        else\r\n                            focusableElements[focusedIndex - 1].focus();\r\n                    }\r\n                    else {\r\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\r\n                            focusableElements[0].focus();\r\n                        else\r\n                            focusableElements[focusedIndex + 1].focus();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [FocusTrap],\r\n    declarations: [FocusTrap]\r\n})\r\nexport class FocusTrapModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["DomHandler","Directive","ElementRef","Input","HostListener","NgModule","CommonModule"],"mappings":";;;;;;;QAWI,mBAAmB,EAAc;YAAd,OAAE,GAAF,EAAE,CAAY;SAAI;QAIrC,6BAAS,GAAT,UAAU,CAAC;YACP,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;gBAClC,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,iBAAiB,GAAGA,cAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;gBAC/E,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,EAAE;wBACnD,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;qBAChC;yBACI;wBACD,IAAI,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;wBAE/F,IAAI,CAAC,CAAC,QAAQ,EAAE;4BACZ,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;gCACxC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;;gCAExD,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;yBACnD;6BACI;4BACD,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,MAAM,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;gCACrE,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;;gCAE7B,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;yBACnD;qBACJ;iBACJ;aACJ;SACJ;;;;gBArCJC,cAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;iBAC3B;;;gBAN0BC,eAAU;;;qCAShCC,UAAK;4BAILC,iBAAY,SAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,cACtCA,iBAAY,SAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC;;;QAmCjD;;;;;gBALCC,aAAQ,SAAC;oBACN,OAAO,EAAE,CAACC,mBAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,SAAS,CAAC;oBACpB,YAAY,EAAE,CAAC,SAAS,CAAC;iBAC5B;;;IChDD;;;;;;;;;;;;;"}