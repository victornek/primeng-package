{"version":3,"file":"primeng-megamenu.umd.js","sources":["../../src/app/components/megamenu/megamenu.ts","../../src/app/components/megamenu/primeng-megamenu.ts"],"sourcesContent":["import {NgModule,Component,ElementRef,Input,Renderer2,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, AfterContentInit, ContentChildren, QueryList, TemplateRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MegaMenuItem,MenuItem, PrimeTemplate} from 'primeng/api';\r\nimport {RouterModule} from '@angular/router';\r\nimport {RippleModule} from 'primeng/ripple';  \r\n\r\n@Component({\r\n    selector: 'p-megaMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\"\r\n            [ngClass]=\"{'p-megamenu p-component':true,'p-megamenu-horizontal': orientation == 'horizontal','p-megamenu-vertical': orientation == 'vertical'}\">\r\n            <div class=\"p-megamenu-start\" *ngIf=\"startTemplate\">\r\n                <ng-container *ngTemplateOutlet=\"startTemplate\"></ng-container>\r\n            </div>\r\n            <ul class=\"p-megamenu-root-list\" role=\"menubar\">\r\n                <ng-template ngFor let-category [ngForOf]=\"model\">\r\n                    <li *ngIf=\"category.separator\" class=\"p-menu-separator\" [ngClass]=\"{'p-hidden': category.visible === false}\">\r\n                    <li *ngIf=\"!category.separator\" [ngClass]=\"{'p-menuitem':true,'p-menuitem-active':category==activeItem, 'p-hidden': category.visible === false}\"\r\n                        (mouseenter)=\"onCategoryMouseEnter($event, category)\">\r\n                        <a *ngIf=\"!category.routerLink\" [href]=\"category.url||'#'\" [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\" (click)=\"onCategoryClick($event, category)\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\r\n                            [ngClass]=\"{'p-menuitem-link':true,'p-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\" pRipple>\r\n                            <span class=\"p-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"p-menuitem-text\" *ngIf=\"category.escape !== false; else categoryHtmlLabel\">{{category.label}}</span>\r\n                            <ng-template #categoryHtmlLabel><span class=\"p-menuitem-text\" [innerHTML]=\"category.label\"></span></ng-template>\r\n                            <span *ngIf=\"category.items\" class=\"p-submenu-icon pi\" [ngClass]=\"{'pi-angle-down':orientation=='horizontal','pi-angle-right':orientation=='vertical'}\"></span>\r\n                        </a>\r\n                        <a *ngIf=\"category.routerLink\" [routerLink]=\"category.routerLink\" [queryParams]=\"category.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" [routerLinkActiveOptions]=\"category.routerLinkActiveOptions||{exact:false}\" [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\" \r\n                            [attr.target]=\"category.target\" [attr.title]=\"category.title\" [attr.id]=\"category.id\"\r\n                            (click)=\"onCategoryClick($event, category)\" [ngClass]=\"{'p-menuitem-link':true,'p-disabled':category.disabled}\" [ngStyle]=\"category.style\" [class]=\"category.styleClass\"\r\n                            [fragment]=\"category.fragment\" [queryParamsHandling]=\"category.queryParamsHandling\" [preserveFragment]=\"category.preserveFragment\" [skipLocationChange]=\"category.skipLocationChange\" [replaceUrl]=\"category.replaceUrl\" [state]=\"category.state\" pRipple>\r\n                            <span class=\"p-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"p-menuitem-text\" *ngIf=\"category.escape !== false; else categoryHtmlRouteLabel\">{{category.label}}</span>\r\n                            <ng-template #categoryHtmlRouteLabel><span class=\"p-menuitem-text\" [innerHTML]=\"category.label\"></span></ng-template>\r\n                        </a>\r\n                        <div class=\"p-megamenu-panel\" *ngIf=\"category.items\">\r\n                            <div class=\"p-megamenu-grid\">\r\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\r\n                                    <div [class]=\"getColumnClass(category)\">\r\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\r\n                                            <ul class=\"p-megamenu-submenu\" role=\"menu\">\r\n                                                <li class=\"p-megamenu-submenu-header\">\r\n                                                    <span *ngIf=\"submenu.escape !== false; else submenuHtmlLabel\">{{submenu.label}}</span>\r\n                                                    <ng-template #submenuHtmlLabel><span [innerHTML]=\"submenu.label\"></span></ng-template>\r\n                                                </li>\r\n                                                <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\r\n                                                    <li *ngIf=\"item.separator\" class=\"p-menu-separator\" [ngClass]=\"{'p-hidden': item.visible === false}\" role=\"separator\">\r\n                                                    <li *ngIf=\"!item.separator\" class=\"p-menuitem\" [ngClass]=\"{'p-hidden': item.visible === false}\" role=\"none\">\r\n                                                        <a *ngIf=\"!item.routerLink\" role=\"menuitem\" [href]=\"item.url||'#'\" class=\"p-menuitem-link\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [ngClass]=\"{'p-disabled':item.disabled}\" (click)=\"itemClick($event, item)\" pRipple>\r\n                                                            <span class=\"p-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                            <span class=\"p-menuitem-text\" *ngIf=\"item.escape !== false; else htmlLabel\">{{item.label}}</span>\r\n                                                            <ng-template #htmlLabel><span class=\"p-menuitem-text\" [innerHTML]=\"item.label\"></span></ng-template>\r\n                                                        </a>\r\n                                                        <a *ngIf=\"item.routerLink\" role=\"menuitem\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"p-menuitem-link\" \r\n                                                             [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\r\n                                                            [ngClass]=\"{'p-disabled':item.disabled}\" (click)=\"itemClick($event, item)\"\r\n                                                            [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" pRipple>\r\n                                                            <span class=\"p-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                            <span class=\"p-menuitem-text\" *ngIf=\"item.escape !== false; else htmlRouteLabel\">{{item.label}}</span>\r\n                                                            <ng-template #htmlRouteLabel><span class=\"p-menuitem-text\" [innerHTML]=\"item.label\"></span></ng-template>\r\n                                                        </a>\r\n                                                    </li>\r\n                                                </ng-template>\r\n                                            </ul>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ng-template>\r\n                <div class=\"p-megamenu-end\" *ngIf=\"endTemplate; else legacy\">\r\n                    <ng-container *ngTemplateOutlet=\"endTemplate\"></ng-container>\r\n                </div>\r\n                <ng-template #legacy>\r\n                    <div class=\"p-megamenu-end\">\r\n                        <ng-content></ng-content>\r\n                    </div>\r\n                </ng-template>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./megamenu.css']\r\n})\r\nexport class MegaMenu implements AfterContentInit {\r\n\r\n    @Input() model: MegaMenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() orientation: string = 'horizontal';\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n    \r\n    activeItem: any;\r\n\r\n    documentClickListener: any;\r\n\r\n    startTemplate: TemplateRef<any>;\r\n\r\n    endTemplate: TemplateRef<any>;\r\n                \r\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\r\n    \r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'start':\r\n                    this.startTemplate = item.template;\r\n                break;\r\n\r\n                case 'end':\r\n                    this.endTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onCategoryMouseEnter(event, menuitem: MegaMenuItem) {\r\n        if (menuitem.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (this.activeItem) {\r\n            this.activeItem = menuitem;\r\n        }\r\n    }\r\n\r\n    onCategoryClick(event, item: MenuItem | MegaMenuItem) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        if (item.items) {\r\n            if (this.activeItem && this.activeItem === item) {\r\n                this.activeItem = null;\r\n                this.unbindDocumentClickListener();\r\n            }\r\n            else {\r\n                this.activeItem = item;\r\n                this.bindDocumentClickListener();\r\n            }\r\n        }\r\n    }\r\n    \r\n    itemClick(event, item: MenuItem | MegaMenuItem) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n        \r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n                        \r\n        this.activeItem = null;\r\n    }\r\n    \r\n    getColumnClass(menuitem: MegaMenuItem) {\r\n        let length = menuitem.items ? menuitem.items.length: 0;\r\n        let columnClass;\r\n        switch(length) {\r\n            case 2:\r\n                columnClass= 'p-megamenu-col-6';\r\n            break;\r\n            \r\n            case 3:\r\n                columnClass= 'p-megamenu-col-4';\r\n            break;\r\n            \r\n            case 4:\r\n                columnClass= 'p-megamenu-col-3';\r\n            break;\r\n            \r\n            case 6:\r\n                columnClass= 'p-megamenu-col-2';\r\n            break;\r\n                        \r\n            default:\r\n                columnClass= 'p-megamenu-col-12';\r\n            break;\r\n        }\r\n        \r\n        return columnClass;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.el && !this.el.nativeElement.contains(event.target)) {\r\n                    this.activeItem = null;\r\n                    this.unbindDocumentClickListener();\r\n                    this.cd.markForCheck();\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule,RippleModule],\r\n    exports: [MegaMenu,RouterModule],\r\n    declarations: [MegaMenu]\r\n})\r\nexport class MegaMenuModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","Renderer2","ChangeDetectorRef","Input","ContentChildren","PrimeTemplate","NgModule","CommonModule","RouterModule","RippleModule"],"mappings":"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"}