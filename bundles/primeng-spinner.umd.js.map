{"version":3,"file":"primeng-spinner.umd.js","sources":["../../src/app/components/spinner/spinner.ts","../../src/app/components/spinner/primeng-spinner.ts"],"sourcesContent":["import {NgModule,Component,ElementRef,OnInit,Input,Output,EventEmitter,forwardRef,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const SPINNER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => Spinner),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-spinner',\r\n    template: `\r\n        <span class=\"ui-spinner ui-widget ui-corner-all\">\r\n            <input #inputfield type=\"text\" [attr.id]=\"inputId\" [value]=\"formattedValue||null\" [attr.name]=\"name\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"value\" [attr.aria-labelledby]=\"ariaLabelledBy\"\r\n            [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.placeholder]=\"placeholder\" [disabled]=\"disabled\" [readonly]=\"readonly\" [attr.required]=\"required\"\r\n            (keydown)=\"onInputKeydown($event)\" (blur)=\"onInputBlur($event)\" (input)=\"onInput($event)\" (change)=\"onInputChange($event)\" (focus)=\"onInputFocus($event)\"\r\n            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [ngClass]=\"'ui-spinner-input ui-inputtext ui-widget ui-state-default ui-corner-all'\">\r\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\r\n                (mouseleave)=\"onUpButtonMouseleave($event)\" (mousedown)=\"onUpButtonMousedown($event)\" (mouseup)=\"onUpButtonMouseup($event)\">\r\n                <span class=\"ui-spinner-button-icon pi pi-caret-up ui-clickable\"></span>\r\n            </button>\r\n            <button type=\"button\" [ngClass]=\"{'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default':true,'ui-state-disabled':disabled}\" [disabled]=\"disabled||readonly\" tabindex=\"-1\" [attr.readonly]=\"readonly\"\r\n                (mouseleave)=\"onDownButtonMouseleave($event)\" (mousedown)=\"onDownButtonMousedown($event)\" (mouseup)=\"onDownButtonMouseup($event)\">\r\n                <span class=\"ui-spinner-button-icon pi pi-caret-down ui-clickable\"></span>\r\n            </button>\r\n        </span>\r\n    `,\r\n    host: {\r\n        '[class.ui-inputwrapper-filled]': 'filled',\r\n        '[class.ui-inputwrapper-focus]': 'focus'\r\n    },\r\n    providers: [SPINNER_VALUE_ACCESSOR],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./spinner.css']\r\n})\r\nexport class Spinner implements OnInit,ControlValueAccessor {\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n    \r\n    @Input() maxlength: number;\r\n    \r\n    @Input() size: number;\r\n\r\n    @Input() placeholder: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() readonly: boolean;\r\n\r\n    @Input() tabindex: number;\r\n            \r\n    @Input() required: boolean;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() ariaLabelledBy: string;\r\n\r\n    @Input() inputStyle: any;\r\n\r\n    @Input() inputStyleClass: string;\r\n\r\n    @Input() formatInput: boolean;\r\n\r\n    @Input() decimalSeparator: string;\r\n\r\n    @Input() thousandSeparator: string;\r\n\r\n    @Input() precision: number;\r\n    \r\n    value: any;\r\n\r\n    _step: number = 1;\r\n\r\n    formattedValue: string;\r\n        \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    keyPattern: RegExp = /[0-9\\+\\-]/;\r\n        \r\n    public timer: any;\r\n    \r\n    public focus: boolean;\r\n    \r\n    public filled: boolean;\r\n    \r\n    public negativeSeparator = '-';\r\n\r\n    localeDecimalSeparator: string;\r\n\r\n    localeThousandSeparator: string;\r\n\r\n    thousandRegExp: RegExp;\r\n\r\n    calculatedPrecision: number;\r\n    \r\n    @ViewChild('inputfield') inputfieldViewChild: ElementRef;\r\n\r\n    @Input() get step(): number {\r\n        return this._step;\r\n    }\r\n    set step(val:number) {\r\n        this._step = val;\r\n\r\n        if (this._step != null) {\r\n            let tokens = this.step.toString().split(/[,]|[.]/);\r\n            this.calculatedPrecision = tokens[1] ? tokens[1].length : undefined;\r\n        }\r\n    }\r\n    \r\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.formatInput) {\r\n            this.localeDecimalSeparator = (1.1).toLocaleString().substring(1, 2);\r\n            this.localeThousandSeparator = (1000).toLocaleString().substring(1, 2);\r\n            this.thousandRegExp = new RegExp(`[${this.thousandSeparator || this.localeThousandSeparator}]`, 'gim');\r\n\r\n            if (this.decimalSeparator && this.thousandSeparator && this.decimalSeparator === this.thousandSeparator) {\r\n                console.warn(\"thousandSeparator and decimalSeparator cannot have the same value.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    repeat(event: Event, interval: number, dir: number) {\r\n        let i = interval||500;\r\n\r\n        this.clearTimer();\r\n        this.timer = setTimeout(() => {\r\n            this.repeat(event, 40, dir);\r\n        }, i);\r\n\r\n        this.spin(event, dir);\r\n    }\r\n    \r\n    spin(event: Event, dir: number) {\r\n        let step = this.step * dir;\r\n        let currentValue: number;\r\n        let precision = this.getPrecision();\r\n\r\n        if (this.value)\r\n            currentValue = (typeof this.value === 'string') ? this.parseValue(this.value) : this.value;\r\n        else\r\n            currentValue = 0;\r\n        \r\n        if (precision)\r\n            this.value = parseFloat(this.toFixed(currentValue + step, precision));\r\n        else\r\n            this.value = currentValue + step;\r\n    \r\n        if (this.maxlength !== undefined && this.value.toString().length > this.maxlength) {\r\n            this.value = currentValue;\r\n        }\r\n    \r\n        if (this.min !== undefined && this.value < this.min) {\r\n            this.value = this.min;\r\n        }\r\n\r\n        if (this.max !== undefined && this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n        \r\n        this.formatValue();\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit(event);\r\n    }\r\n\r\n    getPrecision() {\r\n        return this.precision === undefined ? this.calculatedPrecision : this.precision;\r\n    }\r\n    \r\n    toFixed(value: number, precision: number) {\r\n        let power = Math.pow(10, precision||0);\r\n        return String(Math.round(value * power) / power);\r\n    }\r\n    \r\n    onUpButtonMousedown(event: Event) {\r\n        if (!this.disabled) {\r\n            this.inputfieldViewChild.nativeElement.focus();\r\n            this.repeat(event, null, 1);\r\n            this.updateFilledState();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onUpButtonMouseup(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onUpButtonMouseleave(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMousedown(event: Event) {\r\n        if (!this.disabled) {\r\n            this.inputfieldViewChild.nativeElement.focus();\r\n            this.repeat(event, null, -1);\r\n            this.updateFilledState();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMouseup(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onDownButtonMouseleave(event: Event) {\r\n        if (!this.disabled) {\r\n            this.clearTimer();\r\n        }\r\n    }\r\n    \r\n    onInputKeydown(event: KeyboardEvent) {\r\n        if (event.which == 38) {\r\n            this.spin(event, 1);\r\n            event.preventDefault();\r\n        }\r\n        else if (event.which == 40) {\r\n            this.spin(event, -1);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onInputChange(event: Event) {\r\n        this.onChange.emit(event);\r\n    }\r\n\r\n    onInput(event: KeyboardEvent) {\r\n        this.value = this.parseValue((<HTMLInputElement> event.target).value);\r\n        this.onModelChange(this.value);\r\n        this.updateFilledState();\r\n    }\r\n        \r\n    onInputBlur(event) {\r\n        this.focus = false;\r\n        this.formatValue();\r\n        this.onModelTouched();\r\n        this.onBlur.emit(event);\r\n    }\r\n    \r\n    onInputFocus(event) {\r\n        this.focus = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n    \r\n    parseValue(val: string): number {\r\n        let value: number;\r\n        let precision = this.getPrecision();\r\n                \r\n        if (val.trim() === '') {\r\n            value = null;\r\n        }\r\n        else {\r\n            if (this.formatInput) {\r\n                val = val.replace(this.thousandRegExp, '');\r\n            }\r\n\r\n            if (precision) {\r\n                val = this.formatInput ? val.replace(this.decimalSeparator || this.localeDecimalSeparator, '.') : val.replace(',', '.');\r\n                value = parseFloat(val);\r\n            }\r\n            else {\r\n                value = parseInt(val, 10);\r\n            }\r\n            \r\n            if (!isNaN(value)) {\r\n                if (this.max !== null && value > this.max) {\r\n                    value = this.max;\r\n                }\r\n\r\n                if (this.min !== null && value < this.min) {\r\n                    value = this.min;\r\n                }\r\n            }\r\n            else {\r\n                value = null;\r\n            }\r\n        }\r\n        \r\n        return value;\r\n    }\r\n\r\n    formatValue() {\r\n        let value = this.value;\r\n        let precision = this.getPrecision();\r\n\r\n        if (value != null) {\r\n            if (this.formatInput) {\r\n                value = value.toLocaleString(undefined, {maximumFractionDigits: 20});\r\n    \r\n                if (this.decimalSeparator && this.thousandSeparator) {\r\n                    value = value.split(this.localeDecimalSeparator);\r\n    \r\n                    if (precision && value[1]) {\r\n                        value[1] = (this.decimalSeparator || this.localeDecimalSeparator) + value[1];\r\n                    }\r\n    \r\n                    if (this.thousandSeparator && value[0].length > 3) {\r\n                        value[0] = value[0].replace(new RegExp(`[${this.localeThousandSeparator}]`, 'gim'), this.thousandSeparator);\r\n                    }\r\n    \r\n                    value = value.join('');\r\n                }\r\n            }\r\n    \r\n            this.formattedValue = value.toString();\r\n        }\r\n        else {\r\n            this.formattedValue = null;\r\n        }\r\n\r\n        if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\r\n            this.inputfieldViewChild.nativeElement.value = this.formattedValue;\r\n        }\r\n    }\r\n            \r\n    clearTimer() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.formatValue();\r\n        this.updateFilledState();\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    updateFilledState() {\r\n        this.filled = (this.value !== undefined && this.value != null);\r\n    }\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,InputTextModule],\r\n    exports: [Spinner],\r\n    declarations: [Spinner]\r\n})\r\nexport class SpinnerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","ChangeDetectorRef","Output","Input","ViewChild","NgModule","CommonModule","InputTextModule"],"mappings":"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"}