{"version":3,"sources":["../../src/app/components/contextmenu/contextmenu.ts"],"names":["ContextMenuSub","contextMenu","this","Object","defineProperty","prototype","_parentActive","value","activeItem","onItemMouseEnter","event","item","menuitem","hideTimeout","clearTimeout","disabled","nextElement","children","nextElementSibling","sublist","style","zIndex","DomHandler","zindex","position","itemClick","preventDefault","command","originalEvent","items","hide","listClick","containerOffset","getOffset","parentElement","viewport","getViewport","sublistWidth","offsetParent","offsetWidth","getHiddenElementOuterWidth","itemOuterWidth","getOuterWidth","itemOuterHeight","getOuterHeight","sublistHeight","offsetHeight","getHiddenElementOuterHeight","parseInt","top","height","calculateScrollbarHeight","removeProperty","bottom","left","width","calculateScrollbarWidth","Component","args","selector","template","encapsulation","ViewEncapsulation","None","Inject","forwardRef","ContextMenu","Input","el","renderer","zone","autoZIndex","baseZIndex","triggerEvent","onShow","EventEmitter","onHide","ngAfterViewInit","_this","global","documentTarget","nativeElement","ownerDocument","triggerEventListener","listen","show","target","stopPropagation","appendTo","document","body","appendChild","containerViewChild","moveOnTop","display","parentActive","fadeIn","bindGlobalListeners","emit","unbindGlobalListeners","String","toggle","pageX","pageY","scrollLeft","scrollTop","documentClickListener","isOutsideClicked","button","runOutsideAngular","windowResizeListener","onWindowResize","bind","window","addEventListener","removeEventListener","isSameNode","contains","ngOnDestroy","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","NgZone","Output","ViewChild","NgModule","imports","CommonModule","RouterModule","RippleModule","exports","declarations"],"mappings":"0lBA0DI,SAAAA,EAAmDC,GAC/CC,KAAKD,YAAcA,SAbvBE,OAAAC,eAAaJ,EAAAK,UAAA,eAAY,KAAzB,WACI,OAAOH,KAAKI,mBAEhB,SAAiBC,GACbL,KAAKI,cAAgBC,EAChBA,IACDL,KAAKM,WAAa,uCAkB1BR,EAAAK,UAAAI,iBAAA,SAAiBC,EAAOC,EAAMC,GAM1B,GALIV,KAAKW,cACLC,aAAaZ,KAAKW,aAClBX,KAAKW,YAAc,OAGnBD,EAASG,SAAb,CAIAb,KAAKM,WAAaG,EAElB,IAAIK,EAAcL,EAAKM,SAAS,GAAGC,mBACnC,GAAIF,EAAa,CACb,IAAIG,EAAUH,EAAYC,SAAS,GACnCE,EAAQC,MAAMC,SAAWC,EAAAA,WAAWC,OACpCrB,KAAKsB,SAASL,EAASR,MAI/BX,EAAAK,UAAAoB,UAAA,SAAUf,EAAOC,GACTA,EAAKI,SACLL,EAAMgB,kBAINf,EAAKgB,UACLhB,EAAKgB,QAAQ,CACTC,cAAelB,EACfC,KAAMA,IAEVD,EAAMgB,kBAGNf,EAAKkB,MACLnB,EAAMgB,iBAENxB,KAAKD,YAAY6B,SAGzB9B,EAAAK,UAAA0B,UAAA,SAAUrB,GACNR,KAAKM,WAAa,MAGtBR,EAAAK,UAAAmB,SAAA,SAASL,EAASR,GACdT,KAAK8B,gBAAkBV,EAAAA,WAAWW,UAAUtB,EAAKuB,eACjD,IAAIC,EAAWb,EAAAA,WAAWc,cACtBC,EAAelB,EAAQmB,aAAenB,EAAQoB,YAAcjB,EAAAA,WAAWkB,2BAA2BrB,GAClGsB,EAAiBnB,EAAAA,WAAWoB,cAAc/B,EAAKM,SAAS,IACxD0B,EAAkBrB,EAAAA,WAAWsB,eAAejC,EAAKM,SAAS,IAC1D4B,EAAgB1B,EAAQ2B,aAAe3B,EAAQ2B,aAAexB,EAAAA,WAAWyB,4BAA4B5B,GAEpG6B,SAAS9C,KAAK8B,gBAAgBiB,KAAON,EAAkBE,EAAkBV,EAASe,OAAS5B,EAAAA,WAAW6B,4BACvGhC,EAAQC,MAAMgC,eAAe,OAC7BjC,EAAQC,MAAMiC,OAAS,QAGvBlC,EAAQC,MAAMgC,eAAe,UAC7BjC,EAAQC,MAAM6B,IAAM,OAGnBD,SAAS9C,KAAK8B,gBAAgBsB,MAAQb,EAAiBJ,EAAiBF,EAASoB,MAAQjC,EAAAA,WAAWkC,0BACrGrC,EAAQC,MAAMkC,MAAQjB,EAAe,KAGrClB,EAAQC,MAAMkC,KAAOb,EAAiB,+BAhIjDgB,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,SAAU,4gGA6BVC,cAAeC,EAAAA,kBAAkBC,2EAoBpBC,EAAAA,OAAMN,KAAA,CAACO,EAAAA,YAAW,WAAM,OAAAC,yCAhBpCC,EAAAA,oBAEAA,EAAAA,4BAEAA,EAAAA,0BA6ID,SAAAD,EAAmBE,EAAuBC,EAA4BC,GAAnDpE,KAAAkE,GAAAA,EAAuBlE,KAAAmE,SAAAA,EAA4BnE,KAAAoE,KAAAA,EApB7DpE,KAAAqE,YAAsB,EAEtBrE,KAAAsE,WAAqB,EAErBtE,KAAAuE,aAAuB,cAEtBvE,KAAAwE,OAA4B,IAAIC,EAAAA,aAEhCzE,KAAA0E,OAA4B,IAAID,EAAAA,oBAc1CT,EAAA7D,UAAAwE,gBAAA,WAAA,IAAAC,EAAA5E,KACI,GAAIA,KAAK6E,OAAQ,CACb,IAAMC,EAAsB9E,KAAKkE,GAAKlE,KAAKkE,GAAGa,cAAcC,cAAgB,WAE5EhF,KAAKiF,qBAAuBjF,KAAKmE,SAASe,OAAOJ,EAAgB9E,KAAKuE,cAAc,SAAC/D,GACjFoE,EAAKO,KAAK3E,GACVA,EAAMgB,yBAGLxB,KAAKoF,SACVpF,KAAKiF,qBAAuBjF,KAAKmE,SAASe,OAAOlF,KAAKoF,OAAQpF,KAAKuE,cAAc,SAAC/D,GAC9EoE,EAAKO,KAAK3E,GACVA,EAAMgB,iBACNhB,EAAM6E,sBAIVrF,KAAKsF,WACiB,SAAlBtF,KAAKsF,SACLC,SAASC,KAAKC,YAAYzF,KAAK0F,mBAAmBX,eAElD3D,EAAAA,WAAWqE,YAAYzF,KAAK0F,mBAAmBX,cAAe/E,KAAKsF,YAI/EtB,EAAA7D,UAAAgF,KAAA,SAAK3E,GACDR,KAAKsB,SAASd,GACdR,KAAK2F,YACL3F,KAAK0F,mBAAmBX,cAAc7D,MAAM0E,QAAU,QACtD5F,KAAK6F,cAAe,EACpBzE,EAAAA,WAAW0E,OAAO9F,KAAK0F,mBAAmBX,cAAe,KACzD/E,KAAK+F,sBAEDvF,GACAA,EAAMgB,iBAGVxB,KAAKwE,OAAOwB,QAGhBhC,EAAA7D,UAAAyB,KAAA,WACI5B,KAAK0F,mBAAmBX,cAAc7D,MAAM0E,QAAU,OACtD5F,KAAK6F,cAAe,EACpB7F,KAAKiG,wBACLjG,KAAK0E,OAAOsB,QAGhBhC,EAAA7D,UAAAwF,UAAA,WACQ3F,KAAKqE,aACLrE,KAAK0F,mBAAmBX,cAAc7D,MAAMC,OAAS+E,OAAOlG,KAAKsE,cAAgBlD,EAAAA,WAAWC,UAIpG2C,EAAA7D,UAAAgG,OAAA,SAAO3F,GACCR,KAAK0F,mBAAmBX,cAAc3C,aACtCpC,KAAK4B,OAEL5B,KAAKmF,KAAK3E,IAGlBwD,EAAA7D,UAAAmB,SAAA,SAASd,GACL,GAAIA,EAAO,CACP,IAAI4C,EAAO5C,EAAM4F,MAAQ,EACrBrD,EAAMvC,EAAM6F,MAAQ,EACpBhD,EAAQrD,KAAK0F,mBAAmBX,cAAc3C,aAAepC,KAAK0F,mBAAmBX,cAAc1C,YAAcjB,EAAAA,WAAWkB,2BAA2BtC,KAAK0F,mBAAmBX,eAC/K/B,EAAShD,KAAK0F,mBAAmBX,cAAc3C,aAAepC,KAAK0F,mBAAmBX,cAAcnC,aAAexB,EAAAA,WAAWyB,4BAA4B7C,KAAK0F,mBAAmBX,eAClL9C,EAAWb,EAAAA,WAAWc,cAGtBkB,EAAOC,EAAQkC,SAASC,KAAKc,WAAarE,EAASoB,QACnDD,GAAQC,GAIRN,EAAMC,EAASuC,SAASC,KAAKe,UAAYtE,EAASe,SAClDD,GAAOC,GAIPI,EAAOmC,SAASC,KAAKc,aACrBlD,EAAOmC,SAASC,KAAKc,YAIrBvD,EAAMwC,SAASC,KAAKe,YACpBxD,EAAMwC,SAASC,KAAKe,WAGxBvG,KAAK0F,mBAAmBX,cAAc7D,MAAMkC,KAAOA,EAAO,KAC1DpD,KAAK0F,mBAAmBX,cAAc7D,MAAM6B,IAAMA,EAAM,OAIhEiB,EAAA7D,UAAA4F,oBAAA,WAAA,IAAAnB,EAAA5E,KACI,IAAKA,KAAKwG,sBAAuB,CAC7B,IAAM1B,EAAsB9E,KAAKkE,GAAKlE,KAAKkE,GAAGa,cAAcC,cAAgB,WAE5EhF,KAAKwG,sBAAwBxG,KAAKmE,SAASe,OAAOJ,EAAgB,SAAS,SAACtE,GACpEoE,EAAKc,mBAAmBX,cAAc3C,cAAgBwC,EAAK6B,iBAAiBjG,IAA2B,IAAjBA,EAAMkG,QAC5F9B,EAAKhD,UAKjB5B,KAAKoE,KAAKuC,mBAAkB,WACnB/B,EAAKgC,uBACNhC,EAAKgC,qBAAuBhC,EAAKiC,eAAeC,KAAKlC,GACrDmC,OAAOC,iBAAiB,SAAUpC,EAAKgC,2BAKnD5C,EAAA7D,UAAA8F,sBAAA,WACQjG,KAAKwG,wBACLxG,KAAKwG,wBACLxG,KAAKwG,sBAAwB,MAG7BxG,KAAK4G,uBACLG,OAAOE,oBAAoB,SAAUjH,KAAK4G,sBAC1C5G,KAAK4G,qBAAuB,OAIpC5C,EAAA7D,UAAA0G,eAAA,SAAerG,GACPR,KAAK0F,mBAAmBX,cAAc3C,cACtCpC,KAAK4B,QAIboC,EAAA7D,UAAAsG,iBAAA,SAAiBjG,GACb,QAASR,KAAK0F,mBAAmBX,cAAcmC,WAAW1G,EAAM4E,SAAWpF,KAAK0F,mBAAmBX,cAAcoC,SAAS3G,EAAM4E,UAGpIpB,EAAA7D,UAAAiH,YAAA,WACIpH,KAAKiG,wBAEDjG,KAAKiF,sBACLjF,KAAKiF,uBAGLjF,KAAKsF,UACLtF,KAAKkE,GAAGa,cAAcU,YAAYzF,KAAK0F,mBAAmBX,yCA9LrExB,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,6PAMX2D,gBAAiBC,EAAAA,wBAAwBC,OACxC5D,cAAeC,EAAAA,kBAAkBC,+pBAtJT2D,EAAAA,kBAAgDC,EAAAA,iBAAsCC,EAAAA,yCA2J7GzD,EAAAA,sBAEAA,EAAAA,sBAEAA,EAAAA,qBAEAA,EAAAA,0BAEAA,EAAAA,wBAEAA,EAAAA,0BAEAA,EAAAA,0BAEAA,EAAAA,4BAEAA,EAAAA,sBAEA0D,EAAAA,uBAEAA,EAAAA,mCAEAC,EAAAA,UAASpE,KAAA,CAAC,sBAqKf,iCALCqE,EAAAA,SAAQrE,KAAA,CAAC,CACNsE,QAAS,CAACC,EAAAA,aAAaC,EAAAA,aAAaC,EAAAA,cACpCC,QAAS,CAAClE,EAAYgE,EAAAA,cACtBG,aAAc,CAACnE,EAAYlE","sourcesContent":["import { NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,Renderer2,Inject,forwardRef,ViewChild,NgZone,EventEmitter,ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { RippleModule } from 'primeng/ripple';  \r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'p-contextMenuSub',\r\n    template: `\r\n        <ul [ngClass]=\"{'p-submenu-list':!root}\">\r\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\r\n                <li *ngIf=\"child.separator\" class=\"p-menu-separator\" [ngClass]=\"{'p-hidden': child.visible === false}\" role=\"separator\">\r\n                <li *ngIf=\"!child.separator\" #item [ngClass]=\"{'p-menuitem':true,'p-menuitem-active':item==activeItem,'p-hidden': child.visible === false}\"\r\n                    (mouseenter)=\"onItemMouseEnter($event,item,child)\" role=\"none\">\r\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url ? child.url : null\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.disabled ? null : '0'\" (click)=\"itemClick($event, child)\"\r\n                        [ngClass]=\"{'p-menuitem-link':true,'p-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\" pRipple\r\n                        [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\r\n                        <span class=\"p-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\r\n                        <span class=\"p-menuitem-text\" *ngIf=\"child.escape !== false; else htmlLabel\">{{child.label}}</span>\r\n                        <ng-template #htmlLabel><span class=\"p-menuitem-text\" [innerHTML]=\"child.label\"></span></ng-template>\r\n                        <span class=\"p-submenu-icon pi pi-angle-right\" *ngIf=\"child.items\"></span>\r\n                    </a>\r\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'p-menuitem-link-active'\" role=\"menuitem\"\r\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.disabled ? null : '0'\"\r\n                        (click)=\"itemClick($event, child)\" [ngClass]=\"{'p-menuitem-link':true,'p-disabled':child.disabled}\"\r\n                        [ngStyle]=\"child.style\" [class]=\"child.styleClass\" pRipple\r\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\r\n                        <span class=\"p-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\r\n                        <span class=\"p-menuitem-text\" *ngIf=\"child.escape !== false; else htmlRouteLabel\">{{child.label}}</span>\r\n                        <ng-template #htmlRouteLabel><span class=\"p-menuitem-text\" [innerHTML]=\"child.label\"></span></ng-template>\r\n                        <span class=\"p-submenu-icon pi pi-angle-right\" *ngIf=\"child.items\"></span>\r\n                    </a>\r\n                    <p-contextMenuSub [parentActive]=\"item==activeItem\" [item]=\"child\" *ngIf=\"child.items\"></p-contextMenuSub>\r\n                </li>\r\n            </ng-template>\r\n        </ul>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ContextMenuSub {\r\n\r\n    @Input() item: MenuItem;\r\n\r\n    @Input() root: boolean;\r\n\r\n    @Input() get parentActive(): boolean {\r\n        return this._parentActive;\r\n    }\r\n    set parentActive(value) {\r\n        this._parentActive = value;\r\n        if (!value) {\r\n            this.activeItem = null;\r\n        }\r\n    }\r\n\r\n    contextMenu: ContextMenu;\r\n\r\n    constructor(@Inject(forwardRef(() => ContextMenu)) contextMenu) {\r\n        this.contextMenu = contextMenu as ContextMenu;\r\n    }\r\n\r\n    activeItem: any;\r\n\r\n    containerOffset: any;\r\n\r\n    hideTimeout: any;\r\n\r\n    _parentActive: boolean;\r\n\r\n    onItemMouseEnter(event, item, menuitem) {\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n\r\n        if (menuitem.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.activeItem = item;\r\n\r\n        let nextElement = item.children[0].nextElementSibling;\r\n        if (nextElement) {\r\n            let sublist = nextElement.children[0];\r\n            sublist.style.zIndex = ++DomHandler.zindex;\r\n            this.position(sublist, item);\r\n        }\r\n    }\r\n\r\n    itemClick(event, item: MenuItem)  {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.items)\r\n            event.preventDefault();\r\n        else\r\n            this.contextMenu.hide();\r\n    }\r\n\r\n    listClick(event) {\r\n        this.activeItem = null;\r\n    }\r\n\r\n    position(sublist, item) {\r\n        this.containerOffset = DomHandler.getOffset(item.parentElement)\r\n        let viewport = DomHandler.getViewport();\r\n        let sublistWidth = sublist.offsetParent ? sublist.offsetWidth : DomHandler.getHiddenElementOuterWidth(sublist);\r\n        let itemOuterWidth = DomHandler.getOuterWidth(item.children[0]);\r\n        let itemOuterHeight = DomHandler.getOuterHeight(item.children[0]);\r\n        let sublistHeight = sublist.offsetHeight ? sublist.offsetHeight : DomHandler.getHiddenElementOuterHeight(sublist);\r\n\r\n        if ((parseInt(this.containerOffset.top) + itemOuterHeight + sublistHeight) > (viewport.height - DomHandler.calculateScrollbarHeight())) {\r\n            sublist.style.removeProperty('top');\r\n            sublist.style.bottom = '0px';\r\n        }\r\n        else {\r\n            sublist.style.removeProperty('bottom');\r\n            sublist.style.top = '0px';\r\n        }\r\n\r\n        if ((parseInt(this.containerOffset.left) + itemOuterWidth + sublistWidth) > (viewport.width - DomHandler.calculateScrollbarWidth())) {\r\n            sublist.style.left = -sublistWidth + 'px';\r\n        }\r\n        else {\r\n            sublist.style.left = itemOuterWidth + 'px';\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'p-contextMenu',\r\n    template: `\r\n        <div #container [ngClass]=\"'p-contextmenu p-component'\"\r\n            [class]=\"styleClass\" [ngStyle]=\"style\">\r\n            <p-contextMenuSub [item]=\"model\" [parentActive]=\"parentActive\" root=\"root\"></p-contextMenuSub>\r\n        </div>\r\n    `,\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./contextmenu.css']\r\n})\r\nexport class ContextMenu implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() global: boolean;\r\n\r\n    @Input() target: any;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() appendTo: any;\r\n\r\n    @Input() autoZIndex: boolean = true;\r\n\r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() triggerEvent: string = 'contextmenu';\r\n\r\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n\r\n    parentActive: boolean;\r\n\r\n    documentClickListener: any;\r\n\r\n    windowResizeListener: any;\r\n\r\n    triggerEventListener: any;\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone) { }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.global) {\r\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n            this.triggerEventListener = this.renderer.listen(documentTarget, this.triggerEvent, (event) => {\r\n                this.show(event);\r\n                event.preventDefault();\r\n            });\r\n        }\r\n        else if (this.target) {\r\n            this.triggerEventListener = this.renderer.listen(this.target, this.triggerEvent, (event) => {\r\n                this.show(event);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (this.appendTo) {\r\n            if (this.appendTo === 'body')\r\n                document.body.appendChild(this.containerViewChild.nativeElement);\r\n            else\r\n                DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);\r\n        }\r\n    }\r\n\r\n    show(event?: MouseEvent) {\r\n        this.position(event);\r\n        this.moveOnTop();\r\n        this.containerViewChild.nativeElement.style.display = 'block';\r\n        this.parentActive = true;\r\n        DomHandler.fadeIn(this.containerViewChild.nativeElement, 250);\r\n        this.bindGlobalListeners();\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.onShow.emit();\r\n    }\r\n\r\n    hide() {\r\n        this.containerViewChild.nativeElement.style.display = 'none';\r\n        this.parentActive = false;\r\n        this.unbindGlobalListeners();\r\n        this.onHide.emit();\r\n    }\r\n\r\n    moveOnTop() {\r\n        if (this.autoZIndex) {\r\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n        }\r\n    }\r\n\r\n    toggle(event?: MouseEvent) {\r\n        if (this.containerViewChild.nativeElement.offsetParent)\r\n            this.hide();\r\n        else\r\n            this.show(event);\r\n    }\r\n\r\n    position(event?: MouseEvent) {\r\n        if (event) {\r\n            let left = event.pageX + 1;\r\n            let top = event.pageY + 1;\r\n            let width = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.containerViewChild.nativeElement);\r\n            let height = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.containerViewChild.nativeElement);\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            //flip\r\n            if (left + width - document.body.scrollLeft > viewport.width) {\r\n                left -= width;\r\n            }\r\n\r\n            //flip\r\n            if (top + height - document.body.scrollTop > viewport.height) {\r\n                top -= height;\r\n            }\r\n\r\n            //fit\r\n            if (left < document.body.scrollLeft) {\r\n                left = document.body.scrollLeft;\r\n            }\r\n\r\n            //fit\r\n            if (top < document.body.scrollTop) {\r\n                top = document.body.scrollTop;\r\n            }\r\n\r\n            this.containerViewChild.nativeElement.style.left = left + 'px';\r\n            this.containerViewChild.nativeElement.style.top = top + 'px';\r\n        }\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if (!this.documentClickListener) {\r\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\r\n                if (this.containerViewChild.nativeElement.offsetParent && this.isOutsideClicked(event) && event.button !== 2) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            if (!this.windowResizeListener) {\r\n                this.windowResizeListener = this.onWindowResize.bind(this);\r\n                window.addEventListener('resize', this.windowResizeListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n\r\n        if (this.windowResizeListener) {\r\n            window.removeEventListener('resize', this.windowResizeListener);\r\n            this.windowResizeListener = null;\r\n        }\r\n    }\r\n\r\n    onWindowResize(event) {\r\n        if (this.containerViewChild.nativeElement.offsetParent) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event: Event) {\r\n        return !(this.containerViewChild.nativeElement.isSameNode(event.target) || this.containerViewChild.nativeElement.contains(event.target));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unbindGlobalListeners();\r\n\r\n        if (this.triggerEventListener) {\r\n            this.triggerEventListener();\r\n        }\r\n\r\n        if (this.appendTo) {\r\n            this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule,RippleModule],\r\n    exports: [ContextMenu,RouterModule],\r\n    declarations: [ContextMenu,ContextMenuSub]\r\n})\r\nexport class ContextMenuModule { }\r\n"]}