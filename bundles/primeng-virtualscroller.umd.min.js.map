{"version":3,"sources":["../../src/app/components/virtualscroller/virtualscroller.ts"],"names":["VirtualScroller","el","this","trackBy","index","item","onLazyLoad","EventEmitter","_totalRecords","page","_first","loadedPages","Object","defineProperty","prototype","val","console","log","_cache","ngAfterContentInit","_this","templates","forEach","getType","itemTemplate","template","loadingItemTemplate","headerTemplate","footerTemplate","onScrollIndexChange","lazy","createPageRange","Math","floor","rows","loadPage","range","push","ceil","value","length","includes","emit","first","getBlockableElement","nativeElement","children","scrollTo","mode","scrollToIndex","viewport","clearCache","ngOnChanges","simpleChange","Component","args","selector","changeDetection","ChangeDetectionStrategy","Default","encapsulation","ViewEncapsulation","None","ElementRef","Input","ContentChild","Header","Footer","ContentChildren","PrimeTemplate","ViewChild","CdkVirtualScrollViewport","Output","NgModule","imports","CommonModule","ScrollingModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterContentInit,Input,Output,ViewChild,EventEmitter,ContentChild,ContentChildren,QueryList,TemplateRef,ChangeDetectionStrategy,OnChanges,SimpleChanges, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Header,Footer,PrimeTemplate,SharedModule} from 'primeng/api';\r\nimport {ScrollingModule,CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\r\nimport {BlockableUI} from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'p-virtualScroller',\r\n    template:`\r\n        <div [ngClass]=\"'p-virtualscroller p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"p-virtualscroller-header\" *ngIf=\"header || headerTemplate\">\r\n                <ng-content select=\"p-header\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n            </div>\r\n            <div #content class=\"p-virtualscroller-content\">\r\n                <div class=\"p-virtualscroller-list\">\r\n                    <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\">\r\n                        <ng-container *cdkVirtualFor=\"let item of value; trackBy: trackBy; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd;\">\r\n                            <div [ngStyle]=\"{'height': itemSize + 'px'}\" class=\"p-virtualscroller-item\">\r\n                                <ng-container *ngTemplateOutlet=\"item ? itemTemplate : loadingItemTemplate; context: {$implicit: item, index: i, count: c, first: f, last: l, even: e, odd: o}\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </cdk-virtual-scroll-viewport>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-virtualscroller-footer\" *ngIf=\"footer || footerTemplate\">\r\n                <ng-content select=\"p-footer\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class VirtualScroller implements AfterContentInit,BlockableUI,OnChanges {\r\n\r\n    @Input() value: any[];\r\n\r\n    @Input() itemSize: number; \r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() scrollHeight: any;\r\n\r\n    @Input() lazy: boolean;\r\n\r\n    @Input() rows: number;\r\n\r\n    @Input() minBufferPx: number;\r\n\r\n    @Input() maxBufferPx: number;\r\n  \r\n    @Input() trackBy: Function = (index: number, item: any) => item;\r\n                \r\n    @ContentChild(Header) header: Header;\r\n\r\n    @ContentChild(Footer) footer: Footer;\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\r\n\r\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    itemTemplate: TemplateRef<any>;\r\n\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    loadingItemTemplate: TemplateRef<any>;\r\n\r\n    _totalRecords: number = 0;\r\n\r\n    page: number = 0;\r\n\r\n    _first: number = 0;\r\n\r\n    loadedPages: number[] = [];\r\n\r\n    _cache: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    @Input() get totalRecords(): number {\r\n        return this._totalRecords;\r\n    }\r\n    set totalRecords(val: number) {\r\n        this._totalRecords = val;\r\n        console.log(\"totalRecords is deprecated, provide a value with the length of virtual items instead.\");\r\n    }\r\n\r\n    @Input() get first(): number {\r\n        return this._first;\r\n    }\r\n    set first(val:number) {\r\n        this._first = val;\r\n        console.log(\"first property is deprecated, use scrollToIndex function to scroll a specific item.\");\r\n    }\r\n\r\n    @Input() get cache(): boolean {\r\n        return this._cache;\r\n    }\r\n    set cache(val: boolean) {\r\n        this._cache = val;\r\n        console.log(\"cache is deprecated as it is always on.\");\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n\r\n                case 'loadingItem':\r\n                    this.loadingItemTemplate = item.template;\r\n                break;\r\n\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onScrollIndexChange(index: number) {\r\n        if (this.lazy) {\r\n            let pageRange = this.createPageRange(Math.floor(index / this.rows));\r\n            pageRange.forEach(page => this.loadPage(page));\r\n        }\r\n    }\r\n\r\n    createPageRange(page: number) {\r\n        let range: number[] = [];\r\n\r\n        if (page !== 0) {\r\n            range.push(page - 1);\r\n        }\r\n        range.push(page);\r\n        if (page !== (Math.ceil(this.value.length / this.rows) - 1)) {\r\n            range.push(page + 1);\r\n        }\r\n\r\n        return range;\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        if (!this.loadedPages.includes(page)) {\r\n            this.onLazyLoad.emit({first: this.rows * page, rows: this.rows});\r\n            this.loadedPages.push(page);\r\n        }\r\n    }\r\n\r\n    getBlockableElement(): HTMLElementÂ {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    //@deprecated\r\n    scrollTo(index: number, mode?: ScrollBehavior): void {\r\n        this.scrollToIndex(index, mode);\r\n    }\r\n\r\n    scrollToIndex(index: number, mode?: ScrollBehavior): void {\r\n        if (this.viewport) {\r\n            this.viewport.scrollToIndex(index, mode);\r\n        }\r\n    }\r\n\r\n    clearCache() {\r\n        this.loadedPages = [];\r\n    }\r\n\r\n    ngOnChanges(simpleChange: SimpleChanges) {\r\n        if (simpleChange.value) {\r\n            if (!this.lazy) {\r\n                this.clearCache();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ScrollingModule],\r\n    exports: [VirtualScroller,SharedModule,ScrollingModule],\r\n    declarations: [VirtualScroller]\r\n})\r\nexport class VirtualScrollerModule { }\r\n\r\n"]}